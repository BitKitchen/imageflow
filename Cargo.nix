# Generated by carnix 0.7.2: /home/rin/Code/carnix/target/debug/carnix nix --src .
{ lib, buildPlatform, buildRustCrate, fetchgit }:
let kernel = buildPlatform.parsed.kernel.name;
    abi = buildPlatform.parsed.abi.name;
    include = includedFiles: src: builtins.filterSource (path: type:
      lib.lists.any (f:
        let p = toString (src + ("/" + f)); in
        (path == p) || (type == "directory" && lib.strings.hasPrefix path p)
      ) includedFiles
    ) src;
    updateFeatures = f: up: functions: builtins.deepSeq f (lib.lists.foldl' (features: fun: fun features) (lib.attrsets.recursiveUpdate f up) functions);
    mapFeatures = features: map (fun: fun { features = features; });
    mkFeatures = feat: lib.lists.foldl (features: featureName:
      if feat.${featureName} or false then
        [ featureName ] ++ features
      else
        features
    ) [] (builtins.attrNames feat);
in
rec {
  c_components_tests = f: c_components_tests_0_1_0 { features = c_components_tests_0_1_0_features { c_components_tests_0_1_0 = f; }; };
  imageflow_abi = f: imageflow_abi_0_1_0 { features = imageflow_abi_0_1_0_features { imageflow_abi_0_1_0 = f; }; };
  imageflow_c_components = f: imageflow_c_components_0_1_0 { features = imageflow_c_components_0_1_0_features { imageflow_c_components_0_1_0 = f; }; };
  imageflow_core = f: imageflow_core_0_1_0 { features = imageflow_core_0_1_0_features { imageflow_core_0_1_0 = f; }; };
  imageflow_helpers = f: imageflow_helpers_0_1_0 { features = imageflow_helpers_0_1_0_features { imageflow_helpers_0_1_0 = f; }; };
  imageflow_riapi = f: imageflow_riapi_0_1_0 { features = imageflow_riapi_0_1_0_features { imageflow_riapi_0_1_0 = f; }; };
  imageflow_server = f: imageflow_server_0_1_0 { features = imageflow_server_0_1_0_features { imageflow_server_0_1_0 = f; }; };
  imageflow_tool_lib = f: imageflow_tool_lib_0_1_0 { features = imageflow_tool_lib_0_1_0_features { imageflow_tool_lib_0_1_0 = f; }; };
  imageflow_types = f: imageflow_types_0_1_0 { features = imageflow_types_0_1_0_features { imageflow_types_0_1_0 = f; }; };
  __all = [ (c_components_tests {}) (imageflow_abi {}) (imageflow_c_components {}) (imageflow_core {}) (imageflow_helpers {}) (imageflow_riapi {}) (imageflow_server {}) (imageflow_tool_lib {}) (imageflow_types {}) ];
  adler32_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "adler32";
    version = "1.0.2";
    authors = [ "Remi Rampin <remirampin@gmail.com>" ];
    sha256 = "1974q3nysai026zhz24df506cxwi09jdzqksll4h7ibpb5n9g1d4";
    inherit dependencies buildDependencies features;
  };
  aho_corasick_0_6_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "aho-corasick";
    version = "0.6.4";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "189v919mp6rzzgjp1khpn4zlq8ls81gh43x1lmc8kbkagdlpq888";
    libName = "aho_corasick";
    crateBin = [ {  name = "aho-corasick-dot"; } ];
    inherit dependencies buildDependencies features;
  };
  ansi_term_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ansi_term";
    version = "0.11.0";
    authors = [ "ogham@bsago.me" "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>" "Josh Triplett <josh@joshtriplett.org>" ];
    sha256 = "08fk0p2xvkqpmz3zlrwnf6l8sj2vngw464rvzspzp31sbgxbwm4v";
    inherit dependencies buildDependencies features;
  };
  antidote_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "antidote";
    version = "1.0.0";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "1x2wgaw603jcjwsfvc8s2rpaqjv0aqj8mvws2ahhkvfnwkdf7icw";
    inherit dependencies buildDependencies features;
  };
  app_dirs_1_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "app_dirs";
    version = "1.2.1";
    authors = [ "Andy Barron <AndrewLBarron@gmail.com>" ];
    sha256 = "0hmbrnkj94zgzrk016i42a5wz13dd2hnf499jx0fw922s8acc40a";
    inherit dependencies buildDependencies features;
  };
  arrayref_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "arrayref";
    version = "0.3.4";
    authors = [ "David Roundy <roundyd@physics.oregonstate.edu>" ];
    sha256 = "1sy70y5kg4j0r2kqv25nwvlcpgjyziznsa4kq89vjsy51blv57gj";
    inherit dependencies buildDependencies features;
  };
  arrayvec_0_4_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "arrayvec";
    version = "0.4.7";
    authors = [ "bluss" ];
    sha256 = "0fzgv7z1x1qnyd7j32vdcadk4k9wfx897y06mr3bw1yi52iqf4z4";
    inherit dependencies buildDependencies features;
  };
  atty_0_2_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "atty";
    version = "0.2.10";
    authors = [ "softprops <d.tangren@gmail.com>" ];
    sha256 = "1h26lssj8rwaz0xhwwm5a645r49yly211amfmd243m3m0jl49i2c";
    inherit dependencies buildDependencies features;
  };
  backtrace_0_3_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace";
    version = "0.3.8";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "The Rust Project Developers" ];
    sha256 = "0qyb9af8zx29qf24rb0m08lf7dgz2vm2sc039npwvkwm717cy3mq";
    inherit dependencies buildDependencies features;
  };
  backtrace_sys_0_1_23_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace-sys";
    version = "0.1.23";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0sx7h7bl5j5dj4hlk7bcf8fwbhrxrvq2hfpy70vw2140gnlrl9dw";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  base64_0_5_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "base64";
    version = "0.5.2";
    authors = [ "Alice Maz <alice@alicemaz.com>" "Marshall Pierce <marshall@mpierce.org>" ];
    sha256 = "1xl4zf9y9mk8syl1bg8hnf99g2zxlr7xj1xii3b2j88a07c1c6f7";
    inherit dependencies buildDependencies features;
  };
  base64_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "base64";
    version = "0.6.0";
    authors = [ "Alice Maz <alice@alicemaz.com>" "Marshall Pierce <marshall@mpierce.org>" ];
    sha256 = "0ql1rmczbnww3iszc0pfc6mqa47ravpsdf525vp6s8r32nyzspl5";
    inherit dependencies buildDependencies features;
  };
  bincode_0_9_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bincode";
    version = "0.9.3";
    authors = [ "Ty Overby <ty@pre-alpha.com>" "Francesco Mazzoli <f@mazzo.li>" "David Tolnay <dtolnay@gmail.com>" "Daniel Griffen" ];
    src = fetchgit {
       url = "https://github.com/TyOverby/bincode.git";
       rev = "0bc254459489761e2a933a3bba26cba32d515794";
       sha256 = "1lrzrr2bykbfld4w071jfhjf538ji0964dx9yz1wzdfgwp5bm0li";
    };
    inherit dependencies buildDependencies features;
  };
  bitflags_0_8_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.8.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0whaj3969ysqxzk620sk1isvq6vh85516f2fplvqjrw3syz44sb2";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_9_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.9.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "18h073l5jd88rx4qdr95fjddr9rk79pb1aqnshzdnw16cfmb9rws";
    inherit dependencies buildDependencies features;
  };
  bitflags_1_0_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "1.0.3";
    authors = [ "The Rust Project Developers" ];
    sha256 = "162p4w4h1ad76awq6b5yivmls3d50m9cl27d8g588lsps6g8s5rw";
    inherit dependencies buildDependencies features;
  };
  blake2_rfc_0_2_18_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "blake2-rfc";
    version = "0.2.18";
    authors = [ "Cesar Eduardo Barros <cesarb@cesarb.eti.br>" ];
    sha256 = "0pyqrik4471ljk16prs0iwb2sam39z0z6axyyjxlqxdmf4wprf0l";
    inherit dependencies buildDependencies features;
  };
  block_buffer_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "block-buffer";
    version = "0.3.3";
    authors = [ "RustCrypto Developers" ];
    sha256 = "0ka14535hlndyig1dqxqvdv60mgmnnhfi6x87npha3x3yg5sx201";
    inherit dependencies buildDependencies features;
  };
  build_const_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "build_const";
    version = "0.2.1";
    authors = [ "Garrett Berg <vitiral@gmail.com>" ];
    sha256 = "15249xzi3qlm72p4glxgavwyq70fx2sp4df6ii0sdlrixrrp77pl";
    inherit dependencies buildDependencies features;
  };
  byte_tools_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "byte-tools";
    version = "0.2.0";
    authors = [ "The Rust-Crypto Project Developers" ];
    sha256 = "15cm6sxkk2ikrz8sxld3hv9g419j4kjzwdjp4fn53gjq07awq6il";
    inherit dependencies buildDependencies features;
  };
  byteorder_1_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "byteorder";
    version = "1.2.3";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1xghv5f5rydzsam8lnfqhfk090i8a1knb77ikbs0ik44bvrw2ij3";
    inherit dependencies buildDependencies features;
  };
  c_components_tests_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "c_components_tests";
    version = "0.1.0";
    authors = [ "Nathanael Jones <nathanael.jones@gmail.com>" "Kornel Lesi≈Ñski <kornel@geekhood.net>" ];
    src = ./.;
    workspace_member = "/home/rin/Code/imageflow/c_components/tests";
    crateBin = [ {  name = "profile_imageflow";  path = "src/profile.rs"; } ];
    build = "src/build.rs";
    inherit dependencies buildDependencies features;
  };
  cc_1_0_17_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cc";
    version = "1.0.17";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0jb8rw68iy9fj3is5gimzwyr5nwj5ip6fmi04zm9flhml0wxzf44";
    inherit dependencies buildDependencies features;
  };
  cfg_if_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cfg-if";
    version = "0.1.3";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0hphfz5qg40gr5p18gmgy2rzkqj019lii3n0dy3s0a6lnl9106k6";
    inherit dependencies buildDependencies features;
  };
  chashmap_2_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "chashmap";
    version = "2.2.0";
    authors = [ "ticki <Ticki@users.noreply.github.com>" ];
    sha256 = "137qln0qvw0nnvv8wgnnd2y44vh7qalfj11gd24l5dd4gcmd713m";
    inherit dependencies buildDependencies features;
  };
  chrono_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "chrono";
    version = "0.4.2";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" "Brandon W Maister <quodlibetor@gmail.com>" ];
    sha256 = "1zp63v1g56kfjnazmqg8s4gb66l0ra8ggn3gzqbf9sr8d5lnfzak";
    inherit dependencies buildDependencies features;
  };
  clap_2_31_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "clap";
    version = "2.31.2";
    authors = [ "Kevin K. <kbknapp@gmail.com>" ];
    sha256 = "0r24ziw85a8y1sf2l21y4mvv5qan3rjafcshpyfsjfadqfxsij72";
    inherit dependencies buildDependencies features;
  };
  cloudabi_0_0_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cloudabi";
    version = "0.0.3";
    authors = [ "Nuxi (https://nuxi.nl/) and contributors" ];
    sha256 = "1z9lby5sr6vslfd14d6igk03s7awf91mxpsfmsp3prxbxlk0x7h5";
    libPath = "cloudabi.rs";
    inherit dependencies buildDependencies features;
  };
  color_quant_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "color_quant";
    version = "1.0.0";
    authors = [ "nwin <nwin@users.noreply.github.com>" ];
    sha256 = "0jwr40lr115zm2bydk1wja12gcxrmgsx0n1z1pipq00sab71maaj";
    inherit dependencies buildDependencies features;
  };
  conduit_mime_types_0_7_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "conduit-mime-types";
    version = "0.7.3";
    authors = [ "wycats@gmail.com" ];
    sha256 = "0r49ncskqr5977br7hl1mabjf8zyqqfxmyd6s4gp93h6yvhc3hd8";
    inherit dependencies buildDependencies features;
  };
  constant_time_eq_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "constant_time_eq";
    version = "0.1.3";
    authors = [ "Cesar Eduardo Barros <cesarb@cesarb.eti.br>" ];
    sha256 = "03qri9hjf049gwqg9q527lybpg918q6y5q4g9a5lma753nff49wd";
    inherit dependencies buildDependencies features;
  };
  core_foundation_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "core-foundation";
    version = "0.2.3";
    authors = [ "The Servo Project Developers" ];
    sha256 = "1g0vpya5h2wa0nlz4a74jar6y8z09f0p76zbzfqrm3dbfsrld1pm";
    inherit dependencies buildDependencies features;
  };
  core_foundation_sys_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "core-foundation-sys";
    version = "0.2.3";
    authors = [ "The Servo Project Developers" ];
    sha256 = "19s0d03294m9s5j8cvy345db3gkhs2y02j5268ap0c6ky5apl53s";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  crc_1_8_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crc";
    version = "1.8.1";
    authors = [ "Rui Hu <code@mrhooray.com>" ];
    sha256 = "00m9jjqrddp3bqyanvyxv0hf6s56bx1wy51vcdcxg4n2jdhg109s";
    inherit dependencies buildDependencies features;
  };
  crossbeam_deque_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-deque";
    version = "0.2.0";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "1h3n1p1qy45b6388j3svfy1m72xlcx9j9a5y0mww6jz8fmknipnb";
    inherit dependencies buildDependencies features;
  };
  crossbeam_epoch_0_3_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-epoch";
    version = "0.3.1";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "1ljrrpvalabi3r2nnpcz7rqkbl2ydmd0mrrr2fv335f7d46xgfxa";
    inherit dependencies buildDependencies features;
  };
  crossbeam_utils_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-utils";
    version = "0.2.2";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "0jiwzxv0lysjq68yk4bzkygrf69zhdidyw55nxlmimxlm6xv0j4m";
    inherit dependencies buildDependencies features;
  };
  daggy_0_5_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "daggy";
    version = "0.5.0";
    authors = [ "mitchmindtree <mitchell.nordine@gmail.com>" ];
    sha256 = "0z3646ddb6v9snjvd25rjy6hrx77bf74iwgb2am06icqirixrd51";
    inherit dependencies buildDependencies features;
  };
  difference_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "difference";
    version = "1.0.0";
    authors = [ "Johann Hofmann <mail@johann-hofmann.com>" ];
    sha256 = "0r1p2diin8zykfiifv6v9i3ajimdb1rg6qzxkrfw2n2iy57846qn";
    crateBin = [ {  name = "difference"; } ];
    inherit dependencies buildDependencies features;
  };
  digest_0_7_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "digest";
    version = "0.7.2";
    authors = [ "RustCrypto Developers" ];
    sha256 = "1aqrvkyiymgf12nnn6ivfdry479czcv69z35szgr8jiiymrmp0v4";
    inherit dependencies buildDependencies features;
  };
  dssim_2_9_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dssim";
    version = "2.9.9";
    authors = [ "Kornel <pornel@pornel.net>" ];
    sha256 = "1z59d802ga839qhh99c1n8j4z6ggy9yly9cs0gzs9k3m6l88ahpc";
    crateBin = [ {  name = "dssim";  path = "src/main.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  dtoa_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dtoa";
    version = "0.4.2";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1bxsh6fags7nr36vlz07ik2a1rzyipc8x1y30kjk832hf2pzadmw";
    inherit dependencies buildDependencies features;
  };
  dunce_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dunce";
    version = "0.1.1";
    authors = [ "Kornel <kornel@geekhood.net>" ];
    sha256 = "127f4is0g4p1nqgd26wfd7vjb4gya96syj8ylqj1zsmnh5g65jbl";
    inherit dependencies buildDependencies features;
  };
  either_1_5_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "either";
    version = "1.5.0";
    authors = [ "bluss" ];
    sha256 = "1f7kl2ln01y02m8fpd2zrdjiwqmgfvl9nxxrfry3k19d1gd2bsvz";
    inherit dependencies buildDependencies features;
  };
  enum_derive_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "enum_derive";
    version = "0.1.7";
    authors = [ "Daniel Keep <daniel.keep@gmail.com>" ];
    src = fetchgit {
       url = "https://github.com/DanielKeep/rust-custom-derive.git";
       rev = "1252f258cdb9b7c9867f937c52c2f5c0e69a9c03";
       sha256 = "1yr3fdc6x6078qlgv00llyb2a5jmhmdg56yp5fnzrd4ds5yh10ks";
    };
    inherit dependencies buildDependencies features;
  };
  env_logger_0_4_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "env_logger";
    version = "0.4.3";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0nrx04p4xa86d5kc7aq4fwvipbqji9cmgy449h47nc9f1chafhgg";
    inherit dependencies buildDependencies features;
  };
  error_0_1_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "error";
    version = "0.1.9";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "15nczsfw869jn7f2q225b3xh097442j8ahcy1ayj7az2k1k6j3jm";
    inherit dependencies buildDependencies features;
  };
  error_chain_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "error-chain";
    version = "0.11.0";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" ];
    sha256 = "19nz17q6dzp0mx2jhh9qbj45gkvvgcl7zq9z2ai5a8ihbisfj6d7";
    inherit dependencies buildDependencies features;
  };
  fake_simd_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fake-simd";
    version = "0.1.2";
    authors = [ "The Rust-Crypto Project Developers" ];
    sha256 = "1a0f1j66nkwfy17s06vm2bn9vh8vy8llcijfhh9m10p58v08661a";
    inherit dependencies buildDependencies features;
  };
  fixedbitset_0_1_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fixedbitset";
    version = "0.1.9";
    authors = [ "bluss" ];
    sha256 = "1bkb5aq7h9p4rzlgxagnda1f0dd11q0qz41bmdy11z18q1p8igy1";
    inherit dependencies buildDependencies features;
  };
  flate2_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "flate2";
    version = "1.0.1";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0hi1r0sz8ca750hq9ym6d3n99g6rmmm8m8hadz2v49pfh6jd6svc";
    inherit dependencies buildDependencies features;
  };
  fnv_1_0_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fnv";
    version = "1.0.6";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "128mlh23y3gg6ag5h8iiqlcbl59smisdzraqy88ldrf75kbw27ip";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  foreign_types_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "foreign-types";
    version = "0.3.2";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "105n8sp2djb1s5lzrw04p7ss3dchr5qa3canmynx396nh3vwm2p8";
    inherit dependencies buildDependencies features;
  };
  foreign_types_shared_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "foreign-types-shared";
    version = "0.1.1";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0b6cnvqbflws8dxywk4589vgbz80049lz4x1g9dfy4s1ppd3g4z5";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "0jrf4shb1699r4la8z358vri8318w4mdi6qzfqy30p2ymjlca4gk";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_sys_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon-sys";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "08jp1zxrm9jbrr6l26bjal4dbm8bxfy57ickdgibsqxr1n9j3hf5";
    inherit dependencies buildDependencies features;
  };
  futures_0_1_21_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "futures";
    version = "0.1.21";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0v4xrgkqx189b3b4lad2z5l9ay261p9412bzcdh1z6agxwhldr40";
    inherit dependencies buildDependencies features;
  };
  generic_array_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "generic-array";
    version = "0.9.0";
    authors = [ "Bart≈Çomiej Kami≈Ñski <fizyk20@gmail.com>" ];
    sha256 = "1gk3g5yxvh361syfz38nlf6vg7d0qx7crpa83mnqzaf9dymz19g7";
    libName = "generic_array";
    inherit dependencies buildDependencies features;
  };
  getopts_0_2_17_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "getopts";
    version = "0.2.17";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1rifkxn7njr2w1dsa29hrm26ywgcg8gv1ms00g3vs5mjiabxk0jv";
    inherit dependencies buildDependencies features;
  };
  gif_0_10_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "gif";
    version = "0.10.0";
    authors = [ "nwin <nwin@users.noreply.github.com>" ];
    sha256 = "0xb4ny3b56ghb917nj1wifglvfnm9ghn10icl6m4g556c73k70mx";
    inherit dependencies buildDependencies features;
  };
  glob_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "glob";
    version = "0.2.11";
    authors = [ "The Rust Project Developers" ];
    sha256 = "104389jjxs8r2f5cc9p0axhjmndgln60ih5x4f00ccgg9d3zarlf";
    inherit dependencies buildDependencies features;
  };
  http_muncher_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "http-muncher";
    version = "0.3.2";
    authors = [ "Nikita Baksalyar <nikita.baksalyar@gmail.com>" ];
    sha256 = "17ivwahqhn29x5pzn6c7gbxig2kxzjxbic64hn9wygq61h2rnvn5";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  httparse_1_2_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "httparse";
    version = "1.2.4";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "169grgxpsq0jaa2fk913z692a6qi8c2n1kypsay124b37720d8ll";
    inherit dependencies buildDependencies features;
  };
  hyper_0_10_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "hyper";
    version = "0.10.12";
    authors = [ "Sean McArthur <sean.monstar@gmail.com>" "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "074a6cpz1nznndj933jwyi9f2h7zwwgi0cnra7d1c7qldbfx95ig";
    inherit dependencies buildDependencies features;
  };
  hyper_native_tls_0_2_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "hyper-native-tls";
    version = "0.2.4";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "1niqi1z1a3xfb9qaawy3fzrgaf8qwr925fqjswlrdjczq176f1iy";
    inherit dependencies buildDependencies features;
  };
  hyper_openssl_0_2_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "hyper-openssl";
    version = "0.2.7";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0xfc64m15lx1l9nn3ad7713kvaiir1l8vrpmymhp7qclwi4197sj";
    inherit dependencies buildDependencies features;
  };
  idna_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "idna";
    version = "0.1.4";
    authors = [ "The rust-url developers" ];
    sha256 = "15j44qgjx1skwg9i7f4cm36ni4n99b1ayx23yxx7axxcw8vjf336";
    inherit dependencies buildDependencies features;
  };
  ieee754_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ieee754";
    version = "0.2.2";
    authors = [ "Huon Wilson <dbau.pp@gmail.com>" ];
    sha256 = "1x69p42vg3aahcp2pjd36nq0i8bbs0a715lb155vgyrrp7nvpvyd";
    inherit dependencies buildDependencies features;
  };
  imageflow_abi_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imageflow_abi";
    version = "0.1.0";
    authors = [ "Nathanael Jones <nathanael.jones@gmail.com>" ];
    src = ./.;
    workspace_member = "/home/rin/Code/imageflow/imageflow_abi";
    libName = "imageflow";
    #type = "cdylib";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  imageflow_c_components_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imageflow_c_components";
    version = "0.1.0";
    authors = [ "Nathanael Jones <nathanael.jones@gmail.com>" "Kornel Lesi≈Ñski <kornel@geekhood.net>" ];
    src = ./c_components;
    workspace_member = "/home/rin/Code/imageflow/c_components";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  imageflow_core_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imageflow_core";
    version = "0.1.0";
    authors = [ "Nathanael Jones <nathanael.jones@gmail.com>" ];
    src = ./.;
    workspace_member = "/home/rin/Code/imageflow/imageflow_core";
    inherit dependencies buildDependencies features;
  };
  imageflow_helpers_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imageflow_helpers";
    version = "0.1.0";
    authors = [ "Nathanael Jones <nathanael.jones@gmail.com>" ];
    src = ./.;
    workspace_member = "/home/rin/Code/imageflow/imageflow_helpers";
    inherit dependencies buildDependencies features;
  };
  imageflow_riapi_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imageflow_riapi";
    version = "0.1.0";
    authors = [ "Nathanael Jones <nathanael.jones@gmail.com>" ];
    src = ./.;
    workspace_member = "/home/rin/Code/imageflow/imageflow_riapi";
    inherit dependencies buildDependencies features;
  };
  imageflow_server_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imageflow_server";
    version = "0.1.0";
    authors = [ "Nathanael Jones <nathanael.jones@gmail.com>" ];
    src = ./.;
    workspace_member = "/home/rin/Code/imageflow/imageflow_server";
    crateBin = [ {  name = "imageflow_server";  path = "src/main.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  imageflow_tool_lib_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imageflow_tool_lib";
    version = "0.1.0";
    authors = [ "Nathanael Jones <nathanael.jones@gmail.com>" ];
    src = ./.;
    workspace_member = "/home/rin/Code/imageflow/imageflow_tool";
    crateBin = [ {  name = "imageflow_tool";  path = "src/main.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  imageflow_types_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imageflow_types";
    version = "0.1.0";
    authors = [ "Nathanael Jones <imageflow@imazen.io>" ];
    src = ./.;
    workspace_member = "/home/rin/Code/imageflow/imageflow_types";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  imagequant_2_11_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imagequant";
    version = "2.11.9";
    authors = [ "Kornel <kornel@pngquant.org>" ];
    sha256 = "14c3399mk6jivqjv50g87vmpv5jp5xkhf8hnq3kva55jzxfrcsqa";
    inherit dependencies buildDependencies features;
  };
  imagequant_sys_2_12_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imagequant-sys";
    version = "2.12.0";
    authors = [ "Kornel LesinÃÅski <kornel@pngquant.org>" ];
    sha256 = "17m0sdxl42k2blf0z4nz941xdni1glw5dvs3sd7vny2179z8xbqm";
    libPath = "rust/libimagequant.rs";
    libName = "imagequant_sys";
    #type = "cdylib";
    build = "rust/build.rs";
    inherit dependencies buildDependencies features;
  };
  imgref_1_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imgref";
    version = "1.3.4";
    authors = [ "Kornel LesinÃÅski <kornel@geekhood.net>" ];
    sha256 = "0fzjyvlwc2d4vnpj579msa00qi34nnxb5slb4ivmgssb8f1xjj48";
    inherit dependencies buildDependencies features;
  };
  iron_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "iron";
    version = "0.5.1";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" "Zach Pomerantz <zmp@umich.edu>" "Michael Sproul <micsproul@gmail.com>" "Patrick Tran <patrick.tran06@gmail.com>" ];
    sha256 = "0wzl521jvbckspjgmlhgx1cx4fr9kr64iff1bdxbd9f28w49sbdx";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  itertools_0_7_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itertools";
    version = "0.7.8";
    authors = [ "bluss" ];
    sha256 = "0ib30cd7d1icjxsa13mji1gry3grp72kx8p33yd84mphdbc3d357";
    inherit dependencies buildDependencies features;
  };
  itoa_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itoa";
    version = "0.4.1";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1jyrsmrm5q4r2ipmq5hvvkqg0mgnlbk44lm7gr0v9ymvbrh2gbij";
    inherit dependencies buildDependencies features;
  };
  kernel32_sys_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "kernel32-sys";
    version = "0.2.2";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lrw1hbinyvr6cp28g60z97w32w8vsk6pahk64pmrv2fmby8srfj";
    libName = "kernel32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  language_tags_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "language-tags";
    version = "0.2.2";
    authors = [ "Pyfisch <pyfisch@gmail.com>" ];
    sha256 = "1zkrdzsqzzc7509kd7nngdwrp461glm2g09kqpzaqksp82frjdvy";
    inherit dependencies buildDependencies features;
  };
  lazy_static_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "0.2.11";
    authors = [ "Marvin L√∂bel <loebel.marvin@gmail.com>" ];
    sha256 = "1x6871cvpy5b96yv4c7jvpq316fp5d4609s9py7qk6cd6x9k34vm";
    inherit dependencies buildDependencies features;
  };
  lazy_static_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "1.0.1";
    authors = [ "Marvin L√∂bel <loebel.marvin@gmail.com>" ];
    sha256 = "0c9f86fk0z18fzmjzkbx23wsah2lxpy09wcld5x4p6s9rkys3cj4";
    inherit dependencies buildDependencies features;
  };
  lcms2_5_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lcms2";
    version = "5.0.1";
    authors = [ "Kornel Lesi≈Ñski <kornel@geekhood.net>" ];
    sha256 = "1x14yqvpm4q1wln31cn3wqa907lsyqgjg7czkg8shbarv4i8857i";
    inherit dependencies buildDependencies features;
  };
  lcms2_sys_2_4_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lcms2-sys";
    version = "2.4.8";
    authors = [ "Kornel Lesi≈Ñski <kornel@geekhood.net>" ];
    sha256 = "1zj0x3002k6p8rivj693kd87ng7by3qsp0cm36daf6bag9rkvsby";
    build = "src/build.rs";
    inherit dependencies buildDependencies features;
  };
  libc_0_2_42_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libc";
    version = "0.2.42";
    authors = [ "The Rust Project Developers" ];
    sha256 = "064v49hz1zpl081w8c4vwikrkhaxp06y4i9l7x7wx6bjpwp19pjx";
    inherit dependencies buildDependencies features;
  };
  libflate_0_1_14_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libflate";
    version = "0.1.14";
    authors = [ "Takeru Ohta <phjgt308@gmail.com>" ];
    sha256 = "03zq769bfffg3iyp2vkkjsmkskabrxiyh5khzppyyngm8w9xpdsc";
    inherit dependencies buildDependencies features;
  };
  libpng_sys_0_2_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libpng-sys";
    version = "0.2.6";
    authors = [ "Kornel <kornel@geekhood.net>" ];
    sha256 = "1rakrqk4glpr6xch02bspbcz2fjlkqslr1mw15bxjcwjj72ncfw3";
    inherit dependencies buildDependencies features;
  };
  libz_sys_1_0_18_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libz-sys";
    version = "1.0.18";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0lr0rvmmfbfa4g7mhi0l93i8jq86pfcssdv4d40kzfy45ajdcgim";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  linked_hash_map_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "linked-hash-map";
    version = "0.4.2";
    authors = [ "Stepan Koltsov <stepan.koltsov@gmail.com>" "Andrew Paseltiner <apaseltiner@gmail.com>" ];
    sha256 = "04da208h6jb69f46j37jnvsw2i1wqplglp4d61csqcrhh83avbgl";
    inherit dependencies buildDependencies features;
  };
  lockless_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lockless";
    version = "0.2.0";
    authors = [ "Diggory Blake <diggsey@googlemail.com>" ];
    sha256 = "1d7c2fghhc0dgljfqni4y8w6pbhakbriavdmh3pv2hnn6rjg79yg";
    inherit dependencies buildDependencies features;
  };
  lodepng_2_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lodepng";
    version = "2.1.5";
    authors = [ "Kornel <kornel@geekhood.net>" "Lode Vandevenne <lvandeve@gmail.com>" ];
    sha256 = "1p80cwcdgin3fjbgvbd1s3a9fagix4zqppdz3mn6kpr4njg2a9gi";
    inherit dependencies buildDependencies features;
  };
  log_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.3.9";
    authors = [ "The Rust Project Developers" ];
    sha256 = "19i9pwp7lhaqgzangcpw00kc3zsgcqcx84crv07xgz3v7d3kvfa2";
    inherit dependencies buildDependencies features;
  };
  log_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.4.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "01vm8yy3wngvyj6qp1x3xpcb4xq7v67yn9l7fsma8kz28mliz90d";
    inherit dependencies buildDependencies features;
  };
  logger_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "logger";
    version = "0.3.0";
    authors = [ "Alexander Irbis <irbis.labs@gmail.com>" "Jonathan Reem <jonathan.reem@gmail.com>" "Michael Reinhard <mcreinhard@gmail.com>" ];
    src = fetchgit {
       url = "https://github.com/iron/logger.git";
       rev = "0daead5fe10c3cd0c4738767c162dc63a59c3fb3";
       sha256 = "179wirxzdm6jjclnrqfwijiha5qjny78p4y394qvvalv0rjjlk6w";
    };
    inherit dependencies buildDependencies features;
  };
  lru_cache_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lru-cache";
    version = "0.1.1";
    authors = [ "Stepan Koltsov <stepan.koltsov@gmail.com>" ];
    sha256 = "1hl6kii1g54sq649gnscv858mmw7a02xj081l4vcgvrswdi2z8fw";
    inherit dependencies buildDependencies features;
  };
  lzw_0_10_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lzw";
    version = "0.10.0";
    authors = [ "nwin <nwin@users.noreply.github.com>" ];
    sha256 = "1cfsy2w26kbz9bjaqp9dh1wyyh47rpmhwvj4jpc1rmffbf438fvb";
    inherit dependencies buildDependencies features;
  };
  macro_attr_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "macro-attr";
    version = "0.2.1";
    authors = [ "Daniel Keep <daniel.keep@gmail.com>" ];
    src = fetchgit {
       url = "https://github.com/DanielKeep/rust-custom-derive.git";
       rev = "1252f258cdb9b7c9867f937c52c2f5c0e69a9c03";
       sha256 = "1yr3fdc6x6078qlgv00llyb2a5jmhmdg56yp5fnzrd4ds5yh10ks";
    };
    inherit dependencies buildDependencies features;
  };
  matches_0_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "matches";
    version = "0.1.6";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "1zlrqlbvzxdil8z8ial2ihvxjwvlvg3g8dr0lcdpsjclkclasjan";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  memchr_2_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memchr";
    version = "2.0.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
    sha256 = "0ls2y47rjwapjdax6bp974gdp06ggm1v8d1h69wyydmh1nhgm5gr";
    inherit dependencies buildDependencies features;
  };
  memoffset_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memoffset";
    version = "0.2.1";
    authors = [ "Gilad Naaman <gilad.naaman@gmail.com>" ];
    sha256 = "00vym01jk9slibq2nsiilgffp7n6k52a4q3n4dqp0xf5kzxvffcf";
    inherit dependencies buildDependencies features;
  };
  mime_0_2_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mime";
    version = "0.2.6";
    authors = [ "Sean McArthur <sean.monstar@gmail.com>" ];
    sha256 = "1skwwa0j3kqd8rm9387zgabjhp07zj99q71nzlhba4lrz9r911b3";
    inherit dependencies buildDependencies features;
  };
  miniz_oxide_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "miniz_oxide";
    version = "0.1.2";
    authors = [ "Frommi <daniil.liferenko@gmail.com>" ];
    sha256 = "1qbrc85w8cyhyhrr4d5lv748cdn72l5i7h68n5w0bgq1jg2iby25";
    inherit dependencies buildDependencies features;
  };
  miniz_oxide_c_api_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "miniz_oxide_c_api";
    version = "0.1.2";
    authors = [ "Frommi <daniil.liferenko@gmail.com>" ];
    sha256 = "0j8jznyx6p8x1ankjmx3f7ndpgrwf4f31df84qckl1jj66vzz6fa";
    #type = "rlib";
    build = "src/build.rs";
    inherit dependencies buildDependencies features;
  };
  mockito_0_10_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mockito";
    version = "0.10.0";
    authors = [ "Florin Lipan <florinlipan@gmail.com>" ];
    sha256 = "0ib98a78wn15669jmic8n8qd6ax6jbkaz9126bjx8g56i3608b1k";
    crateBin = [ {  name = "mockito-server";  path = "src/main.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  modifier_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "modifier";
    version = "0.1.0";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1zicszfn54wir5nf40jmpq55in2s7xcdqn496wpgj7ckxyh82gfd";
    inherit dependencies buildDependencies features;
  };
  mount_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mount";
    version = "0.3.0";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "03k43dq8hilw6idfnafrsi404xa7mlh7v6avipl38fbsr9qn7qhs";
    inherit dependencies buildDependencies features;
  };
  moz_cheddar_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "moz-cheddar";
    version = "0.4.2";
    authors = [ "Sean Marshallsay <srm.1708@gmail.com>" "Matthew Gregan <kinetik@flim.org>" ];
    sha256 = "0qmcnxblp3hpwrr455vj541j7f5zp1qy8fyp2fwz12hs4yvj2vfw";
    libPath = "src/lib.rs";
    libName = "cheddar";
    crateBin = [ {  name = "cheddar";  path = "src/bin/cheddar.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  mozjpeg_0_8_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mozjpeg";
    version = "0.8.5";
    authors = [ "Kornel <kornel@geekhood.net>" ];
    sha256 = "1pj25dvhb1r5v09c34crpcrgrkb1lc5vvn8cx454xxiw9qhpvy54";
    inherit dependencies buildDependencies features;
  };
  mozjpeg_sys_0_5_13_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mozjpeg-sys";
    version = "0.5.13";
    authors = [ "Kornel <pornel@pornel.net>" ];
    sha256 = "1qadl8bnx1zx9dzx2lbfdb3yc1ag0i8vzqnspdj9qqc975bqa1pp";
    libName = "mozjpeg_sys";
    #type = "staticlib";
    build = "src/build.rs";
    inherit dependencies buildDependencies features;
  };
  msdos_time_0_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "msdos_time";
    version = "0.1.6";
    authors = [ "Mathijs van de Nes <git@mathijs.vd-nes.nl>" ];
    sha256 = "15grwfydhbfv6g67q5gz4fdha9va97ylsavl4250wlg46h980hc0";
    inherit dependencies buildDependencies features;
  };
  nasm_rs_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nasm-rs";
    version = "0.1.3";
    authors = [ "Allen Goodman <allen@goodman.io>" "Gavin Massey <mdk@mystacktrace.org>" "Jerome Rasky <jyrome.112@gmail.com>" "Justinas Stankeviƒçius <justinas@users.noreply.github.com>" "Kornel Lesinski <kornel@geekhood.net>" ];
    sha256 = "17qlaa53hffsh48n9f2s18jgy3xrdzp9iqyc726s470s0xpfky80";
    inherit dependencies buildDependencies features;
  };
  native_tls_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "native-tls";
    version = "0.1.5";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "11f75qmbny5pnn6zp0vlvadrvc9ph9qsxiyn4n6q02xyd93pxxlf";
    inherit dependencies buildDependencies features;
  };
  nodrop_0_1_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nodrop";
    version = "0.1.12";
    authors = [ "bluss" ];
    sha256 = "1b9rxvdg8061gxjc239l9slndf0ds3m6fy2sf3gs8f9kknqgl49d";
    inherit dependencies buildDependencies features;
  };
  num_0_1_42_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num";
    version = "0.1.42";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1632gczzrmmxdsj3jignwcr793jq8vxw3qkdzpdvbip3vaf1ljgq";
    inherit dependencies buildDependencies features;
  };
  num_bigint_0_1_44_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-bigint";
    version = "0.1.44";
    authors = [ "The Rust Project Developers" ];
    sha256 = "13sf3jhjs6y7cnfrdxns0k8vmbxwjl038wm3yl08b3dbrla7hvx1";
    inherit dependencies buildDependencies features;
  };
  num_complex_0_1_43_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-complex";
    version = "0.1.43";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1rs1rhwcxsdamllz1p88ibi8g8s4hhx8rqvvp819x71zphgpqsa2";
    inherit dependencies buildDependencies features;
  };
  num_integer_0_1_38_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-integer";
    version = "0.1.38";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0xcyvsg43zrmaanf546l67mz816g5jigxi8818rx5y95xid722yy";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  num_iter_0_1_37_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-iter";
    version = "0.1.37";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1rglyvi4yjfxfvfm2s7i60g1dkl5xmsyi77g6vy53jb11r6wl8ly";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  num_rational_0_1_42_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-rational";
    version = "0.1.42";
    authors = [ "The Rust Project Developers" ];
    sha256 = "09gfmmak5p77rvi2mcsqsalzi81nc93nc8ipchnjv5b8lwn8mm89";
    inherit dependencies buildDependencies features;
  };
  num_traits_0_2_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.2.4";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0j0n4lcxbqq8q9v2qcyybz6aqxvmghzl5q2p19ds0c8fl5wviqmj";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  num_cpus_1_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num_cpus";
    version = "1.8.0";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1y6qnd9r8ga6y8mvlabdrr73nc8cshjjlzbvnanzyj9b8zzkfwk2";
    inherit dependencies buildDependencies features;
  };
  ole32_sys_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ole32-sys";
    version = "0.2.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "05hxalvpxl28bi7kvvr04kbyjfm3a8vrgcsaxfg02rh2x04kf2d0";
    libName = "ole32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  openssl_0_9_24_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "openssl";
    version = "0.9.24";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0wzm3c11g3ndaqyzq36mcdcm1q4a8pmsyi33ibybhjz28g2z0f79";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  openssl_sys_0_9_32_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "openssl-sys";
    version = "0.9.32";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0j5ac55id0za5xpadzgl7c2wqv04r9cvnddjdgnpnkhfbx1f5svl";
    build = "build/main.rs";
    inherit dependencies buildDependencies features;
  };
  option_filter_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "option-filter";
    version = "1.0.1";
    authors = [ "Chris Wong <lambda.fairy@gmail.com>" ];
    sha256 = "1ynp2ak6a9rvd1hq384ilrcapvn6m5cj0d99c8bs4am6dbyrgp8s";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  ordermap_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ordermap";
    version = "0.3.5";
    authors = [ "bluss" ];
    sha256 = "0b6vxfyh627yqm6war3392g1hhi4dbn49ibx2qv6mv490jdhv7d3";
    inherit dependencies buildDependencies features;
  };
  owning_ref_0_2_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "owning_ref";
    version = "0.2.4";
    authors = [ "Marvin L√∂bel <loebel.marvin@gmail.com>" ];
    sha256 = "19y3brv9zw0gamncijb5701zb1g005p5asi4x62samicq993b9hw";
    inherit dependencies buildDependencies features;
  };
  owning_ref_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "owning_ref";
    version = "0.3.3";
    authors = [ "Marvin L√∂bel <loebel.marvin@gmail.com>" ];
    sha256 = "13ivn0ydc0hf957ix0f5si9nnplzzykbr70hni1qz9m19i9kvmrh";
    inherit dependencies buildDependencies features;
  };
  parking_lot_0_3_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "parking_lot";
    version = "0.3.8";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "0ww9i7yafbck7m30vxbbqv8nz89cc74f5xddwfpkc512mxnr7byg";
    inherit dependencies buildDependencies features;
  };
  parking_lot_0_5_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "parking_lot";
    version = "0.5.5";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "0balxl593apy0l70z6dzk6c0r9707hgw2c9yav5asjc87dj6fx7l";
    inherit dependencies buildDependencies features;
  };
  parking_lot_core_0_2_14_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "parking_lot_core";
    version = "0.2.14";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "0giypb8ckkpi34p14nfk4b19c7przj4jxs95gs7x2v5ncmi0y286";
    inherit dependencies buildDependencies features;
  };
  percent_encoding_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "percent-encoding";
    version = "1.0.1";
    authors = [ "The rust-url developers" ];
    sha256 = "04ahrp7aw4ip7fmadb0bknybmkfav0kk0gw4ps3ydq5w6hr0ib5i";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  persistent_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "persistent";
    version = "0.3.0";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "177xlsv4cjxmlc4pjxnixln8llh5xf06a5imxl951m0qp1y1jhpc";
    inherit dependencies buildDependencies features;
  };
  petgraph_0_4_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "petgraph";
    version = "0.4.12";
    authors = [ "bluss" "mitchmindtree" ];
    sha256 = "1v2b66dx1r2n8i447i1m76x1b5wbmhigxy1ka126439a5fvs3xlg";
    inherit dependencies buildDependencies features;
  };
  pkg_config_0_3_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pkg-config";
    version = "0.3.11";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "177kbs465skvzmb2d9bh7aa5lqm0npfig12awcbd34c6k6nlyr5h";
    inherit dependencies buildDependencies features;
  };
  plugin_0_2_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "plugin";
    version = "0.2.6";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "13byr5ilqcs83zlj3sm9chs70jim6n6dwgdrzmzjdk6jz35d376a";
    inherit dependencies buildDependencies features;
  };
  podio_0_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "podio";
    version = "0.1.6";
    authors = [ "Mathijs van de Nes <git@mathijs.vd-nes.nl>" ];
    sha256 = "1dkhy2cv6wk4nrk0ak2s2w67bqbbxv9ymsxmwrkhz9fs84rx6mz4";
    inherit dependencies buildDependencies features;
  };
  proc_macro2_0_4_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "proc-macro2";
    version = "0.4.6";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0lnxcavz5nqxypjyz6isffqiyxb3h0021nkn8djsl33a4qd4pxv6";
    inherit dependencies buildDependencies features;
  };
  quick_error_1_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quick-error";
    version = "1.2.2";
    authors = [ "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" ];
    sha256 = "192a3adc5phgpibgqblsdx1b421l5yg9bjbmv552qqq9f37h60k5";
    inherit dependencies buildDependencies features;
  };
  quote_0_6_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.6.3";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1bqm3fjww2ivnshzxg54nnn1dxrx1cmvpjc5d50xjvjfg9xjb4b5";
    inherit dependencies buildDependencies features;
  };
  rand_0_3_22_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.3.22";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0wrj12acx7l4hr7ag3nz8b50yhp8ancyq988bzmnnsxln67rsys0";
    inherit dependencies buildDependencies features;
  };
  rand_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.4.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0h8pkg23wb67i8904sm76iyr1jlmhklb85vbpz9c9191a24xzkfm";
    inherit dependencies buildDependencies features;
  };
  rand_0_5_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.5.0";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0plnicm1kwjdxncazkri029hnzl48q2y6f4q3xknd6i00v3bx2mz";
    inherit dependencies buildDependencies features;
  };
  rand_core_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand_core";
    version = "0.2.0";
    authors = [ "The Rust Project Developers" ];
    sha256 = "07l963m2zacc9i1l2jgxng8cmkipfgk26l3pp4pdi02yag9zi40i";
    inherit dependencies buildDependencies features;
  };
  rayon_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rayon";
    version = "1.0.1";
    authors = [ "Niko Matsakis <niko@alum.mit.edu>" "Josh Stone <cuviper@gmail.com>" ];
    sha256 = "1ig3gr6r4294v4px1dmghllz14y87fdnfp19syymnrwmwf2k2y76";
    inherit dependencies buildDependencies features;
  };
  rayon_core_1_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rayon-core";
    version = "1.4.0";
    authors = [ "Niko Matsakis <niko@alum.mit.edu>" "Josh Stone <cuviper@gmail.com>" ];
    sha256 = "1gmg5fmgvhzks7b05g3ms7x8h1xxqnfkg28wvhzwpdzjljcbnr23";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  redox_syscall_0_1_40_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_syscall";
    version = "0.1.40";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "132rnhrq49l3z7gjrwj2zfadgw6q0355s6a7id7x7c0d7sk72611";
    libName = "syscall";
    inherit dependencies buildDependencies features;
  };
  redox_termios_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_termios";
    version = "0.1.1";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "04s6yyzjca552hdaqlvqhp3vw0zqbc304md5czyd3axh56iry8wh";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  regex_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex";
    version = "0.2.11";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0r50cymxdqp0fv1dxd22mjr6y32q450nwacd279p9s7lh0cafijj";
    inherit dependencies buildDependencies features;
  };
  regex_syntax_0_5_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex-syntax";
    version = "0.5.6";
    authors = [ "The Rust Project Developers" ];
    sha256 = "10vf3r34bgjnbrnqd5aszn35bjvm8insw498l1vjy8zx5yms3427";
    inherit dependencies buildDependencies features;
  };
  remove_dir_all_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "remove_dir_all";
    version = "0.5.1";
    authors = [ "Aaronepower <theaaronepower@gmail.com>" ];
    sha256 = "1chx3yvfbj46xjz4bzsvps208l46hfbcy0sm98gpiya454n4rrl7";
    inherit dependencies buildDependencies features;
  };
  reqwest_0_6_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "reqwest";
    version = "0.6.2";
    authors = [ "Sean McArthur <sean.monstar@gmail.com>" ];
    sha256 = "1yms5gvmrhakmvm2q3i91n3m4gkg1smvggkz6scaq7fbsz7nznia";
    inherit dependencies buildDependencies features;
  };
  rgb_0_8_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rgb";
    version = "0.8.9";
    authors = [ "Kornel Lesi≈Ñski <kornel@geekhood.net>" ];
    sha256 = "01ayki35f9njfqd727ywqw35rc0kbj6gj9acy4a0x6xzywavsmcx";
    inherit dependencies buildDependencies features;
  };
  route_recognizer_0_1_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "route-recognizer";
    version = "0.1.12";
    authors = [ "wycats" ];
    sha256 = "16f2inl9zbr2c56idijwivh9hsnr188dv4ny6jmy1ralbs95f3ai";
    inherit dependencies buildDependencies features;
  };
  router_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "router";
    version = "0.5.1";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1m0i6g1f7y1a0fi5cqgx5rdsiwcswr96p9ls6473f1n43fx29i6n";
    inherit dependencies buildDependencies features;
  };
  rustc_demangle_0_1_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-demangle";
    version = "0.1.8";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0xn5l86qfwngmdsjbglj30wh37zplvch96jl9raysl3k06gkkv3c";
    inherit dependencies buildDependencies features;
  };
  rustc_serialize_0_3_24_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-serialize";
    version = "0.3.24";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0rfk6p66mqkd3g36l0ddlv2rvnp1mp3lrq5frq9zz5cbnz5pmmxn";
    inherit dependencies buildDependencies features;
  };
  safemem_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "safemem";
    version = "0.2.0";
    authors = [ "Austin Bonander <austin.bonander@gmail.com>" ];
    sha256 = "058m251q202n479ip1h6s91yw3plg66vsk5mpaflssn6rs5hijdm";
    inherit dependencies buildDependencies features;
  };
  schannel_0_1_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "schannel";
    version = "0.1.12";
    authors = [ "Steven Fackler <sfackler@gmail.com>" "Steffen Butzer <steffen.butzer@outlook.com>" ];
    sha256 = "1lqdzx8d4rql8ah9w760syvrbbyp26s9cgidvrh34h0hjglja42d";
    inherit dependencies buildDependencies features;
  };
  scopeguard_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "scopeguard";
    version = "0.3.3";
    authors = [ "bluss" ];
    sha256 = "0i1l013csrqzfz6c68pr5pi01hg5v5yahq8fsdmaxy6p8ygsjf3r";
    inherit dependencies buildDependencies features;
  };
  security_framework_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "security-framework";
    version = "0.1.16";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "1kxczsaj8gz4922jl5af2gkxh71rasb6khaf3dp7ldlnw9qf2sbm";
    inherit dependencies buildDependencies features;
  };
  security_framework_sys_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "security-framework-sys";
    version = "0.1.16";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0ai2pivdr5fyc7czbkpcrwap0imyy0r8ndarrl3n5kiv0jha1js3";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  sequence_trie_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "sequence_trie";
    version = "0.2.1";
    authors = [ "Michael Sproul <micsproul@gmail.com>" "Alex Guly√°s <gulyas.alex@gmail.com>" ];
    sha256 = "0iiskfk4ds872pwm851kw61a9vrv0y9kz462xbjcp91lfzhj12cw";
    inherit dependencies buildDependencies features;
  };
  serde_1_0_66_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde";
    version = "1.0.66";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "07z30q9z30z2v3l7j5g3b9lw0s1vlhjimamf0db23yydbp3vf5fi";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  serde_derive_1_0_66_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_derive";
    version = "1.0.66";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1xfm8crm8zwv3gqy0zf84wzsk14v855jkr80i8pdw1p8v4lyc2zx";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  serde_json_1_0_19_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_json";
    version = "1.0.19";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1k5yirpx51c1850ji8pw1d72razzmjazls7sdwdsw0p4pkl8bxls";
    inherit dependencies buildDependencies features;
  };
  serde_urlencoded_0_5_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_urlencoded";
    version = "0.5.2";
    authors = [ "Anthony Ramine <n.oxyde@gmail.com>" ];
    sha256 = "0m5pigng0665qrk4ii1z84pb4lchbsswhgb863yglljskmm056m0";
    inherit dependencies buildDependencies features;
  };
  sha1_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "sha1";
    version = "0.6.0";
    authors = [ "Armin Ronacher <armin.ronacher@active-4.com>" ];
    sha256 = "12cp2b8f3hbwhfpnv1j1afl285xxmmbxh9w4npzvwbdh7xfyww8v";
    inherit dependencies buildDependencies features;
  };
  sha2_0_7_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "sha2";
    version = "0.7.1";
    authors = [ "RustCrypto Developers" ];
    sha256 = "1x5034qjkk6l3q5anlffh46jb4rlyyiwigwlxrnw7d6ijxpygfzb";
    inherit dependencies buildDependencies features;
  };
  shell32_sys_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "shell32-sys";
    version = "0.1.2";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "031vnnr88ip73a0p1q4g2klbkybr2p562m2ck7w2w66zkxz382a5";
    libName = "shell32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  smallvec_0_6_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "smallvec";
    version = "0.6.1";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "16m07xh67xcdpwjkbzbv9d7visxmz4fb4a8jfcrsrf333w7vkl1g";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  stable_deref_trait_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "stable_deref_trait";
    version = "1.0.0";
    authors = [ "Robert Grosse <n210241048576@gmail.com>" ];
    sha256 = "0ya5fms9qdwkd52d3a111w4vcz18j4rbfx4p88z44116cqd6cczr";
    inherit dependencies buildDependencies features;
  };
  staticfile_0_3_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "staticfile";
    version = "0.3.1";
    authors = [ "Zach Pomerantz <zmp@umich.edu>" "Jonathan Reem <jonathan.reem@gmail.com>" ];
    src = fetchgit {
       url = "https://github.com/onur/staticfile";
       rev = "9f2ff7201eda648128c92e3f5597c587f0629f51";
       sha256 = "15n5ap4jq3wzwqlr3i70nmjhgz06kb1gi5v676kn6jbb1nivx215";
    };
    inherit dependencies buildDependencies features;
  };
  strsim_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "strsim";
    version = "0.7.0";
    authors = [ "Danny Guo <dannyguo91@gmail.com>" ];
    sha256 = "0fy0k5f2705z73mb3x9459bpcvrx4ky8jpr4zikcbiwan4bnm0iv";
    inherit dependencies buildDependencies features;
  };
  syn_0_14_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.14.2";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1p9wa5h8p3djkhjrjc5bsbmkpylig3h5r0kkrkgv7rpfb4rpzvmp";
    inherit dependencies buildDependencies features;
  };
  syntex_errors_0_58_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syntex_errors";
    version = "0.58.1";
    authors = [ "erick.tryzelaar@gmail.com" ];
    sha256 = "09z7rhivm1akj97b2vpb2lqsi5dhpkjzzwkli14m9phnwafjy25d";
    inherit dependencies buildDependencies features;
  };
  syntex_pos_0_58_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syntex_pos";
    version = "0.58.1";
    authors = [ "erick.tryzelaar@gmail.com" ];
    sha256 = "1d8kkg1jzdjrqp1bcfvw2kq46pjkzvsrz0j9vj82yxdgch0vnkb3";
    inherit dependencies buildDependencies features;
  };
  syntex_syntax_0_58_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syntex_syntax";
    version = "0.58.1";
    authors = [ "erick.tryzelaar@gmail.com" ];
    sha256 = "1iz4xql4jhncydcwsa5dh6jlcqrs51if8515cka5krannrb0iff1";
    inherit dependencies buildDependencies features;
  };
  tempdir_0_3_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tempdir";
    version = "0.3.7";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0y53sxybyljrr7lh0x0ysrsa7p7cljmwv9v80acy3rc6n97g67vy";
    inherit dependencies buildDependencies features;
  };
  term_0_4_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "term";
    version = "0.4.6";
    authors = [ "The Rust Project Developers" "Steven Allen" ];
    sha256 = "14fll0l6247b4iyxnj52lpvxhd10yxbkmnpyxrn84iafzqmp56kv";
    inherit dependencies buildDependencies features;
  };
  termion_1_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termion";
    version = "1.5.1";
    authors = [ "ticki <Ticki@users.noreply.github.com>" "gycos <alexandre.bury@gmail.com>" "IGI-111 <igi-111@protonmail.com>" ];
    sha256 = "02gq4vd8iws1f3gjrgrgpajsk2bk43nds5acbbb4s8dvrdvr8nf1";
    inherit dependencies buildDependencies features;
  };
  textwrap_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "textwrap";
    version = "0.9.0";
    authors = [ "Martin Geisler <martin@geisler.net>" ];
    sha256 = "18jg79ndjlwndz01mlbh82kkr2arqm658yn5kwp65l5n1hz8w4yb";
    inherit dependencies buildDependencies features;
  };
  thread_id_3_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "thread-id";
    version = "3.3.0";
    authors = [ "Ruud van Asseldonk <dev@veniogames.com>" ];
    sha256 = "1c24q4d2czza6b86sbw76z0f2vkbkkamivkmrhvs549v59za9gip";
    inherit dependencies buildDependencies features;
  };
  thread_local_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "thread_local";
    version = "0.3.5";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "0mkp0sp91aqsk7brgygai4igv751r1754rsxn37mig3ag5rx8np6";
    inherit dependencies buildDependencies features;
  };
  threadpool_1_7_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "threadpool";
    version = "1.7.1";
    authors = [ "The Rust Project Developers" "Corey Farwell <coreyf@rwell.org>" "Stefan Schindler <dns2utf8@estada.ch>" ];
    sha256 = "09g715plrn59kasvigqjrjqzcgqnaf6v6pia0xx03f18kvfmkq06";
    inherit dependencies buildDependencies features;
  };
  time_0_1_40_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "time";
    version = "0.1.40";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0wgnbjamljz6bqxsd5axc4p2mmhkqfrryj4gf2yswjaxiw5dd01m";
    inherit dependencies buildDependencies features;
  };
  toml_0_4_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "toml";
    version = "0.4.6";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0rfl7lyb5f67spk69s604nw87f97g7fvv36hj9v88qlr2bwyrn8v";
    inherit dependencies buildDependencies features;
  };
  traitobject_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "traitobject";
    version = "0.1.0";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "10hi8pl361l539g4kg74mcrhn7grmwlar4jl528ddn2z2jvb7lw3";
    inherit dependencies buildDependencies features;
  };
  twox_hash_1_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "twox-hash";
    version = "1.1.0";
    authors = [ "Jake Goulding <jake.goulding@gmail.com>" ];
    sha256 = "1lyvni9cjgbp3j6bk456h2gn7m2chclp1fr51cs3kx6f8hpn7l2z";
    inherit dependencies buildDependencies features;
  };
  typeable_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "typeable";
    version = "0.1.2";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "0lvff10hwyy852m6r11msyv1rpgpnapn284i8dk0p0q5saqvbvnx";
    inherit dependencies buildDependencies features;
  };
  typemap_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "typemap";
    version = "0.3.3";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1whvpcq2slamy310z5hd3hl214v91sdxmd9avlqa1bn3l258svkx";
    inherit dependencies buildDependencies features;
  };
  typenum_1_10_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "typenum";
    version = "1.10.0";
    authors = [ "Paho Lurie-Gregg <paho@paholg.com>" "Andre Bogus <bogusandre@gmail.com>" ];
    sha256 = "1v2cgg0mlzkg5prs7swysckgk2ay6bpda8m83c2sn3z77dcsx3bc";
    build = "build/main.rs";
    inherit dependencies buildDependencies features;
  };
  ucd_util_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ucd-util";
    version = "0.1.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "02a8h3siipx52b832xc8m8rwasj6nx9jpiwfldw8hp6k205hgkn0";
    inherit dependencies buildDependencies features;
  };
  unicase_1_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicase";
    version = "1.4.2";
    authors = [ "Sean McArthur <sean.monstar@gmail.com>" ];
    sha256 = "0rbnhw2mnhcwrij3vczp0sl8zdfmvf2dlh8hly81kj7132kfj0mf";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  unicase_2_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicase";
    version = "2.1.0";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1zzn16hh8fdx5pnbbnl32q8m2mh4vpd1jm9pdcv969ik83dw4byp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  unicode_bidi_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-bidi";
    version = "0.3.4";
    authors = [ "The Servo Project Developers" ];
    sha256 = "0lcd6jasrf8p9p0q20qyf10c6xhvw40m2c4rr105hbk6zy26nj1q";
    libName = "unicode_bidi";
    inherit dependencies buildDependencies features;
  };
  unicode_normalization_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-normalization";
    version = "0.1.7";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "1da2hv800pd0wilmn4idwpgv5p510hjxizjcfv6xzb40xcsjd8gs";
    inherit dependencies buildDependencies features;
  };
  unicode_width_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-width";
    version = "0.1.5";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "0886lc2aymwgy0lhavwn6s48ik3c61ykzzd3za6prgnw51j7bi4w";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_0_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.0.4";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "1dc8wkkcd3s6534s5aw4lbjn8m67flkkbnajp5bl8408wdg8rh9v";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.1.0";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "05wdmwlfzxhq3nhsxn6wx4q8dhxzzfb9szsz6wiw092m1rjj01zj";
    inherit dependencies buildDependencies features;
  };
  unreachable_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unreachable";
    version = "1.0.0";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1am8czbk5wwr25gbp2zr007744fxjshhdqjz9liz7wl4pnv3whcf";
    inherit dependencies buildDependencies features;
  };
  unsafe_any_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unsafe-any";
    version = "0.4.2";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1zcvx5s71fbx4l691bg770g9yx947b8mmp4yf0mczcric07sh44s";
    inherit dependencies buildDependencies features;
  };
  url_1_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "url";
    version = "1.7.0";
    authors = [ "The rust-url developers" ];
    sha256 = "0333ynhkp47hna88aamz1zpk4lxyzx4ab9n7yhc75g14w27cv8jj";
    inherit dependencies buildDependencies features;
  };
  utf8_ranges_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "utf8-ranges";
    version = "1.0.0";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0rzmqprwjv9yp1n0qqgahgm24872x6c0xddfym5pfndy7a36vkn0";
    inherit dependencies buildDependencies features;
  };
  uuid_0_6_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "uuid";
    version = "0.6.5";
    authors = [ "Ashley Mannix<ashleymannix@live.com.au>" "Christopher Armstrong" "Dylan DPC<dylan.dpc@gmail.com>" "Hunar Roop Kahlon<hunar.roop@gmail.com>" ];
    sha256 = "1jy15m4yxxwma0jsy070garhbgfprky23i77rawjkk75vqhnnhlf";
    inherit dependencies buildDependencies features;
  };
  vcpkg_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vcpkg";
    version = "0.2.3";
    authors = [ "Jim McGrath <jimmc2@gmail.com>" ];
    sha256 = "0achi8sfy0wm4q04gj7nwpq9xfx8ynk6vv4r12a3ijg26hispq0c";
    inherit dependencies buildDependencies features;
  };
  vec_map_0_8_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vec_map";
    version = "0.8.1";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Jorge Aparicio <japaricious@gmail.com>" "Alexis Beingessner <a.beingessner@gmail.com>" "Brian Anderson <>" "tbu- <>" "Manish Goregaokar <>" "Aaron Turon <aturon@mozilla.com>" "Adolfo Ochagav√≠a <>" "Niko Matsakis <>" "Steven Fackler <>" "Chase Southwood <csouth3@illinois.edu>" "Eduard Burtescu <>" "Florian Wilkens <>" "F√©lix Raimundo <>" "Tibor Benke <>" "Markus Siemens <markus@m-siemens.de>" "Josh Branchaud <jbranchaud@gmail.com>" "Huon Wilson <dbau.pp@gmail.com>" "Corey Farwell <coref@rwell.org>" "Aaron Liblong <>" "Nick Cameron <nrc@ncameron.org>" "Patrick Walton <pcwalton@mimiga.net>" "Felix S Klock II <>" "Andrew Paseltiner <apaseltiner@gmail.com>" "Sean McArthur <sean.monstar@gmail.com>" "Vadim Petrochenkov <>" ];
    sha256 = "1jj2nrg8h3l53d43rwkpkikq5a5x15ms4rf1rw92hp5lrqhi8mpi";
    inherit dependencies buildDependencies features;
  };
  version_check_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "version_check";
    version = "0.1.3";
    authors = [ "Sergio Benitez <sb@sergio.bz>" ];
    sha256 = "0z635wdclv9bvafj11fpgndn7y79ibpsnc364pm61i1m4wwg8msg";
    inherit dependencies buildDependencies features;
  };
  void_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "void";
    version = "1.0.2";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "0h1dm0dx8dhf56a83k68mijyxigqhizpskwxfdrs1drwv2cdclv3";
    inherit dependencies buildDependencies features;
  };
  wait_timeout_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "wait-timeout";
    version = "0.1.5";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "16vy805q2fg7phpfnmasp53jwjx14snxrdzks6iic56ml7dic14l";
    inherit dependencies buildDependencies features;
  };
  winapi_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.2.8";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0a45b58ywf12vb7gvj6h3j264nydynmzyqz8d8rqxsj6icqv82as";
    inherit dependencies buildDependencies features;
  };
  winapi_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.3.5";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0cfdsxa5yf832r5i2z7dhdvnryyvhfp3nb32gpcaq502zgjdm3w6";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_build_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-build";
    version = "0.1.1";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lxlpi87rkhxcwp2ykf1ldw3p108hwm24nywf3jfrvmff4rjhqga";
    libName = "build";
    inherit dependencies buildDependencies features;
  };
  winapi_i686_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-i686-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_x86_64_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-x86_64-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  xdg_2_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "xdg";
    version = "2.1.0";
    authors = [ "Ben Longbons <b.r.longbons@gmail.com>" "whitequark <whitequark@whitequark.org>" ];
    sha256 = "1n7w46z4qah7m5dajy1h9pcwcj8r96cbi1xi5yq8cp0p3d765kkn";
    inherit dependencies buildDependencies features;
  };
  zip_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "zip";
    version = "0.2.8";
    authors = [ "Mathijs van de Nes <git@mathijs.vd-nes.nl>" ];
    sha256 = "14pjn2235frjqrjkz5bcj11mqmdwwbkcnz6g0vj9jqaiba4l7901";
    inherit dependencies buildDependencies features;
  };
  adler32_1_0_2 = { features?(adler32_1_0_2_features {}) }: adler32_1_0_2_ {};
  adler32_1_0_2_features = f: updateFeatures f (rec {
    adler32_1_0_2.default = (f.adler32_1_0_2.default or true);
  }) [];
  aho_corasick_0_6_4 = { features?(aho_corasick_0_6_4_features {}) }: aho_corasick_0_6_4_ {
    dependencies = mapFeatures features ([ memchr_2_0_1 ]);
  };
  aho_corasick_0_6_4_features = f: updateFeatures f (rec {
    aho_corasick_0_6_4.default = (f.aho_corasick_0_6_4.default or true);
    memchr_2_0_1.default = true;
  }) [ memchr_2_0_1_features ];
  ansi_term_0_11_0 = { features?(ansi_term_0_11_0_features {}) }: ansi_term_0_11_0_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  ansi_term_0_11_0_features = f: updateFeatures f (rec {
    ansi_term_0_11_0.default = (f.ansi_term_0_11_0.default or true);
    winapi_0_3_5.consoleapi = true;
    winapi_0_3_5.default = true;
    winapi_0_3_5.errhandlingapi = true;
    winapi_0_3_5.processenv = true;
  }) [ winapi_0_3_5_features ];
  antidote_1_0_0 = { features?(antidote_1_0_0_features {}) }: antidote_1_0_0_ {};
  antidote_1_0_0_features = f: updateFeatures f (rec {
    antidote_1_0_0.default = (f.antidote_1_0_0.default or true);
  }) [];
  app_dirs_1_2_1 = { features?(app_dirs_1_2_1_features {}) }: app_dirs_1_2_1_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") && !(kernel == "darwin") then mapFeatures features ([ xdg_2_1_0 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ ole32_sys_0_2_0 shell32_sys_0_1_2 winapi_0_2_8 ]) else []);
  };
  app_dirs_1_2_1_features = f: updateFeatures f (rec {
    app_dirs_1_2_1.default = (f.app_dirs_1_2_1.default or true);
    ole32_sys_0_2_0.default = true;
    shell32_sys_0_1_2.default = true;
    winapi_0_2_8.default = true;
    xdg_2_1_0.default = true;
  }) [ xdg_2_1_0_features ole32_sys_0_2_0_features shell32_sys_0_1_2_features winapi_0_2_8_features ];
  arrayref_0_3_4 = { features?(arrayref_0_3_4_features {}) }: arrayref_0_3_4_ {};
  arrayref_0_3_4_features = f: updateFeatures f (rec {
    arrayref_0_3_4.default = (f.arrayref_0_3_4.default or true);
  }) [];
  arrayvec_0_4_7 = { features?(arrayvec_0_4_7_features {}) }: arrayvec_0_4_7_ {
    dependencies = mapFeatures features ([ nodrop_0_1_12 ]);
    features = mkFeatures (features.arrayvec_0_4_7 or {});
  };
  arrayvec_0_4_7_features = f: updateFeatures f (rec {
    arrayvec_0_4_7.default = (f.arrayvec_0_4_7.default or true);
    arrayvec_0_4_7.serde =
      (f.arrayvec_0_4_7.serde or false) ||
      (f.arrayvec_0_4_7."serde-1" or false) ||
      (arrayvec_0_4_7."serde-1" or false);
    arrayvec_0_4_7.std =
      (f.arrayvec_0_4_7.std or false) ||
      (f.arrayvec_0_4_7.default or false) ||
      (arrayvec_0_4_7.default or false);
    nodrop_0_1_12.default = (f.nodrop_0_1_12.default or false);
  }) [ nodrop_0_1_12_features ];
  atty_0_2_10 = { features?(atty_0_2_10_features {}) }: atty_0_2_10_ {
    dependencies = (if kernel == "redox" then mapFeatures features ([ termion_1_5_1 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_42 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  atty_0_2_10_features = f: updateFeatures f (rec {
    atty_0_2_10.default = (f.atty_0_2_10.default or true);
    libc_0_2_42.default = (f.libc_0_2_42.default or false);
    termion_1_5_1.default = true;
    winapi_0_3_5.consoleapi = true;
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwinbase = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.processenv = true;
    winapi_0_3_5.winbase = true;
  }) [ termion_1_5_1_features libc_0_2_42_features winapi_0_3_5_features ];
  backtrace_0_3_8 = { features?(backtrace_0_3_8_features {}) }: backtrace_0_3_8_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_3 rustc_demangle_0_1_8 ])
      ++ (if (kernel == "linux" || kernel == "darwin") && !(kernel == "fuchsia") && !(kernel == "emscripten") && !(kernel == "darwin") && !(kernel == "ios") then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_8."backtrace-sys" or false then [ backtrace_sys_0_1_23 ] else [])) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_42 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_8.winapi or false then [ winapi_0_3_5 ] else [])) else []);
    features = mkFeatures (features.backtrace_0_3_8 or {});
  };
  backtrace_0_3_8_features = f: updateFeatures f (rec {
    backtrace_0_3_8."addr2line" =
      (f.backtrace_0_3_8."addr2line" or false) ||
      (f.backtrace_0_3_8."gimli-symbolize" or false) ||
      (backtrace_0_3_8."gimli-symbolize" or false);
    backtrace_0_3_8."backtrace-sys" =
      (f.backtrace_0_3_8."backtrace-sys" or false) ||
      (f.backtrace_0_3_8.libbacktrace or false) ||
      (backtrace_0_3_8.libbacktrace or false);
    backtrace_0_3_8."rustc-serialize" =
      (f.backtrace_0_3_8."rustc-serialize" or false) ||
      (f.backtrace_0_3_8."serialize-rustc" or false) ||
      (backtrace_0_3_8."serialize-rustc" or false);
    backtrace_0_3_8.coresymbolication =
      (f.backtrace_0_3_8.coresymbolication or false) ||
      (f.backtrace_0_3_8.default or false) ||
      (backtrace_0_3_8.default or false);
    backtrace_0_3_8.dbghelp =
      (f.backtrace_0_3_8.dbghelp or false) ||
      (f.backtrace_0_3_8.default or false) ||
      (backtrace_0_3_8.default or false);
    backtrace_0_3_8.default = (f.backtrace_0_3_8.default or true);
    backtrace_0_3_8.dladdr =
      (f.backtrace_0_3_8.dladdr or false) ||
      (f.backtrace_0_3_8.default or false) ||
      (backtrace_0_3_8.default or false);
    backtrace_0_3_8.findshlibs =
      (f.backtrace_0_3_8.findshlibs or false) ||
      (f.backtrace_0_3_8."gimli-symbolize" or false) ||
      (backtrace_0_3_8."gimli-symbolize" or false);
    backtrace_0_3_8.gimli =
      (f.backtrace_0_3_8.gimli or false) ||
      (f.backtrace_0_3_8."gimli-symbolize" or false) ||
      (backtrace_0_3_8."gimli-symbolize" or false);
    backtrace_0_3_8.libbacktrace =
      (f.backtrace_0_3_8.libbacktrace or false) ||
      (f.backtrace_0_3_8.default or false) ||
      (backtrace_0_3_8.default or false);
    backtrace_0_3_8.libunwind =
      (f.backtrace_0_3_8.libunwind or false) ||
      (f.backtrace_0_3_8.default or false) ||
      (backtrace_0_3_8.default or false);
    backtrace_0_3_8.memmap =
      (f.backtrace_0_3_8.memmap or false) ||
      (f.backtrace_0_3_8."gimli-symbolize" or false) ||
      (backtrace_0_3_8."gimli-symbolize" or false);
    backtrace_0_3_8.object =
      (f.backtrace_0_3_8.object or false) ||
      (f.backtrace_0_3_8."gimli-symbolize" or false) ||
      (backtrace_0_3_8."gimli-symbolize" or false);
    backtrace_0_3_8.serde =
      (f.backtrace_0_3_8.serde or false) ||
      (f.backtrace_0_3_8."serialize-serde" or false) ||
      (backtrace_0_3_8."serialize-serde" or false);
    backtrace_0_3_8.serde_derive =
      (f.backtrace_0_3_8.serde_derive or false) ||
      (f.backtrace_0_3_8."serialize-serde" or false) ||
      (backtrace_0_3_8."serialize-serde" or false);
    backtrace_0_3_8.winapi =
      (f.backtrace_0_3_8.winapi or false) ||
      (f.backtrace_0_3_8.dbghelp or false) ||
      (backtrace_0_3_8.dbghelp or false);
    backtrace_sys_0_1_23.default = true;
    cfg_if_0_1_3.default = true;
    libc_0_2_42.default = true;
    rustc_demangle_0_1_8.default = true;
    winapi_0_3_5.dbghelp = true;
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.processthreadsapi = true;
    winapi_0_3_5.std = true;
    winapi_0_3_5.winnt = true;
  }) [ cfg_if_0_1_3_features rustc_demangle_0_1_8_features backtrace_sys_0_1_23_features libc_0_2_42_features winapi_0_3_5_features ];
  backtrace_sys_0_1_23 = { features?(backtrace_sys_0_1_23_features {}) }: backtrace_sys_0_1_23_ {
    dependencies = mapFeatures features ([ libc_0_2_42 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_17 ]);
  };
  backtrace_sys_0_1_23_features = f: updateFeatures f (rec {
    backtrace_sys_0_1_23.default = (f.backtrace_sys_0_1_23.default or true);
    cc_1_0_17.default = true;
    libc_0_2_42.default = true;
  }) [ libc_0_2_42_features cc_1_0_17_features ];
  base64_0_5_2 = { features?(base64_0_5_2_features {}) }: base64_0_5_2_ {
    dependencies = mapFeatures features ([ byteorder_1_2_3 ]);
  };
  base64_0_5_2_features = f: updateFeatures f (rec {
    base64_0_5_2.default = (f.base64_0_5_2.default or true);
    byteorder_1_2_3.default = true;
  }) [ byteorder_1_2_3_features ];
  base64_0_6_0 = { features?(base64_0_6_0_features {}) }: base64_0_6_0_ {
    dependencies = mapFeatures features ([ byteorder_1_2_3 safemem_0_2_0 ]);
  };
  base64_0_6_0_features = f: updateFeatures f (rec {
    base64_0_6_0.default = (f.base64_0_6_0.default or true);
    byteorder_1_2_3.default = true;
    safemem_0_2_0.default = true;
  }) [ byteorder_1_2_3_features safemem_0_2_0_features ];
  bincode_0_9_3 = { features?(bincode_0_9_3_features {}) }: bincode_0_9_3_ {
    dependencies = mapFeatures features ([ byteorder_1_2_3 serde_1_0_66 ]);
  };
  bincode_0_9_3_features = f: updateFeatures f (rec {
    bincode_0_9_3.default = (f.bincode_0_9_3.default or true);
    byteorder_1_2_3.default = true;
    serde_1_0_66.default = true;
  }) [ byteorder_1_2_3_features serde_1_0_66_features ];
  bitflags_0_8_2 = { features?(bitflags_0_8_2_features {}) }: bitflags_0_8_2_ {
    features = mkFeatures (features.bitflags_0_8_2 or {});
  };
  bitflags_0_8_2_features = f: updateFeatures f (rec {
    bitflags_0_8_2."i128" =
      (f.bitflags_0_8_2."i128" or false) ||
      (f.bitflags_0_8_2.unstable or false) ||
      (bitflags_0_8_2.unstable or false);
    bitflags_0_8_2.default = (f.bitflags_0_8_2.default or true);
  }) [];
  bitflags_0_9_1 = { features?(bitflags_0_9_1_features {}) }: bitflags_0_9_1_ {
    features = mkFeatures (features.bitflags_0_9_1 or {});
  };
  bitflags_0_9_1_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = (f.bitflags_0_9_1.default or true);
    bitflags_0_9_1.example_generated =
      (f.bitflags_0_9_1.example_generated or false) ||
      (f.bitflags_0_9_1.default or false) ||
      (bitflags_0_9_1.default or false);
  }) [];
  bitflags_1_0_3 = { features?(bitflags_1_0_3_features {}) }: bitflags_1_0_3_ {
    features = mkFeatures (features.bitflags_1_0_3 or {});
  };
  bitflags_1_0_3_features = f: updateFeatures f (rec {
    bitflags_1_0_3.default = (f.bitflags_1_0_3.default or true);
  }) [];
  blake2_rfc_0_2_18 = { features?(blake2_rfc_0_2_18_features {}) }: blake2_rfc_0_2_18_ {
    dependencies = mapFeatures features ([ arrayvec_0_4_7 constant_time_eq_0_1_3 ]);
    features = mkFeatures (features.blake2_rfc_0_2_18 or {});
  };
  blake2_rfc_0_2_18_features = f: updateFeatures f (rec {
    arrayvec_0_4_7.default = (f.arrayvec_0_4_7.default or false);
    blake2_rfc_0_2_18.default = (f.blake2_rfc_0_2_18.default or true);
    blake2_rfc_0_2_18.simd =
      (f.blake2_rfc_0_2_18.simd or false) ||
      (f.blake2_rfc_0_2_18.simd_opt or false) ||
      (blake2_rfc_0_2_18.simd_opt or false);
    blake2_rfc_0_2_18.simd_opt =
      (f.blake2_rfc_0_2_18.simd_opt or false) ||
      (f.blake2_rfc_0_2_18.simd_asm or false) ||
      (blake2_rfc_0_2_18.simd_asm or false);
    blake2_rfc_0_2_18.std =
      (f.blake2_rfc_0_2_18.std or false) ||
      (f.blake2_rfc_0_2_18.default or false) ||
      (blake2_rfc_0_2_18.default or false);
    constant_time_eq_0_1_3.default = true;
  }) [ arrayvec_0_4_7_features constant_time_eq_0_1_3_features ];
  block_buffer_0_3_3 = { features?(block_buffer_0_3_3_features {}) }: block_buffer_0_3_3_ {
    dependencies = mapFeatures features ([ arrayref_0_3_4 byte_tools_0_2_0 ]);
  };
  block_buffer_0_3_3_features = f: updateFeatures f (rec {
    arrayref_0_3_4.default = true;
    block_buffer_0_3_3.default = (f.block_buffer_0_3_3.default or true);
    byte_tools_0_2_0.default = true;
  }) [ arrayref_0_3_4_features byte_tools_0_2_0_features ];
  build_const_0_2_1 = { features?(build_const_0_2_1_features {}) }: build_const_0_2_1_ {
    features = mkFeatures (features.build_const_0_2_1 or {});
  };
  build_const_0_2_1_features = f: updateFeatures f (rec {
    build_const_0_2_1.default = (f.build_const_0_2_1.default or true);
    build_const_0_2_1.std =
      (f.build_const_0_2_1.std or false) ||
      (f.build_const_0_2_1.default or false) ||
      (build_const_0_2_1.default or false);
  }) [];
  byte_tools_0_2_0 = { features?(byte_tools_0_2_0_features {}) }: byte_tools_0_2_0_ {};
  byte_tools_0_2_0_features = f: updateFeatures f (rec {
    byte_tools_0_2_0.default = (f.byte_tools_0_2_0.default or true);
  }) [];
  byteorder_1_2_3 = { features?(byteorder_1_2_3_features {}) }: byteorder_1_2_3_ {
    features = mkFeatures (features.byteorder_1_2_3 or {});
  };
  byteorder_1_2_3_features = f: updateFeatures f (rec {
    byteorder_1_2_3.default = (f.byteorder_1_2_3.default or true);
    byteorder_1_2_3.std =
      (f.byteorder_1_2_3.std or false) ||
      (f.byteorder_1_2_3.default or false) ||
      (byteorder_1_2_3.default or false);
  }) [];
  c_components_tests_0_1_0 = { features?(c_components_tests_0_1_0_features {}) }: c_components_tests_0_1_0_ {
    dependencies = mapFeatures features ([ imageflow_c_components_0_1_0 lcms2_sys_2_4_8 libpng_sys_0_2_6 libz_sys_1_0_18 mozjpeg_sys_0_5_13 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_17 glob_0_2_11 ]);
  };
  c_components_tests_0_1_0_features = f: updateFeatures f (rec {
    c_components_tests_0_1_0.default = (f.c_components_tests_0_1_0.default or true);
    cc_1_0_17.default = true;
    cc_1_0_17.parallel = true;
    glob_0_2_11.default = true;
    imageflow_c_components_0_1_0.default = true;
    lcms2_sys_2_4_8.default = true;
    libpng_sys_0_2_6.default = true;
    libz_sys_1_0_18.default = true;
    mozjpeg_sys_0_5_13.default = true;
  }) [ imageflow_c_components_0_1_0_features lcms2_sys_2_4_8_features libpng_sys_0_2_6_features libz_sys_1_0_18_features mozjpeg_sys_0_5_13_features cc_1_0_17_features glob_0_2_11_features ];
  cc_1_0_17 = { features?(cc_1_0_17_features {}) }: cc_1_0_17_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.cc_1_0_17.rayon or false then [ rayon_1_0_1 ] else []));
    features = mkFeatures (features.cc_1_0_17 or {});
  };
  cc_1_0_17_features = f: updateFeatures f (rec {
    cc_1_0_17.default = (f.cc_1_0_17.default or true);
    cc_1_0_17.rayon =
      (f.cc_1_0_17.rayon or false) ||
      (f.cc_1_0_17.parallel or false) ||
      (cc_1_0_17.parallel or false);
    rayon_1_0_1.default = true;
  }) [ rayon_1_0_1_features ];
  cfg_if_0_1_3 = { features?(cfg_if_0_1_3_features {}) }: cfg_if_0_1_3_ {};
  cfg_if_0_1_3_features = f: updateFeatures f (rec {
    cfg_if_0_1_3.default = (f.cfg_if_0_1_3.default or true);
  }) [];
  chashmap_2_2_0 = { features?(chashmap_2_2_0_features {}) }: chashmap_2_2_0_ {
    dependencies = mapFeatures features ([ owning_ref_0_2_4 parking_lot_0_3_8 ]);
  };
  chashmap_2_2_0_features = f: updateFeatures f (rec {
    chashmap_2_2_0.default = (f.chashmap_2_2_0.default or true);
    owning_ref_0_2_4.default = true;
    parking_lot_0_3_8.default = true;
  }) [ owning_ref_0_2_4_features parking_lot_0_3_8_features ];
  chrono_0_4_2 = { features?(chrono_0_4_2_features {}) }: chrono_0_4_2_ {
    dependencies = mapFeatures features ([ num_integer_0_1_38 num_traits_0_2_4 ]
      ++ (if features.chrono_0_4_2.time or false then [ time_0_1_40 ] else []));
    features = mkFeatures (features.chrono_0_4_2 or {});
  };
  chrono_0_4_2_features = f: updateFeatures f (rec {
    chrono_0_4_2.clock =
      (f.chrono_0_4_2.clock or false) ||
      (f.chrono_0_4_2.default or false) ||
      (chrono_0_4_2.default or false);
    chrono_0_4_2.default = (f.chrono_0_4_2.default or true);
    chrono_0_4_2.time =
      (f.chrono_0_4_2.time or false) ||
      (f.chrono_0_4_2.clock or false) ||
      (chrono_0_4_2.clock or false);
    num_integer_0_1_38.default = (f.num_integer_0_1_38.default or false);
    num_traits_0_2_4.default = (f.num_traits_0_2_4.default or false);
    time_0_1_40.default = true;
  }) [ num_integer_0_1_38_features num_traits_0_2_4_features time_0_1_40_features ];
  clap_2_31_2 = { features?(clap_2_31_2_features {}) }: clap_2_31_2_ {
    dependencies = mapFeatures features ([ bitflags_1_0_3 textwrap_0_9_0 unicode_width_0_1_5 ]
      ++ (if features.clap_2_31_2.atty or false then [ atty_0_2_10 ] else [])
      ++ (if features.clap_2_31_2.strsim or false then [ strsim_0_7_0 ] else [])
      ++ (if features.clap_2_31_2.vec_map or false then [ vec_map_0_8_1 ] else []))
      ++ (if !(kernel == "windows") then mapFeatures features ([ ]
      ++ (if features.clap_2_31_2.ansi_term or false then [ ansi_term_0_11_0 ] else [])) else []);
    features = mkFeatures (features.clap_2_31_2 or {});
  };
  clap_2_31_2_features = f: updateFeatures f (rec {
    ansi_term_0_11_0.default = true;
    atty_0_2_10.default = true;
    bitflags_1_0_3.default = true;
    clap_2_31_2."yaml-rust" =
      (f.clap_2_31_2."yaml-rust" or false) ||
      (f.clap_2_31_2.yaml or false) ||
      (clap_2_31_2.yaml or false);
    clap_2_31_2.ansi_term =
      (f.clap_2_31_2.ansi_term or false) ||
      (f.clap_2_31_2.color or false) ||
      (clap_2_31_2.color or false);
    clap_2_31_2.atty =
      (f.clap_2_31_2.atty or false) ||
      (f.clap_2_31_2.color or false) ||
      (clap_2_31_2.color or false);
    clap_2_31_2.clippy =
      (f.clap_2_31_2.clippy or false) ||
      (f.clap_2_31_2.lints or false) ||
      (clap_2_31_2.lints or false);
    clap_2_31_2.color =
      (f.clap_2_31_2.color or false) ||
      (f.clap_2_31_2.default or false) ||
      (clap_2_31_2.default or false);
    clap_2_31_2.default = (f.clap_2_31_2.default or true);
    clap_2_31_2.strsim =
      (f.clap_2_31_2.strsim or false) ||
      (f.clap_2_31_2.suggestions or false) ||
      (clap_2_31_2.suggestions or false);
    clap_2_31_2.suggestions =
      (f.clap_2_31_2.suggestions or false) ||
      (f.clap_2_31_2.default or false) ||
      (clap_2_31_2.default or false);
    clap_2_31_2.term_size =
      (f.clap_2_31_2.term_size or false) ||
      (f.clap_2_31_2.wrap_help or false) ||
      (clap_2_31_2.wrap_help or false);
    clap_2_31_2.vec_map =
      (f.clap_2_31_2.vec_map or false) ||
      (f.clap_2_31_2.default or false) ||
      (clap_2_31_2.default or false);
    clap_2_31_2.yaml =
      (f.clap_2_31_2.yaml or false) ||
      (f.clap_2_31_2.doc or false) ||
      (clap_2_31_2.doc or false);
    strsim_0_7_0.default = true;
    textwrap_0_9_0.default = true;
    textwrap_0_9_0.term_size =
      (f.textwrap_0_9_0.term_size or false) ||
      (clap_2_31_2.wrap_help or false) ||
      (f.clap_2_31_2.wrap_help or false);
    unicode_width_0_1_5.default = true;
    vec_map_0_8_1.default = true;
  }) [ atty_0_2_10_features bitflags_1_0_3_features strsim_0_7_0_features textwrap_0_9_0_features unicode_width_0_1_5_features vec_map_0_8_1_features ansi_term_0_11_0_features ];
  cloudabi_0_0_3 = { features?(cloudabi_0_0_3_features {}) }: cloudabi_0_0_3_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.cloudabi_0_0_3.bitflags or false then [ bitflags_1_0_3 ] else []));
    features = mkFeatures (features.cloudabi_0_0_3 or {});
  };
  cloudabi_0_0_3_features = f: updateFeatures f (rec {
    bitflags_1_0_3.default = true;
    cloudabi_0_0_3.bitflags =
      (f.cloudabi_0_0_3.bitflags or false) ||
      (f.cloudabi_0_0_3.default or false) ||
      (cloudabi_0_0_3.default or false);
    cloudabi_0_0_3.default = (f.cloudabi_0_0_3.default or true);
  }) [ bitflags_1_0_3_features ];
  color_quant_1_0_0 = { features?(color_quant_1_0_0_features {}) }: color_quant_1_0_0_ {};
  color_quant_1_0_0_features = f: updateFeatures f (rec {
    color_quant_1_0_0.default = (f.color_quant_1_0_0.default or true);
  }) [];
  conduit_mime_types_0_7_3 = { features?(conduit_mime_types_0_7_3_features {}) }: conduit_mime_types_0_7_3_ {
    dependencies = mapFeatures features ([ rustc_serialize_0_3_24 ]);
  };
  conduit_mime_types_0_7_3_features = f: updateFeatures f (rec {
    conduit_mime_types_0_7_3.default = (f.conduit_mime_types_0_7_3.default or true);
    rustc_serialize_0_3_24.default = true;
  }) [ rustc_serialize_0_3_24_features ];
  constant_time_eq_0_1_3 = { features?(constant_time_eq_0_1_3_features {}) }: constant_time_eq_0_1_3_ {};
  constant_time_eq_0_1_3_features = f: updateFeatures f (rec {
    constant_time_eq_0_1_3.default = (f.constant_time_eq_0_1_3.default or true);
  }) [];
  core_foundation_0_2_3 = { features?(core_foundation_0_2_3_features {}) }: core_foundation_0_2_3_ {
    dependencies = mapFeatures features ([ core_foundation_sys_0_2_3 libc_0_2_42 ]);
  };
  core_foundation_0_2_3_features = f: updateFeatures f (rec {
    core_foundation_0_2_3.default = (f.core_foundation_0_2_3.default or true);
    core_foundation_sys_0_2_3.default = true;
    libc_0_2_42.default = true;
  }) [ core_foundation_sys_0_2_3_features libc_0_2_42_features ];
  core_foundation_sys_0_2_3 = { features?(core_foundation_sys_0_2_3_features {}) }: core_foundation_sys_0_2_3_ {
    dependencies = mapFeatures features ([ libc_0_2_42 ]);
  };
  core_foundation_sys_0_2_3_features = f: updateFeatures f (rec {
    core_foundation_sys_0_2_3.default = (f.core_foundation_sys_0_2_3.default or true);
    libc_0_2_42.default = true;
  }) [ libc_0_2_42_features ];
  crc_1_8_1 = { features?(crc_1_8_1_features {}) }: crc_1_8_1_ {
    buildDependencies = mapFeatures features ([ build_const_0_2_1 ]);
    features = mkFeatures (features.crc_1_8_1 or {});
  };
  crc_1_8_1_features = f: updateFeatures f (rec {
    build_const_0_2_1.default = true;
    crc_1_8_1.default = (f.crc_1_8_1.default or true);
    crc_1_8_1.std =
      (f.crc_1_8_1.std or false) ||
      (f.crc_1_8_1.default or false) ||
      (crc_1_8_1.default or false);
  }) [ build_const_0_2_1_features ];
  crossbeam_deque_0_2_0 = { features?(crossbeam_deque_0_2_0_features {}) }: crossbeam_deque_0_2_0_ {
    dependencies = mapFeatures features ([ crossbeam_epoch_0_3_1 crossbeam_utils_0_2_2 ]);
  };
  crossbeam_deque_0_2_0_features = f: updateFeatures f (rec {
    crossbeam_deque_0_2_0.default = (f.crossbeam_deque_0_2_0.default or true);
    crossbeam_epoch_0_3_1.default = true;
    crossbeam_utils_0_2_2.default = true;
  }) [ crossbeam_epoch_0_3_1_features crossbeam_utils_0_2_2_features ];
  crossbeam_epoch_0_3_1 = { features?(crossbeam_epoch_0_3_1_features {}) }: crossbeam_epoch_0_3_1_ {
    dependencies = mapFeatures features ([ arrayvec_0_4_7 cfg_if_0_1_3 crossbeam_utils_0_2_2 memoffset_0_2_1 nodrop_0_1_12 scopeguard_0_3_3 ]
      ++ (if features.crossbeam_epoch_0_3_1.lazy_static or false then [ lazy_static_1_0_1 ] else []));
    features = mkFeatures (features.crossbeam_epoch_0_3_1 or {});
  };
  crossbeam_epoch_0_3_1_features = f: updateFeatures f (rec {
    arrayvec_0_4_7.default = (f.arrayvec_0_4_7.default or false);
    arrayvec_0_4_7.use_union =
      (f.arrayvec_0_4_7.use_union or false) ||
      (crossbeam_epoch_0_3_1.nightly or false) ||
      (f.crossbeam_epoch_0_3_1.nightly or false);
    cfg_if_0_1_3.default = true;
    crossbeam_epoch_0_3_1.default = (f.crossbeam_epoch_0_3_1.default or true);
    crossbeam_epoch_0_3_1.lazy_static =
      (f.crossbeam_epoch_0_3_1.lazy_static or false) ||
      (f.crossbeam_epoch_0_3_1.use_std or false) ||
      (crossbeam_epoch_0_3_1.use_std or false);
    crossbeam_epoch_0_3_1.use_std =
      (f.crossbeam_epoch_0_3_1.use_std or false) ||
      (f.crossbeam_epoch_0_3_1.default or false) ||
      (crossbeam_epoch_0_3_1.default or false);
    crossbeam_utils_0_2_2.default = (f.crossbeam_utils_0_2_2.default or false);
    crossbeam_utils_0_2_2.use_std =
      (f.crossbeam_utils_0_2_2.use_std or false) ||
      (crossbeam_epoch_0_3_1.use_std or false) ||
      (f.crossbeam_epoch_0_3_1.use_std or false);
    lazy_static_1_0_1.default = true;
    memoffset_0_2_1.default = true;
    nodrop_0_1_12.default = (f.nodrop_0_1_12.default or false);
    scopeguard_0_3_3.default = (f.scopeguard_0_3_3.default or false);
  }) [ arrayvec_0_4_7_features cfg_if_0_1_3_features crossbeam_utils_0_2_2_features lazy_static_1_0_1_features memoffset_0_2_1_features nodrop_0_1_12_features scopeguard_0_3_3_features ];
  crossbeam_utils_0_2_2 = { features?(crossbeam_utils_0_2_2_features {}) }: crossbeam_utils_0_2_2_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_3 ]);
    features = mkFeatures (features.crossbeam_utils_0_2_2 or {});
  };
  crossbeam_utils_0_2_2_features = f: updateFeatures f (rec {
    cfg_if_0_1_3.default = true;
    crossbeam_utils_0_2_2.default = (f.crossbeam_utils_0_2_2.default or true);
    crossbeam_utils_0_2_2.use_std =
      (f.crossbeam_utils_0_2_2.use_std or false) ||
      (f.crossbeam_utils_0_2_2.default or false) ||
      (crossbeam_utils_0_2_2.default or false);
  }) [ cfg_if_0_1_3_features ];
  daggy_0_5_0 = { features?(daggy_0_5_0_features {}) }: daggy_0_5_0_ {
    dependencies = mapFeatures features ([ petgraph_0_4_12 ]);
  };
  daggy_0_5_0_features = f: updateFeatures f (rec {
    daggy_0_5_0.default = (f.daggy_0_5_0.default or true);
    petgraph_0_4_12.default = (f.petgraph_0_4_12.default or false);
  }) [ petgraph_0_4_12_features ];
  difference_1_0_0 = { features?(difference_1_0_0_features {}) }: difference_1_0_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.difference_1_0_0 or {});
  };
  difference_1_0_0_features = f: updateFeatures f (rec {
    difference_1_0_0.default = (f.difference_1_0_0.default or true);
    difference_1_0_0.getopts =
      (f.difference_1_0_0.getopts or false) ||
      (f.difference_1_0_0.bin or false) ||
      (difference_1_0_0.bin or false);
  }) [];
  digest_0_7_2 = { features?(digest_0_7_2_features {}) }: digest_0_7_2_ {
    dependencies = mapFeatures features ([ generic_array_0_9_0 ]);
    features = mkFeatures (features.digest_0_7_2 or {});
  };
  digest_0_7_2_features = f: updateFeatures f (rec {
    digest_0_7_2.default = (f.digest_0_7_2.default or true);
    generic_array_0_9_0.default = true;
  }) [ generic_array_0_9_0_features ];
  dssim_2_9_9 = { features?(dssim_2_9_9_features {}) }: dssim_2_9_9_ {
    dependencies = mapFeatures features ([ getopts_0_2_17 imgref_1_3_4 itertools_0_7_8 lodepng_2_1_5 rayon_1_0_1 rgb_0_8_9 ]);
  };
  dssim_2_9_9_features = f: updateFeatures f (rec {
    dssim_2_9_9.default = (f.dssim_2_9_9.default or true);
    getopts_0_2_17.default = true;
    imgref_1_3_4.default = true;
    itertools_0_7_8.default = true;
    lodepng_2_1_5.default = true;
    rayon_1_0_1.default = true;
    rgb_0_8_9.default = true;
  }) [ getopts_0_2_17_features imgref_1_3_4_features itertools_0_7_8_features lodepng_2_1_5_features rayon_1_0_1_features rgb_0_8_9_features ];
  dtoa_0_4_2 = { features?(dtoa_0_4_2_features {}) }: dtoa_0_4_2_ {};
  dtoa_0_4_2_features = f: updateFeatures f (rec {
    dtoa_0_4_2.default = (f.dtoa_0_4_2.default or true);
  }) [];
  dunce_0_1_1 = { features?(dunce_0_1_1_features {}) }: dunce_0_1_1_ {};
  dunce_0_1_1_features = f: updateFeatures f (rec {
    dunce_0_1_1.default = (f.dunce_0_1_1.default or true);
  }) [];
  either_1_5_0 = { features?(either_1_5_0_features {}) }: either_1_5_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.either_1_5_0 or {});
  };
  either_1_5_0_features = f: updateFeatures f (rec {
    either_1_5_0.default = (f.either_1_5_0.default or true);
    either_1_5_0.use_std =
      (f.either_1_5_0.use_std or false) ||
      (f.either_1_5_0.default or false) ||
      (either_1_5_0.default or false);
  }) [];
  enum_derive_0_1_7 = { features?(enum_derive_0_1_7_features {}) }: enum_derive_0_1_7_ {
    features = mkFeatures (features.enum_derive_0_1_7 or {});
  };
  enum_derive_0_1_7_features = f: updateFeatures f (rec {
    enum_derive_0_1_7.default = (f.enum_derive_0_1_7.default or true);
    enum_derive_0_1_7.std =
      (f.enum_derive_0_1_7.std or false) ||
      (f.enum_derive_0_1_7.default or false) ||
      (enum_derive_0_1_7.default or false);
  }) [];
  env_logger_0_4_3 = { features?(env_logger_0_4_3_features {}) }: env_logger_0_4_3_ {
    dependencies = mapFeatures features ([ log_0_3_9 ]
      ++ (if features.env_logger_0_4_3.regex or false then [ regex_0_2_11 ] else []));
    features = mkFeatures (features.env_logger_0_4_3 or {});
  };
  env_logger_0_4_3_features = f: updateFeatures f (rec {
    env_logger_0_4_3.default = (f.env_logger_0_4_3.default or true);
    env_logger_0_4_3.regex =
      (f.env_logger_0_4_3.regex or false) ||
      (f.env_logger_0_4_3.default or false) ||
      (env_logger_0_4_3.default or false);
    log_0_3_9.default = true;
    regex_0_2_11.default = true;
  }) [ log_0_3_9_features regex_0_2_11_features ];
  error_0_1_9 = { features?(error_0_1_9_features {}) }: error_0_1_9_ {
    dependencies = mapFeatures features ([ traitobject_0_1_0 typeable_0_1_2 ]);
  };
  error_0_1_9_features = f: updateFeatures f (rec {
    error_0_1_9.default = (f.error_0_1_9.default or true);
    traitobject_0_1_0.default = true;
    typeable_0_1_2.default = true;
  }) [ traitobject_0_1_0_features typeable_0_1_2_features ];
  error_chain_0_11_0 = { features?(error_chain_0_11_0_features {}) }: error_chain_0_11_0_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.error_chain_0_11_0.backtrace or false then [ backtrace_0_3_8 ] else []));
    features = mkFeatures (features.error_chain_0_11_0 or {});
  };
  error_chain_0_11_0_features = f: updateFeatures f (rec {
    backtrace_0_3_8.default = true;
    error_chain_0_11_0.backtrace =
      (f.error_chain_0_11_0.backtrace or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
    error_chain_0_11_0.default = (f.error_chain_0_11_0.default or true);
    error_chain_0_11_0.example_generated =
      (f.error_chain_0_11_0.example_generated or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
  }) [ backtrace_0_3_8_features ];
  fake_simd_0_1_2 = { features?(fake_simd_0_1_2_features {}) }: fake_simd_0_1_2_ {};
  fake_simd_0_1_2_features = f: updateFeatures f (rec {
    fake_simd_0_1_2.default = (f.fake_simd_0_1_2.default or true);
  }) [];
  fixedbitset_0_1_9 = { features?(fixedbitset_0_1_9_features {}) }: fixedbitset_0_1_9_ {};
  fixedbitset_0_1_9_features = f: updateFeatures f (rec {
    fixedbitset_0_1_9.default = (f.fixedbitset_0_1_9.default or true);
  }) [];
  flate2_1_0_1 = { features?(flate2_1_0_1_features {}) }: flate2_1_0_1_ {
    dependencies = mapFeatures features ([ libc_0_2_42 ]
      ++ (if features.flate2_1_0_1.miniz_oxide_c_api or false then [ miniz_oxide_c_api_0_1_2 ] else []));
    features = mkFeatures (features.flate2_1_0_1 or {});
  };
  flate2_1_0_1_features = f: updateFeatures f (rec {
    flate2_1_0_1."libz-sys" =
      (f.flate2_1_0_1."libz-sys" or false) ||
      (f.flate2_1_0_1.zlib or false) ||
      (flate2_1_0_1.zlib or false);
    flate2_1_0_1."miniz-sys" =
      (f.flate2_1_0_1."miniz-sys" or false) ||
      (f.flate2_1_0_1.default or false) ||
      (flate2_1_0_1.default or false);
    flate2_1_0_1."tokio-io" =
      (f.flate2_1_0_1."tokio-io" or false) ||
      (f.flate2_1_0_1.tokio or false) ||
      (flate2_1_0_1.tokio or false);
    flate2_1_0_1.default = (f.flate2_1_0_1.default or true);
    flate2_1_0_1.futures =
      (f.flate2_1_0_1.futures or false) ||
      (f.flate2_1_0_1.tokio or false) ||
      (flate2_1_0_1.tokio or false);
    flate2_1_0_1.miniz_oxide_c_api =
      (f.flate2_1_0_1.miniz_oxide_c_api or false) ||
      (f.flate2_1_0_1.rust_backend or false) ||
      (flate2_1_0_1.rust_backend or false);
    libc_0_2_42.default = true;
    miniz_oxide_c_api_0_1_2.default = true;
  }) [ libc_0_2_42_features miniz_oxide_c_api_0_1_2_features ];
  fnv_1_0_6 = { features?(fnv_1_0_6_features {}) }: fnv_1_0_6_ {};
  fnv_1_0_6_features = f: updateFeatures f (rec {
    fnv_1_0_6.default = (f.fnv_1_0_6.default or true);
  }) [];
  foreign_types_0_3_2 = { features?(foreign_types_0_3_2_features {}) }: foreign_types_0_3_2_ {
    dependencies = mapFeatures features ([ foreign_types_shared_0_1_1 ]);
  };
  foreign_types_0_3_2_features = f: updateFeatures f (rec {
    foreign_types_0_3_2.default = (f.foreign_types_0_3_2.default or true);
    foreign_types_shared_0_1_1.default = true;
  }) [ foreign_types_shared_0_1_1_features ];
  foreign_types_shared_0_1_1 = { features?(foreign_types_shared_0_1_1_features {}) }: foreign_types_shared_0_1_1_ {};
  foreign_types_shared_0_1_1_features = f: updateFeatures f (rec {
    foreign_types_shared_0_1_1.default = (f.foreign_types_shared_0_1_1.default or true);
  }) [];
  fuchsia_zircon_0_3_3 = { features?(fuchsia_zircon_0_3_3_features {}) }: fuchsia_zircon_0_3_3_ {
    dependencies = mapFeatures features ([ bitflags_1_0_3 fuchsia_zircon_sys_0_3_3 ]);
  };
  fuchsia_zircon_0_3_3_features = f: updateFeatures f (rec {
    bitflags_1_0_3.default = true;
    fuchsia_zircon_0_3_3.default = (f.fuchsia_zircon_0_3_3.default or true);
    fuchsia_zircon_sys_0_3_3.default = true;
  }) [ bitflags_1_0_3_features fuchsia_zircon_sys_0_3_3_features ];
  fuchsia_zircon_sys_0_3_3 = { features?(fuchsia_zircon_sys_0_3_3_features {}) }: fuchsia_zircon_sys_0_3_3_ {};
  fuchsia_zircon_sys_0_3_3_features = f: updateFeatures f (rec {
    fuchsia_zircon_sys_0_3_3.default = (f.fuchsia_zircon_sys_0_3_3.default or true);
  }) [];
  futures_0_1_21 = { features?(futures_0_1_21_features {}) }: futures_0_1_21_ {
    features = mkFeatures (features.futures_0_1_21 or {});
  };
  futures_0_1_21_features = f: updateFeatures f (rec {
    futures_0_1_21."with-deprecated" =
      (f.futures_0_1_21."with-deprecated" or false) ||
      (f.futures_0_1_21.default or false) ||
      (futures_0_1_21.default or false);
    futures_0_1_21.default = (f.futures_0_1_21.default or true);
    futures_0_1_21.use_std =
      (f.futures_0_1_21.use_std or false) ||
      (f.futures_0_1_21.default or false) ||
      (futures_0_1_21.default or false);
  }) [];
  generic_array_0_9_0 = { features?(generic_array_0_9_0_features {}) }: generic_array_0_9_0_ {
    dependencies = mapFeatures features ([ typenum_1_10_0 ]);
  };
  generic_array_0_9_0_features = f: updateFeatures f (rec {
    generic_array_0_9_0.default = (f.generic_array_0_9_0.default or true);
    typenum_1_10_0.default = true;
  }) [ typenum_1_10_0_features ];
  getopts_0_2_17 = { features?(getopts_0_2_17_features {}) }: getopts_0_2_17_ {};
  getopts_0_2_17_features = f: updateFeatures f (rec {
    getopts_0_2_17.default = (f.getopts_0_2_17.default or true);
  }) [];
  gif_0_10_0 = { features?(gif_0_10_0_features {}) }: gif_0_10_0_ {
    dependencies = mapFeatures features ([ color_quant_1_0_0 lzw_0_10_0 ]);
    features = mkFeatures (features.gif_0_10_0 or {});
  };
  gif_0_10_0_features = f: updateFeatures f (rec {
    color_quant_1_0_0.default = true;
    gif_0_10_0.default = (f.gif_0_10_0.default or true);
    gif_0_10_0.libc =
      (f.gif_0_10_0.libc or false) ||
      (f.gif_0_10_0.c_api or false) ||
      (gif_0_10_0.c_api or false);
    gif_0_10_0.raii_no_panic =
      (f.gif_0_10_0.raii_no_panic or false) ||
      (f.gif_0_10_0.default or false) ||
      (gif_0_10_0.default or false);
    lzw_0_10_0.default = true;
  }) [ color_quant_1_0_0_features lzw_0_10_0_features ];
  glob_0_2_11 = { features?(glob_0_2_11_features {}) }: glob_0_2_11_ {};
  glob_0_2_11_features = f: updateFeatures f (rec {
    glob_0_2_11.default = (f.glob_0_2_11.default or true);
  }) [];
  http_muncher_0_3_2 = { features?(http_muncher_0_3_2_features {}) }: http_muncher_0_3_2_ {
    dependencies = mapFeatures features ([ libc_0_2_42 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_17 ]);
  };
  http_muncher_0_3_2_features = f: updateFeatures f (rec {
    cc_1_0_17.default = true;
    http_muncher_0_3_2.default = (f.http_muncher_0_3_2.default or true);
    libc_0_2_42.default = true;
  }) [ libc_0_2_42_features cc_1_0_17_features ];
  httparse_1_2_4 = { features?(httparse_1_2_4_features {}) }: httparse_1_2_4_ {
    features = mkFeatures (features.httparse_1_2_4 or {});
  };
  httparse_1_2_4_features = f: updateFeatures f (rec {
    httparse_1_2_4.default = (f.httparse_1_2_4.default or true);
    httparse_1_2_4.std =
      (f.httparse_1_2_4.std or false) ||
      (f.httparse_1_2_4.default or false) ||
      (httparse_1_2_4.default or false);
  }) [];
  hyper_0_10_12 = { features?(hyper_0_10_12_features {}) }: hyper_0_10_12_ {
    dependencies = mapFeatures features ([ base64_0_5_2 httparse_1_2_4 language_tags_0_2_2 log_0_3_9 mime_0_2_6 num_cpus_1_8_0 time_0_1_40 traitobject_0_1_0 typeable_0_1_2 unicase_1_4_2 url_1_7_0 ]);
    features = mkFeatures (features.hyper_0_10_12 or {});
  };
  hyper_0_10_12_features = f: updateFeatures f (rec {
    base64_0_5_2.default = true;
    httparse_1_2_4.default = true;
    hyper_0_10_12.default = (f.hyper_0_10_12.default or true);
    language_tags_0_2_2.default = true;
    log_0_3_9.default = true;
    mime_0_2_6.default = true;
    num_cpus_1_8_0.default = true;
    time_0_1_40.default = true;
    traitobject_0_1_0.default = true;
    typeable_0_1_2.default = true;
    unicase_1_4_2.default = true;
    url_1_7_0.default = true;
  }) [ base64_0_5_2_features httparse_1_2_4_features language_tags_0_2_2_features log_0_3_9_features mime_0_2_6_features num_cpus_1_8_0_features time_0_1_40_features traitobject_0_1_0_features typeable_0_1_2_features unicase_1_4_2_features url_1_7_0_features ];
  hyper_native_tls_0_2_4 = { features?(hyper_native_tls_0_2_4_features {}) }: hyper_native_tls_0_2_4_ {
    dependencies = mapFeatures features ([ antidote_1_0_0 hyper_0_10_12 native_tls_0_1_5 ]);
  };
  hyper_native_tls_0_2_4_features = f: updateFeatures f (rec {
    antidote_1_0_0.default = true;
    hyper_0_10_12.default = true;
    hyper_native_tls_0_2_4.default = (f.hyper_native_tls_0_2_4.default or true);
    native_tls_0_1_5.default = true;
  }) [ antidote_1_0_0_features hyper_0_10_12_features native_tls_0_1_5_features ];
  hyper_openssl_0_2_7 = { features?(hyper_openssl_0_2_7_features {}) }: hyper_openssl_0_2_7_ {
    dependencies = mapFeatures features ([ antidote_1_0_0 hyper_0_10_12 openssl_0_9_24 ]);
  };
  hyper_openssl_0_2_7_features = f: updateFeatures f (rec {
    antidote_1_0_0.default = true;
    hyper_0_10_12.default = true;
    hyper_openssl_0_2_7.default = (f.hyper_openssl_0_2_7.default or true);
    openssl_0_9_24.default = true;
  }) [ antidote_1_0_0_features hyper_0_10_12_features openssl_0_9_24_features ];
  idna_0_1_4 = { features?(idna_0_1_4_features {}) }: idna_0_1_4_ {
    dependencies = mapFeatures features ([ matches_0_1_6 unicode_bidi_0_3_4 unicode_normalization_0_1_7 ]);
  };
  idna_0_1_4_features = f: updateFeatures f (rec {
    idna_0_1_4.default = (f.idna_0_1_4.default or true);
    matches_0_1_6.default = true;
    unicode_bidi_0_3_4.default = true;
    unicode_normalization_0_1_7.default = true;
  }) [ matches_0_1_6_features unicode_bidi_0_3_4_features unicode_normalization_0_1_7_features ];
  ieee754_0_2_2 = { features?(ieee754_0_2_2_features {}) }: ieee754_0_2_2_ {
    features = mkFeatures (features.ieee754_0_2_2 or {});
  };
  ieee754_0_2_2_features = f: updateFeatures f (rec {
    ieee754_0_2_2.default = (f.ieee754_0_2_2.default or true);
  }) [];
  imageflow_abi_0_1_0 = { features?(imageflow_abi_0_1_0_features {}) }: imageflow_abi_0_1_0_ {
    dependencies = mapFeatures features ([ backtrace_0_3_8 base64_0_5_2 imageflow_core_0_1_0 libc_0_2_42 smallvec_0_6_1 ]);
    buildDependencies = mapFeatures features ([ imageflow_helpers_0_1_0 moz_cheddar_0_4_2 regex_0_2_11 ]);
  };
  imageflow_abi_0_1_0_features = f: updateFeatures f (rec {
    backtrace_0_3_8.default = true;
    base64_0_5_2.default = true;
    imageflow_abi_0_1_0.default = (f.imageflow_abi_0_1_0.default or true);
    imageflow_core_0_1_0.default = true;
    imageflow_helpers_0_1_0.default = true;
    libc_0_2_42.default = true;
    moz_cheddar_0_4_2.default = true;
    regex_0_2_11.default = true;
    smallvec_0_6_1.default = true;
  }) [ backtrace_0_3_8_features base64_0_5_2_features imageflow_core_0_1_0_features libc_0_2_42_features smallvec_0_6_1_features imageflow_helpers_0_1_0_features moz_cheddar_0_4_2_features regex_0_2_11_features ];
  imageflow_c_components_0_1_0 = { features?(imageflow_c_components_0_1_0_features {}) }: imageflow_c_components_0_1_0_ {
    dependencies = mapFeatures features ([ lcms2_sys_2_4_8 libpng_sys_0_2_6 libz_sys_1_0_18 mozjpeg_sys_0_5_13 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_17 glob_0_2_11 ]);
    features = mkFeatures (features.imageflow_c_components_0_1_0 or {});
  };
  imageflow_c_components_0_1_0_features = f: updateFeatures f (rec {
    cc_1_0_17.default = true;
    cc_1_0_17.parallel = true;
    glob_0_2_11.default = true;
    imageflow_c_components_0_1_0.default = (f.imageflow_c_components_0_1_0.default or true);
    lcms2_sys_2_4_8.default = true;
    libpng_sys_0_2_6.default = true;
    libz_sys_1_0_18.default = true;
    mozjpeg_sys_0_5_13.default = true;
  }) [ lcms2_sys_2_4_8_features libpng_sys_0_2_6_features libz_sys_1_0_18_features mozjpeg_sys_0_5_13_features cc_1_0_17_features glob_0_2_11_features ];
  imageflow_core_0_1_0 = { features?(imageflow_core_0_1_0_features {}) }: imageflow_core_0_1_0_ {
    dependencies = mapFeatures features ([ blake2_rfc_0_2_18 chashmap_2_2_0 chrono_0_4_2 clap_2_31_2 daggy_0_5_0 dssim_2_9_9 fnv_1_0_6 getopts_0_2_17 gif_0_10_0 imageflow_c_components_0_1_0 imageflow_helpers_0_1_0 imageflow_riapi_0_1_0 imageflow_types_0_1_0 imagequant_2_11_9 imgref_1_3_4 itertools_0_7_8 lazy_static_1_0_1 lcms2_5_0_1 libc_0_2_42 lodepng_2_1_5 mozjpeg_0_8_5 num_0_1_42 petgraph_0_4_12 rgb_0_8_9 rustc_serialize_0_3_24 serde_1_0_66 serde_derive_1_0_66 serde_json_1_0_19 smallvec_0_6_1 threadpool_1_7_1 time_0_1_40 twox_hash_1_1_0 url_1_7_0 uuid_0_6_5 ]);
  };
  imageflow_core_0_1_0_features = f: updateFeatures f (rec {
    blake2_rfc_0_2_18.default = true;
    chashmap_2_2_0.default = true;
    chrono_0_4_2.default = true;
    clap_2_31_2.default = true;
    daggy_0_5_0.default = true;
    dssim_2_9_9.default = true;
    fnv_1_0_6.default = true;
    getopts_0_2_17.default = true;
    gif_0_10_0.default = true;
    imageflow_c_components_0_1_0.default = true;
    imageflow_core_0_1_0.default = (f.imageflow_core_0_1_0.default or true);
    imageflow_helpers_0_1_0.default = true;
    imageflow_riapi_0_1_0.default = true;
    imageflow_types_0_1_0.default = true;
    imagequant_2_11_9.default = true;
    imgref_1_3_4.default = true;
    itertools_0_7_8.default = true;
    lazy_static_1_0_1.default = true;
    lcms2_5_0_1.default = true;
    libc_0_2_42.default = true;
    lodepng_2_1_5.default = true;
    mozjpeg_0_8_5.default = true;
    num_0_1_42.default = true;
    petgraph_0_4_12.default = true;
    rgb_0_8_9.default = true;
    rustc_serialize_0_3_24.default = true;
    serde_1_0_66.default = true;
    serde_derive_1_0_66.default = true;
    serde_json_1_0_19.default = true;
    smallvec_0_6_1.default = true;
    threadpool_1_7_1.default = true;
    time_0_1_40.default = true;
    twox_hash_1_1_0.default = true;
    url_1_7_0.default = true;
    uuid_0_6_5."v4" = true;
    uuid_0_6_5.default = true;
  }) [ blake2_rfc_0_2_18_features chashmap_2_2_0_features chrono_0_4_2_features clap_2_31_2_features daggy_0_5_0_features dssim_2_9_9_features fnv_1_0_6_features getopts_0_2_17_features gif_0_10_0_features imageflow_c_components_0_1_0_features imageflow_helpers_0_1_0_features imageflow_riapi_0_1_0_features imageflow_types_0_1_0_features imagequant_2_11_9_features imgref_1_3_4_features itertools_0_7_8_features lazy_static_1_0_1_features lcms2_5_0_1_features libc_0_2_42_features lodepng_2_1_5_features mozjpeg_0_8_5_features num_0_1_42_features petgraph_0_4_12_features rgb_0_8_9_features rustc_serialize_0_3_24_features serde_1_0_66_features serde_derive_1_0_66_features serde_json_1_0_19_features smallvec_0_6_1_features threadpool_1_7_1_features time_0_1_40_features twox_hash_1_1_0_features url_1_7_0_features uuid_0_6_5_features ];
  imageflow_helpers_0_1_0 = { features?(imageflow_helpers_0_1_0_features {}) }: imageflow_helpers_0_1_0_ {
    dependencies = mapFeatures features ([ app_dirs_1_2_1 backtrace_0_3_8 base64_0_6_0 blake2_rfc_0_2_18 chashmap_2_2_0 chrono_0_4_2 digest_0_7_2 error_chain_0_11_0 fnv_1_0_6 hyper_0_10_12 hyper_native_tls_0_2_4 lazy_static_1_0_1 libc_0_2_42 lockless_0_2_0 mockito_0_10_0 num_0_1_42 parking_lot_0_5_5 rand_0_5_0 regex_0_2_11 reqwest_0_6_2 rustc_serialize_0_3_24 serde_1_0_66 serde_derive_1_0_66 serde_json_1_0_19 sha2_0_7_1 smallvec_0_6_1 time_0_1_40 twox_hash_1_1_0 unicase_2_1_0 uuid_0_6_5 zip_0_2_8 ])
      ++ (if !(kernel == "windows" || kernel == "darwin") then mapFeatures features ([ hyper_openssl_0_2_7 openssl_0_9_24 ]) else []);
  };
  imageflow_helpers_0_1_0_features = f: updateFeatures f (rec {
    app_dirs_1_2_1.default = true;
    backtrace_0_3_8.default = true;
    base64_0_6_0.default = true;
    blake2_rfc_0_2_18.default = true;
    chashmap_2_2_0.default = true;
    chrono_0_4_2.default = true;
    digest_0_7_2.default = true;
    error_chain_0_11_0.default = true;
    fnv_1_0_6.default = true;
    hyper_0_10_12.default = true;
    hyper_native_tls_0_2_4.default = true;
    hyper_openssl_0_2_7.default = true;
    imageflow_helpers_0_1_0.default = (f.imageflow_helpers_0_1_0.default or true);
    lazy_static_1_0_1.default = true;
    libc_0_2_42.default = true;
    lockless_0_2_0.default = true;
    mockito_0_10_0.default = true;
    num_0_1_42.default = true;
    openssl_0_9_24.default = true;
    parking_lot_0_5_5.default = true;
    parking_lot_0_5_5.nightly = true;
    rand_0_5_0.default = true;
    regex_0_2_11.default = true;
    reqwest_0_6_2.default = true;
    rustc_serialize_0_3_24.default = true;
    serde_1_0_66.default = true;
    serde_derive_1_0_66.default = true;
    serde_json_1_0_19.default = true;
    sha2_0_7_1.default = true;
    smallvec_0_6_1.default = true;
    time_0_1_40.default = true;
    twox_hash_1_1_0.default = true;
    unicase_2_1_0.default = true;
    uuid_0_6_5."v4" = true;
    uuid_0_6_5."v5" = true;
    uuid_0_6_5.default = true;
    zip_0_2_8.default = (f.zip_0_2_8.default or false);
  }) [ app_dirs_1_2_1_features backtrace_0_3_8_features base64_0_6_0_features blake2_rfc_0_2_18_features chashmap_2_2_0_features chrono_0_4_2_features digest_0_7_2_features error_chain_0_11_0_features fnv_1_0_6_features hyper_0_10_12_features hyper_native_tls_0_2_4_features lazy_static_1_0_1_features libc_0_2_42_features lockless_0_2_0_features mockito_0_10_0_features num_0_1_42_features parking_lot_0_5_5_features rand_0_5_0_features regex_0_2_11_features reqwest_0_6_2_features rustc_serialize_0_3_24_features serde_1_0_66_features serde_derive_1_0_66_features serde_json_1_0_19_features sha2_0_7_1_features smallvec_0_6_1_features time_0_1_40_features twox_hash_1_1_0_features unicase_2_1_0_features uuid_0_6_5_features zip_0_2_8_features hyper_openssl_0_2_7_features openssl_0_9_24_features ];
  imageflow_riapi_0_1_0 = { features?(imageflow_riapi_0_1_0_features {}) }: imageflow_riapi_0_1_0_ {
    dependencies = mapFeatures features ([ difference_1_0_0 enum_derive_0_1_7 ieee754_0_2_2 imageflow_helpers_0_1_0 imageflow_types_0_1_0 lazy_static_1_0_1 macro_attr_0_2_1 option_filter_1_0_1 time_0_1_40 url_1_7_0 ]);
  };
  imageflow_riapi_0_1_0_features = f: updateFeatures f (rec {
    difference_1_0_0.default = true;
    enum_derive_0_1_7.default = true;
    ieee754_0_2_2.default = true;
    imageflow_helpers_0_1_0.default = true;
    imageflow_riapi_0_1_0.default = (f.imageflow_riapi_0_1_0.default or true);
    imageflow_types_0_1_0.default = true;
    lazy_static_1_0_1.default = true;
    macro_attr_0_2_1.default = true;
    option_filter_1_0_1.default = true;
    time_0_1_40.default = true;
    url_1_7_0.default = true;
  }) [ difference_1_0_0_features enum_derive_0_1_7_features ieee754_0_2_2_features imageflow_helpers_0_1_0_features imageflow_types_0_1_0_features lazy_static_1_0_1_features macro_attr_0_2_1_features option_filter_1_0_1_features time_0_1_40_features url_1_7_0_features ];
  imageflow_server_0_1_0 = { features?(imageflow_server_0_1_0_features {}) }: imageflow_server_0_1_0_ {
    dependencies = mapFeatures features ([ bincode_0_9_3 blake2_rfc_0_2_18 chrono_0_4_2 clap_2_31_2 conduit_mime_types_0_7_3 env_logger_0_4_3 fnv_1_0_6 hyper_0_10_12 hyper_native_tls_0_2_4 imageflow_core_0_1_0 imageflow_helpers_0_1_0 imageflow_riapi_0_1_0 imageflow_types_0_1_0 iron_0_5_1 lazy_static_1_0_1 libc_0_2_42 log_0_3_9 logger_0_3_0 lru_cache_0_1_1 mount_0_3_0 persistent_0_3_0 rand_0_3_22 regex_0_2_11 reqwest_0_6_2 router_0_5_1 rustc_serialize_0_3_24 serde_1_0_66 serde_derive_1_0_66 serde_json_1_0_19 staticfile_0_3_1 threadpool_1_7_1 time_0_1_40 twox_hash_1_1_0 url_1_7_0 wait_timeout_0_1_5 ]);
  };
  imageflow_server_0_1_0_features = f: updateFeatures f (rec {
    bincode_0_9_3.default = true;
    blake2_rfc_0_2_18.default = true;
    chrono_0_4_2.default = true;
    clap_2_31_2.default = true;
    conduit_mime_types_0_7_3.default = true;
    env_logger_0_4_3.default = true;
    fnv_1_0_6.default = true;
    hyper_0_10_12.default = (f.hyper_0_10_12.default or false);
    hyper_native_tls_0_2_4.default = true;
    imageflow_core_0_1_0.default = true;
    imageflow_helpers_0_1_0.default = true;
    imageflow_riapi_0_1_0.default = true;
    imageflow_server_0_1_0.default = (f.imageflow_server_0_1_0.default or true);
    imageflow_types_0_1_0.default = true;
    iron_0_5_1.default = true;
    lazy_static_1_0_1.default = true;
    libc_0_2_42.default = true;
    log_0_3_9.default = true;
    logger_0_3_0.default = true;
    lru_cache_0_1_1.default = true;
    mount_0_3_0.default = true;
    persistent_0_3_0.default = true;
    rand_0_3_22.default = true;
    regex_0_2_11.default = true;
    reqwest_0_6_2.default = true;
    router_0_5_1.default = true;
    rustc_serialize_0_3_24.default = true;
    serde_1_0_66.default = true;
    serde_derive_1_0_66.default = true;
    serde_json_1_0_19.default = true;
    staticfile_0_3_1.default = true;
    threadpool_1_7_1.default = true;
    time_0_1_40.default = true;
    twox_hash_1_1_0.default = true;
    url_1_7_0.default = true;
    wait_timeout_0_1_5.default = true;
  }) [ bincode_0_9_3_features blake2_rfc_0_2_18_features chrono_0_4_2_features clap_2_31_2_features conduit_mime_types_0_7_3_features env_logger_0_4_3_features fnv_1_0_6_features hyper_0_10_12_features hyper_native_tls_0_2_4_features imageflow_core_0_1_0_features imageflow_helpers_0_1_0_features imageflow_riapi_0_1_0_features imageflow_types_0_1_0_features iron_0_5_1_features lazy_static_1_0_1_features libc_0_2_42_features log_0_3_9_features logger_0_3_0_features lru_cache_0_1_1_features mount_0_3_0_features persistent_0_3_0_features rand_0_3_22_features regex_0_2_11_features reqwest_0_6_2_features router_0_5_1_features rustc_serialize_0_3_24_features serde_1_0_66_features serde_derive_1_0_66_features serde_json_1_0_19_features staticfile_0_3_1_features threadpool_1_7_1_features time_0_1_40_features twox_hash_1_1_0_features url_1_7_0_features wait_timeout_0_1_5_features ];
  imageflow_tool_lib_0_1_0 = { features?(imageflow_tool_lib_0_1_0_features {}) }: imageflow_tool_lib_0_1_0_ {
    dependencies = mapFeatures features ([ clap_2_31_2 imageflow_core_0_1_0 imageflow_helpers_0_1_0 imageflow_types_0_1_0 libc_0_2_42 rustc_serialize_0_3_24 serde_1_0_66 serde_json_1_0_19 threadpool_1_7_1 time_0_1_40 ]);
  };
  imageflow_tool_lib_0_1_0_features = f: updateFeatures f (rec {
    clap_2_31_2.default = true;
    imageflow_core_0_1_0.default = true;
    imageflow_helpers_0_1_0.default = true;
    imageflow_tool_lib_0_1_0.default = (f.imageflow_tool_lib_0_1_0.default or true);
    imageflow_types_0_1_0.default = true;
    libc_0_2_42.default = true;
    rustc_serialize_0_3_24.default = true;
    serde_1_0_66.default = true;
    serde_json_1_0_19.default = true;
    threadpool_1_7_1.default = true;
    time_0_1_40.default = true;
  }) [ clap_2_31_2_features imageflow_core_0_1_0_features imageflow_helpers_0_1_0_features imageflow_types_0_1_0_features libc_0_2_42_features rustc_serialize_0_3_24_features serde_1_0_66_features serde_json_1_0_19_features threadpool_1_7_1_features time_0_1_40_features ];
  imageflow_types_0_1_0 = { features?(imageflow_types_0_1_0_features {}) }: imageflow_types_0_1_0_ {
    dependencies = mapFeatures features ([ chrono_0_4_2 imageflow_helpers_0_1_0 lazy_static_1_0_1 regex_0_2_11 serde_1_0_66 serde_derive_1_0_66 serde_json_1_0_19 ]);
    buildDependencies = mapFeatures features ([ chrono_0_4_2 quick_error_1_2_2 ]);
  };
  imageflow_types_0_1_0_features = f: updateFeatures f (rec {
    chrono_0_4_2.default = true;
    imageflow_helpers_0_1_0.default = true;
    imageflow_types_0_1_0.default = (f.imageflow_types_0_1_0.default or true);
    lazy_static_1_0_1.default = true;
    quick_error_1_2_2.default = true;
    regex_0_2_11.default = true;
    serde_1_0_66.default = true;
    serde_derive_1_0_66.default = true;
    serde_json_1_0_19.default = true;
  }) [ chrono_0_4_2_features imageflow_helpers_0_1_0_features lazy_static_1_0_1_features regex_0_2_11_features serde_1_0_66_features serde_derive_1_0_66_features serde_json_1_0_19_features chrono_0_4_2_features quick_error_1_2_2_features ];
  imagequant_2_11_9 = { features?(imagequant_2_11_9_features {}) }: imagequant_2_11_9_ {
    dependencies = mapFeatures features ([ imagequant_sys_2_12_0 libc_0_2_42 ]);
    features = mkFeatures (features.imagequant_2_11_9 or {});
  };
  imagequant_2_11_9_features = f: updateFeatures f (rec {
    imagequant_2_11_9.default = (f.imagequant_2_11_9.default or true);
    imagequant_2_11_9.openmp =
      (f.imagequant_2_11_9.openmp or false) ||
      (f.imagequant_2_11_9."openmp-static" or false) ||
      (imagequant_2_11_9."openmp-static" or false);
    imagequant_2_11_9.sse =
      (f.imagequant_2_11_9.sse or false) ||
      (f.imagequant_2_11_9.default or false) ||
      (imagequant_2_11_9.default or false);
    imagequant_sys_2_12_0."openmp-static" =
      (f.imagequant_sys_2_12_0."openmp-static" or false) ||
      (imagequant_2_11_9."openmp-static" or false) ||
      (f.imagequant_2_11_9."openmp-static" or false);
    imagequant_sys_2_12_0.default = true;
    imagequant_sys_2_12_0.openmp =
      (f.imagequant_sys_2_12_0.openmp or false) ||
      (imagequant_2_11_9.openmp or false) ||
      (f.imagequant_2_11_9.openmp or false);
    imagequant_sys_2_12_0.sse =
      (f.imagequant_sys_2_12_0.sse or false) ||
      (imagequant_2_11_9.sse or false) ||
      (f.imagequant_2_11_9.sse or false);
    libc_0_2_42.default = true;
  }) [ imagequant_sys_2_12_0_features libc_0_2_42_features ];
  imagequant_sys_2_12_0 = { features?(imagequant_sys_2_12_0_features {}) }: imagequant_sys_2_12_0_ {
    dependencies = mapFeatures features ([ rgb_0_8_9 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_17 ]);
    features = mkFeatures (features.imagequant_sys_2_12_0 or {});
  };
  imagequant_sys_2_12_0_features = f: updateFeatures f (rec {
    cc_1_0_17.default = true;
    imagequant_sys_2_12_0."openmp-sys" =
      (f.imagequant_sys_2_12_0."openmp-sys" or false) ||
      (f.imagequant_sys_2_12_0.openmp or false) ||
      (imagequant_sys_2_12_0.openmp or false);
    imagequant_sys_2_12_0.default = (f.imagequant_sys_2_12_0.default or true);
    imagequant_sys_2_12_0.openmp =
      (f.imagequant_sys_2_12_0.openmp or false) ||
      (f.imagequant_sys_2_12_0."openmp-static" or false) ||
      (imagequant_sys_2_12_0."openmp-static" or false);
    imagequant_sys_2_12_0.sse =
      (f.imagequant_sys_2_12_0.sse or false) ||
      (f.imagequant_sys_2_12_0.default or false) ||
      (imagequant_sys_2_12_0.default or false);
    rgb_0_8_9.default = true;
  }) [ rgb_0_8_9_features cc_1_0_17_features ];
  imgref_1_3_4 = { features?(imgref_1_3_4_features {}) }: imgref_1_3_4_ {};
  imgref_1_3_4_features = f: updateFeatures f (rec {
    imgref_1_3_4.default = (f.imgref_1_3_4.default or true);
  }) [];
  iron_0_5_1 = { features?(iron_0_5_1_features {}) }: iron_0_5_1_ {
    dependencies = mapFeatures features ([ conduit_mime_types_0_7_3 error_0_1_9 hyper_0_10_12 lazy_static_0_2_11 log_0_3_9 modifier_0_1_0 num_cpus_1_8_0 plugin_0_2_6 typemap_0_3_3 url_1_7_0 ]);
    features = mkFeatures (features.iron_0_5_1 or {});
  };
  iron_0_5_1_features = f: updateFeatures f (rec {
    conduit_mime_types_0_7_3.default = true;
    error_0_1_9.default = true;
    hyper_0_10_12.default = true;
    iron_0_5_1."hyper-native-tls" =
      (f.iron_0_5_1."hyper-native-tls" or false) ||
      (f.iron_0_5_1."native-tls-example" or false) ||
      (iron_0_5_1."native-tls-example" or false);
    iron_0_5_1.default = (f.iron_0_5_1.default or true);
    lazy_static_0_2_11.default = true;
    log_0_3_9.default = true;
    modifier_0_1_0.default = true;
    num_cpus_1_8_0.default = true;
    plugin_0_2_6.default = true;
    typemap_0_3_3.default = true;
    url_1_7_0.default = true;
  }) [ conduit_mime_types_0_7_3_features error_0_1_9_features hyper_0_10_12_features lazy_static_0_2_11_features log_0_3_9_features modifier_0_1_0_features num_cpus_1_8_0_features plugin_0_2_6_features typemap_0_3_3_features url_1_7_0_features ];
  itertools_0_7_8 = { features?(itertools_0_7_8_features {}) }: itertools_0_7_8_ {
    dependencies = mapFeatures features ([ either_1_5_0 ]);
    features = mkFeatures (features.itertools_0_7_8 or {});
  };
  itertools_0_7_8_features = f: updateFeatures f (rec {
    either_1_5_0.default = (f.either_1_5_0.default or false);
    itertools_0_7_8.default = (f.itertools_0_7_8.default or true);
    itertools_0_7_8.use_std =
      (f.itertools_0_7_8.use_std or false) ||
      (f.itertools_0_7_8.default or false) ||
      (itertools_0_7_8.default or false);
  }) [ either_1_5_0_features ];
  itoa_0_4_1 = { features?(itoa_0_4_1_features {}) }: itoa_0_4_1_ {
    features = mkFeatures (features.itoa_0_4_1 or {});
  };
  itoa_0_4_1_features = f: updateFeatures f (rec {
    itoa_0_4_1.default = (f.itoa_0_4_1.default or true);
    itoa_0_4_1.std =
      (f.itoa_0_4_1.std or false) ||
      (f.itoa_0_4_1.default or false) ||
      (itoa_0_4_1.default or false);
  }) [];
  kernel32_sys_0_2_2 = { features?(kernel32_sys_0_2_2_features {}) }: kernel32_sys_0_2_2_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  kernel32_sys_0_2_2_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = (f.kernel32_sys_0_2_2.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  language_tags_0_2_2 = { features?(language_tags_0_2_2_features {}) }: language_tags_0_2_2_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.language_tags_0_2_2 or {});
  };
  language_tags_0_2_2_features = f: updateFeatures f (rec {
    language_tags_0_2_2.default = (f.language_tags_0_2_2.default or true);
    language_tags_0_2_2.heapsize =
      (f.language_tags_0_2_2.heapsize or false) ||
      (f.language_tags_0_2_2.heap_size or false) ||
      (language_tags_0_2_2.heap_size or false);
    language_tags_0_2_2.heapsize_plugin =
      (f.language_tags_0_2_2.heapsize_plugin or false) ||
      (f.language_tags_0_2_2.heap_size or false) ||
      (language_tags_0_2_2.heap_size or false);
  }) [];
  lazy_static_0_2_11 = { features?(lazy_static_0_2_11_features {}) }: lazy_static_0_2_11_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_0_2_11 or {});
  };
  lazy_static_0_2_11_features = f: updateFeatures f (rec {
    lazy_static_0_2_11.compiletest_rs =
      (f.lazy_static_0_2_11.compiletest_rs or false) ||
      (f.lazy_static_0_2_11.compiletest or false) ||
      (lazy_static_0_2_11.compiletest or false);
    lazy_static_0_2_11.default = (f.lazy_static_0_2_11.default or true);
    lazy_static_0_2_11.nightly =
      (f.lazy_static_0_2_11.nightly or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
    lazy_static_0_2_11.spin =
      (f.lazy_static_0_2_11.spin or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
  }) [];
  lazy_static_1_0_1 = { features?(lazy_static_1_0_1_features {}) }: lazy_static_1_0_1_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_1_0_1 or {});
  };
  lazy_static_1_0_1_features = f: updateFeatures f (rec {
    lazy_static_1_0_1.default = (f.lazy_static_1_0_1.default or true);
    lazy_static_1_0_1.nightly =
      (f.lazy_static_1_0_1.nightly or false) ||
      (f.lazy_static_1_0_1.spin_no_std or false) ||
      (lazy_static_1_0_1.spin_no_std or false);
    lazy_static_1_0_1.spin =
      (f.lazy_static_1_0_1.spin or false) ||
      (f.lazy_static_1_0_1.spin_no_std or false) ||
      (lazy_static_1_0_1.spin_no_std or false);
  }) [];
  lcms2_5_0_1 = { features?(lcms2_5_0_1_features {}) }: lcms2_5_0_1_ {
    dependencies = mapFeatures features ([ foreign_types_0_3_2 lcms2_sys_2_4_8 ]);
    features = mkFeatures (features.lcms2_5_0_1 or {});
  };
  lcms2_5_0_1_features = f: updateFeatures f (rec {
    foreign_types_0_3_2.default = true;
    lcms2_5_0_1.default = (f.lcms2_5_0_1.default or true);
    lcms2_sys_2_4_8.default = true;
    lcms2_sys_2_4_8.static =
      (f.lcms2_sys_2_4_8.static or false) ||
      (lcms2_5_0_1.static or false) ||
      (f.lcms2_5_0_1.static or false);
  }) [ foreign_types_0_3_2_features lcms2_sys_2_4_8_features ];
  lcms2_sys_2_4_8 = { features?(lcms2_sys_2_4_8_features {}) }: lcms2_sys_2_4_8_ {
    dependencies = mapFeatures features ([ libc_0_2_42 ]);
    buildDependencies = mapFeatures features ([ dunce_0_1_1 ]
      ++ (if features.lcms2_sys_2_4_8.cc or false then [ cc_1_0_17 ] else [])
      ++ (if features.lcms2_sys_2_4_8."pkg-config" or false then [ pkg_config_0_3_11 ] else []));
    features = mkFeatures (features.lcms2_sys_2_4_8 or {});
  };
  lcms2_sys_2_4_8_features = f: updateFeatures f (rec {
    cc_1_0_17.default = true;
    cc_1_0_17.parallel = true;
    dunce_0_1_1.default = true;
    lcms2_sys_2_4_8."pkg-config" =
      (f.lcms2_sys_2_4_8."pkg-config" or false) ||
      (f.lcms2_sys_2_4_8.dynamic or false) ||
      (lcms2_sys_2_4_8.dynamic or false);
    lcms2_sys_2_4_8."static-fallback" =
      (f.lcms2_sys_2_4_8."static-fallback" or false) ||
      (f.lcms2_sys_2_4_8.default or false) ||
      (lcms2_sys_2_4_8.default or false);
    lcms2_sys_2_4_8.cc =
      (f.lcms2_sys_2_4_8.cc or false) ||
      (f.lcms2_sys_2_4_8.static or false) ||
      (lcms2_sys_2_4_8.static or false) ||
      (f.lcms2_sys_2_4_8."static-fallback" or false) ||
      (lcms2_sys_2_4_8."static-fallback" or false);
    lcms2_sys_2_4_8.default = (f.lcms2_sys_2_4_8.default or true);
    lcms2_sys_2_4_8.dynamic =
      (f.lcms2_sys_2_4_8.dynamic or false) ||
      (f.lcms2_sys_2_4_8.default or false) ||
      (lcms2_sys_2_4_8.default or false);
    libc_0_2_42.default = true;
    pkg_config_0_3_11.default = true;
  }) [ libc_0_2_42_features cc_1_0_17_features dunce_0_1_1_features pkg_config_0_3_11_features ];
  libc_0_2_42 = { features?(libc_0_2_42_features {}) }: libc_0_2_42_ {
    features = mkFeatures (features.libc_0_2_42 or {});
  };
  libc_0_2_42_features = f: updateFeatures f (rec {
    libc_0_2_42.default = (f.libc_0_2_42.default or true);
    libc_0_2_42.use_std =
      (f.libc_0_2_42.use_std or false) ||
      (f.libc_0_2_42.default or false) ||
      (libc_0_2_42.default or false);
  }) [];
  libflate_0_1_14 = { features?(libflate_0_1_14_features {}) }: libflate_0_1_14_ {
    dependencies = mapFeatures features ([ adler32_1_0_2 byteorder_1_2_3 crc_1_8_1 ]);
  };
  libflate_0_1_14_features = f: updateFeatures f (rec {
    adler32_1_0_2.default = true;
    byteorder_1_2_3.default = true;
    crc_1_8_1.default = true;
    libflate_0_1_14.default = (f.libflate_0_1_14.default or true);
  }) [ adler32_1_0_2_features byteorder_1_2_3_features crc_1_8_1_features ];
  libpng_sys_0_2_6 = { features?(libpng_sys_0_2_6_features {}) }: libpng_sys_0_2_6_ {
    dependencies = mapFeatures features ([ libc_0_2_42 ]
      ++ (if features.libpng_sys_0_2_6."libz-sys" or false then [ libz_sys_1_0_18 ] else []));
    buildDependencies = mapFeatures features ([ cc_1_0_17 dunce_0_1_1 pkg_config_0_3_11 ]);
    features = mkFeatures (features.libpng_sys_0_2_6 or {});
  };
  libpng_sys_0_2_6_features = f: updateFeatures f (rec {
    cc_1_0_17.default = true;
    dunce_0_1_1.default = true;
    libc_0_2_42.default = true;
    libpng_sys_0_2_6."libz-sys" =
      (f.libpng_sys_0_2_6."libz-sys" or false) ||
      (f.libpng_sys_0_2_6.default or false) ||
      (libpng_sys_0_2_6.default or false);
    libpng_sys_0_2_6.default = (f.libpng_sys_0_2_6.default or true);
    libz_sys_1_0_18.default = true;
    pkg_config_0_3_11.default = true;
  }) [ libc_0_2_42_features libz_sys_1_0_18_features cc_1_0_17_features dunce_0_1_1_features pkg_config_0_3_11_features ];
  libz_sys_1_0_18 = { features?(libz_sys_1_0_18_features {}) }: libz_sys_1_0_18_ {
    dependencies = mapFeatures features ([ libc_0_2_42 ])
      ++ (if abi == "msvc" then mapFeatures features ([]) else []);
    buildDependencies = mapFeatures features ([ cc_1_0_17 pkg_config_0_3_11 ]);
  };
  libz_sys_1_0_18_features = f: updateFeatures f (rec {
    cc_1_0_17.default = true;
    libc_0_2_42.default = true;
    libz_sys_1_0_18.default = (f.libz_sys_1_0_18.default or true);
    pkg_config_0_3_11.default = true;
  }) [ libc_0_2_42_features cc_1_0_17_features pkg_config_0_3_11_features ];
  linked_hash_map_0_4_2 = { features?(linked_hash_map_0_4_2_features {}) }: linked_hash_map_0_4_2_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.linked_hash_map_0_4_2 or {});
  };
  linked_hash_map_0_4_2_features = f: updateFeatures f (rec {
    linked_hash_map_0_4_2.default = (f.linked_hash_map_0_4_2.default or true);
    linked_hash_map_0_4_2.heapsize =
      (f.linked_hash_map_0_4_2.heapsize or false) ||
      (f.linked_hash_map_0_4_2.heapsize_impl or false) ||
      (linked_hash_map_0_4_2.heapsize_impl or false);
    linked_hash_map_0_4_2.serde =
      (f.linked_hash_map_0_4_2.serde or false) ||
      (f.linked_hash_map_0_4_2.serde_impl or false) ||
      (linked_hash_map_0_4_2.serde_impl or false);
    linked_hash_map_0_4_2.serde_test =
      (f.linked_hash_map_0_4_2.serde_test or false) ||
      (f.linked_hash_map_0_4_2.serde_impl or false) ||
      (linked_hash_map_0_4_2.serde_impl or false);
  }) [];
  lockless_0_2_0 = { features?(lockless_0_2_0_features {}) }: lockless_0_2_0_ {
    dependencies = mapFeatures features ([ futures_0_1_21 parking_lot_0_3_8 ]);
  };
  lockless_0_2_0_features = f: updateFeatures f (rec {
    futures_0_1_21.default = true;
    lockless_0_2_0.default = (f.lockless_0_2_0.default or true);
    parking_lot_0_3_8.default = true;
  }) [ futures_0_1_21_features parking_lot_0_3_8_features ];
  lodepng_2_1_5 = { features?(lodepng_2_1_5_features {}) }: lodepng_2_1_5_ {
    dependencies = mapFeatures features ([ libc_0_2_42 rgb_0_8_9 ]);
  };
  lodepng_2_1_5_features = f: updateFeatures f (rec {
    libc_0_2_42.default = true;
    lodepng_2_1_5.default = (f.lodepng_2_1_5.default or true);
    rgb_0_8_9.default = true;
  }) [ libc_0_2_42_features rgb_0_8_9_features ];
  log_0_3_9 = { features?(log_0_3_9_features {}) }: log_0_3_9_ {
    dependencies = mapFeatures features ([ log_0_4_1 ]);
    features = mkFeatures (features.log_0_3_9 or {});
  };
  log_0_3_9_features = f: updateFeatures f (rec {
    log_0_3_9.default = (f.log_0_3_9.default or true);
    log_0_3_9.use_std =
      (f.log_0_3_9.use_std or false) ||
      (f.log_0_3_9.default or false) ||
      (log_0_3_9.default or false);
    log_0_4_1.default = true;
    log_0_4_1.max_level_debug =
      (f.log_0_4_1.max_level_debug or false) ||
      (log_0_3_9.max_level_debug or false) ||
      (f.log_0_3_9.max_level_debug or false);
    log_0_4_1.max_level_error =
      (f.log_0_4_1.max_level_error or false) ||
      (log_0_3_9.max_level_error or false) ||
      (f.log_0_3_9.max_level_error or false);
    log_0_4_1.max_level_info =
      (f.log_0_4_1.max_level_info or false) ||
      (log_0_3_9.max_level_info or false) ||
      (f.log_0_3_9.max_level_info or false);
    log_0_4_1.max_level_off =
      (f.log_0_4_1.max_level_off or false) ||
      (log_0_3_9.max_level_off or false) ||
      (f.log_0_3_9.max_level_off or false);
    log_0_4_1.max_level_trace =
      (f.log_0_4_1.max_level_trace or false) ||
      (log_0_3_9.max_level_trace or false) ||
      (f.log_0_3_9.max_level_trace or false);
    log_0_4_1.max_level_warn =
      (f.log_0_4_1.max_level_warn or false) ||
      (log_0_3_9.max_level_warn or false) ||
      (f.log_0_3_9.max_level_warn or false);
    log_0_4_1.release_max_level_debug =
      (f.log_0_4_1.release_max_level_debug or false) ||
      (log_0_3_9.release_max_level_debug or false) ||
      (f.log_0_3_9.release_max_level_debug or false);
    log_0_4_1.release_max_level_error =
      (f.log_0_4_1.release_max_level_error or false) ||
      (log_0_3_9.release_max_level_error or false) ||
      (f.log_0_3_9.release_max_level_error or false);
    log_0_4_1.release_max_level_info =
      (f.log_0_4_1.release_max_level_info or false) ||
      (log_0_3_9.release_max_level_info or false) ||
      (f.log_0_3_9.release_max_level_info or false);
    log_0_4_1.release_max_level_off =
      (f.log_0_4_1.release_max_level_off or false) ||
      (log_0_3_9.release_max_level_off or false) ||
      (f.log_0_3_9.release_max_level_off or false);
    log_0_4_1.release_max_level_trace =
      (f.log_0_4_1.release_max_level_trace or false) ||
      (log_0_3_9.release_max_level_trace or false) ||
      (f.log_0_3_9.release_max_level_trace or false);
    log_0_4_1.release_max_level_warn =
      (f.log_0_4_1.release_max_level_warn or false) ||
      (log_0_3_9.release_max_level_warn or false) ||
      (f.log_0_3_9.release_max_level_warn or false);
    log_0_4_1.std =
      (f.log_0_4_1.std or false) ||
      (log_0_3_9.use_std or false) ||
      (f.log_0_3_9.use_std or false);
  }) [ log_0_4_1_features ];
  log_0_4_1 = { features?(log_0_4_1_features {}) }: log_0_4_1_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_3 ]);
    features = mkFeatures (features.log_0_4_1 or {});
  };
  log_0_4_1_features = f: updateFeatures f (rec {
    cfg_if_0_1_3.default = true;
    log_0_4_1.default = (f.log_0_4_1.default or true);
  }) [ cfg_if_0_1_3_features ];
  logger_0_3_0 = { features?(logger_0_3_0_features {}) }: logger_0_3_0_ {
    dependencies = mapFeatures features ([ iron_0_5_1 log_0_3_9 time_0_1_40 ]);
  };
  logger_0_3_0_features = f: updateFeatures f (rec {
    iron_0_5_1.default = (f.iron_0_5_1.default or false);
    log_0_3_9.default = true;
    logger_0_3_0.default = (f.logger_0_3_0.default or true);
    time_0_1_40.default = true;
  }) [ iron_0_5_1_features log_0_3_9_features time_0_1_40_features ];
  lru_cache_0_1_1 = { features?(lru_cache_0_1_1_features {}) }: lru_cache_0_1_1_ {
    dependencies = mapFeatures features ([ linked_hash_map_0_4_2 ]);
    features = mkFeatures (features.lru_cache_0_1_1 or {});
  };
  lru_cache_0_1_1_features = f: updateFeatures f (rec {
    linked_hash_map_0_4_2.default = true;
    linked_hash_map_0_4_2.heapsize_impl =
      (f.linked_hash_map_0_4_2.heapsize_impl or false) ||
      (lru_cache_0_1_1.heapsize_impl or false) ||
      (f.lru_cache_0_1_1.heapsize_impl or false);
    lru_cache_0_1_1.default = (f.lru_cache_0_1_1.default or true);
    lru_cache_0_1_1.heapsize =
      (f.lru_cache_0_1_1.heapsize or false) ||
      (f.lru_cache_0_1_1.heapsize_impl or false) ||
      (lru_cache_0_1_1.heapsize_impl or false);
  }) [ linked_hash_map_0_4_2_features ];
  lzw_0_10_0 = { features?(lzw_0_10_0_features {}) }: lzw_0_10_0_ {
    features = mkFeatures (features.lzw_0_10_0 or {});
  };
  lzw_0_10_0_features = f: updateFeatures f (rec {
    lzw_0_10_0.default = (f.lzw_0_10_0.default or true);
    lzw_0_10_0.raii_no_panic =
      (f.lzw_0_10_0.raii_no_panic or false) ||
      (f.lzw_0_10_0.default or false) ||
      (lzw_0_10_0.default or false);
  }) [];
  macro_attr_0_2_1 = { features?(macro_attr_0_2_1_features {}) }: macro_attr_0_2_1_ {
    features = mkFeatures (features.macro_attr_0_2_1 or {});
  };
  macro_attr_0_2_1_features = f: updateFeatures f (rec {
    macro_attr_0_2_1.default = (f.macro_attr_0_2_1.default or true);
    macro_attr_0_2_1.std =
      (f.macro_attr_0_2_1.std or false) ||
      (f.macro_attr_0_2_1.default or false) ||
      (macro_attr_0_2_1.default or false);
  }) [];
  matches_0_1_6 = { features?(matches_0_1_6_features {}) }: matches_0_1_6_ {};
  matches_0_1_6_features = f: updateFeatures f (rec {
    matches_0_1_6.default = (f.matches_0_1_6.default or true);
  }) [];
  memchr_2_0_1 = { features?(memchr_2_0_1_features {}) }: memchr_2_0_1_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.memchr_2_0_1.libc or false then [ libc_0_2_42 ] else []));
    features = mkFeatures (features.memchr_2_0_1 or {});
  };
  memchr_2_0_1_features = f: updateFeatures f (rec {
    libc_0_2_42.default = (f.libc_0_2_42.default or false);
    libc_0_2_42.use_std =
      (f.libc_0_2_42.use_std or false) ||
      (memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.use_std or false);
    memchr_2_0_1.default = (f.memchr_2_0_1.default or true);
    memchr_2_0_1.libc =
      (f.memchr_2_0_1.libc or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false) ||
      (f.memchr_2_0_1.use_std or false) ||
      (memchr_2_0_1.use_std or false);
    memchr_2_0_1.use_std =
      (f.memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false);
  }) [ libc_0_2_42_features ];
  memoffset_0_2_1 = { features?(memoffset_0_2_1_features {}) }: memoffset_0_2_1_ {};
  memoffset_0_2_1_features = f: updateFeatures f (rec {
    memoffset_0_2_1.default = (f.memoffset_0_2_1.default or true);
  }) [];
  mime_0_2_6 = { features?(mime_0_2_6_features {}) }: mime_0_2_6_ {
    dependencies = mapFeatures features ([ log_0_3_9 ]);
    features = mkFeatures (features.mime_0_2_6 or {});
  };
  mime_0_2_6_features = f: updateFeatures f (rec {
    log_0_3_9.default = true;
    mime_0_2_6.default = (f.mime_0_2_6.default or true);
    mime_0_2_6.heapsize =
      (f.mime_0_2_6.heapsize or false) ||
      (f.mime_0_2_6.heap_size or false) ||
      (mime_0_2_6.heap_size or false);
  }) [ log_0_3_9_features ];
  miniz_oxide_0_1_2 = { features?(miniz_oxide_0_1_2_features {}) }: miniz_oxide_0_1_2_ {
    dependencies = mapFeatures features ([ adler32_1_0_2 libc_0_2_42 ]);
  };
  miniz_oxide_0_1_2_features = f: updateFeatures f (rec {
    adler32_1_0_2.default = true;
    libc_0_2_42.default = true;
    miniz_oxide_0_1_2.default = (f.miniz_oxide_0_1_2.default or true);
  }) [ adler32_1_0_2_features libc_0_2_42_features ];
  miniz_oxide_c_api_0_1_2 = { features?(miniz_oxide_c_api_0_1_2_features {}) }: miniz_oxide_c_api_0_1_2_ {
    dependencies = mapFeatures features ([ crc_1_8_1 libc_0_2_42 miniz_oxide_0_1_2 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_17 ]);
    features = mkFeatures (features.miniz_oxide_c_api_0_1_2 or {});
  };
  miniz_oxide_c_api_0_1_2_features = f: updateFeatures f (rec {
    cc_1_0_17.default = true;
    crc_1_8_1.default = true;
    libc_0_2_42.default = true;
    miniz_oxide_0_1_2.default = true;
    miniz_oxide_c_api_0_1_2.build_orig_miniz =
      (f.miniz_oxide_c_api_0_1_2.build_orig_miniz or false) ||
      (f.miniz_oxide_c_api_0_1_2.benching or false) ||
      (miniz_oxide_c_api_0_1_2.benching or false) ||
      (f.miniz_oxide_c_api_0_1_2.fuzzing or false) ||
      (miniz_oxide_c_api_0_1_2.fuzzing or false);
    miniz_oxide_c_api_0_1_2.build_stub_miniz =
      (f.miniz_oxide_c_api_0_1_2.build_stub_miniz or false) ||
      (f.miniz_oxide_c_api_0_1_2.miniz_zip or false) ||
      (miniz_oxide_c_api_0_1_2.miniz_zip or false);
    miniz_oxide_c_api_0_1_2.default = (f.miniz_oxide_c_api_0_1_2.default or true);
    miniz_oxide_c_api_0_1_2.no_c_export =
      (f.miniz_oxide_c_api_0_1_2.no_c_export or false) ||
      (f.miniz_oxide_c_api_0_1_2.benching or false) ||
      (miniz_oxide_c_api_0_1_2.benching or false) ||
      (f.miniz_oxide_c_api_0_1_2.fuzzing or false) ||
      (miniz_oxide_c_api_0_1_2.fuzzing or false);
  }) [ crc_1_8_1_features libc_0_2_42_features miniz_oxide_0_1_2_features cc_1_0_17_features ];
  mockito_0_10_0 = { features?(mockito_0_10_0_features {}) }: mockito_0_10_0_ {
    dependencies = mapFeatures features ([ http_muncher_0_3_2 lazy_static_0_2_11 rand_0_3_22 regex_0_2_11 serde_json_1_0_19 ]);
  };
  mockito_0_10_0_features = f: updateFeatures f (rec {
    http_muncher_0_3_2.default = true;
    lazy_static_0_2_11.default = true;
    mockito_0_10_0.default = (f.mockito_0_10_0.default or true);
    rand_0_3_22.default = true;
    regex_0_2_11.default = true;
    serde_json_1_0_19.default = true;
  }) [ http_muncher_0_3_2_features lazy_static_0_2_11_features rand_0_3_22_features regex_0_2_11_features serde_json_1_0_19_features ];
  modifier_0_1_0 = { features?(modifier_0_1_0_features {}) }: modifier_0_1_0_ {};
  modifier_0_1_0_features = f: updateFeatures f (rec {
    modifier_0_1_0.default = (f.modifier_0_1_0.default or true);
  }) [];
  mount_0_3_0 = { features?(mount_0_3_0_features {}) }: mount_0_3_0_ {
    dependencies = mapFeatures features ([ iron_0_5_1 sequence_trie_0_2_1 ]);
  };
  mount_0_3_0_features = f: updateFeatures f (rec {
    iron_0_5_1.default = true;
    mount_0_3_0.default = (f.mount_0_3_0.default or true);
    sequence_trie_0_2_1.default = true;
  }) [ iron_0_5_1_features sequence_trie_0_2_1_features ];
  moz_cheddar_0_4_2 = { features?(moz_cheddar_0_4_2_features {}) }: moz_cheddar_0_4_2_ {
    dependencies = mapFeatures features ([ clap_2_31_2 toml_0_4_6 ]
      ++ (if features.moz_cheddar_0_4_2.syntex_errors or false then [ syntex_errors_0_58_1 ] else [])
      ++ (if features.moz_cheddar_0_4_2.syntex_syntax or false then [ syntex_syntax_0_58_1 ] else []));
    features = mkFeatures (features.moz_cheddar_0_4_2 or {});
  };
  moz_cheddar_0_4_2_features = f: updateFeatures f (rec {
    clap_2_31_2.default = true;
    moz_cheddar_0_4_2."with-syntex" =
      (f.moz_cheddar_0_4_2."with-syntex" or false) ||
      (f.moz_cheddar_0_4_2.default or false) ||
      (moz_cheddar_0_4_2.default or false);
    moz_cheddar_0_4_2.default = (f.moz_cheddar_0_4_2.default or true);
    moz_cheddar_0_4_2.syntex_errors =
      (f.moz_cheddar_0_4_2.syntex_errors or false) ||
      (f.moz_cheddar_0_4_2."with-syntex" or false) ||
      (moz_cheddar_0_4_2."with-syntex" or false);
    moz_cheddar_0_4_2.syntex_syntax =
      (f.moz_cheddar_0_4_2.syntex_syntax or false) ||
      (f.moz_cheddar_0_4_2."with-syntex" or false) ||
      (moz_cheddar_0_4_2."with-syntex" or false);
    syntex_errors_0_58_1.default = true;
    syntex_syntax_0_58_1.default = true;
    toml_0_4_6.default = true;
  }) [ clap_2_31_2_features syntex_errors_0_58_1_features syntex_syntax_0_58_1_features toml_0_4_6_features ];
  mozjpeg_0_8_5 = { features?(mozjpeg_0_8_5_features {}) }: mozjpeg_0_8_5_ {
    dependencies = mapFeatures features ([ arrayvec_0_4_7 libc_0_2_42 mozjpeg_sys_0_5_13 rgb_0_8_9 ]);
  };
  mozjpeg_0_8_5_features = f: updateFeatures f (rec {
    arrayvec_0_4_7.default = true;
    arrayvec_0_4_7.use_union = true;
    libc_0_2_42.default = true;
    mozjpeg_0_8_5.default = (f.mozjpeg_0_8_5.default or true);
    mozjpeg_sys_0_5_13.default = true;
    rgb_0_8_9.default = true;
  }) [ arrayvec_0_4_7_features libc_0_2_42_features mozjpeg_sys_0_5_13_features rgb_0_8_9_features ];
  mozjpeg_sys_0_5_13 = { features?(mozjpeg_sys_0_5_13_features {}) }: mozjpeg_sys_0_5_13_ {
    dependencies = mapFeatures features ([ libc_0_2_42 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_17 dunce_0_1_1 ]
      ++ (if features.mozjpeg_sys_0_5_13."nasm-rs" or false then [ nasm_rs_0_1_3 ] else []));
    features = mkFeatures (features.mozjpeg_sys_0_5_13 or {});
  };
  mozjpeg_sys_0_5_13_features = f: updateFeatures f (rec {
    cc_1_0_17.default = true;
    cc_1_0_17.parallel = true;
    dunce_0_1_1.default = true;
    libc_0_2_42.default = true;
    mozjpeg_sys_0_5_13."jpeg70_abi" =
      (f.mozjpeg_sys_0_5_13."jpeg70_abi" or false) ||
      (f.mozjpeg_sys_0_5_13."jpeg80_abi" or false) ||
      (mozjpeg_sys_0_5_13."jpeg80_abi" or false);
    mozjpeg_sys_0_5_13."nasm-rs" =
      (f.mozjpeg_sys_0_5_13."nasm-rs" or false) ||
      (f.mozjpeg_sys_0_5_13.nasm_simd or false) ||
      (mozjpeg_sys_0_5_13.nasm_simd or false);
    mozjpeg_sys_0_5_13.arith_dec =
      (f.mozjpeg_sys_0_5_13.arith_dec or false) ||
      (f.mozjpeg_sys_0_5_13."jpeg70_abi" or false) ||
      (mozjpeg_sys_0_5_13."jpeg70_abi" or false);
    mozjpeg_sys_0_5_13.arith_enc =
      (f.mozjpeg_sys_0_5_13.arith_enc or false) ||
      (f.mozjpeg_sys_0_5_13."jpeg70_abi" or false) ||
      (mozjpeg_sys_0_5_13."jpeg70_abi" or false);
    mozjpeg_sys_0_5_13.default = (f.mozjpeg_sys_0_5_13.default or true);
    mozjpeg_sys_0_5_13.nasm_simd =
      (f.mozjpeg_sys_0_5_13.nasm_simd or false) ||
      (f.mozjpeg_sys_0_5_13.default or false) ||
      (mozjpeg_sys_0_5_13.default or false);
    nasm_rs_0_1_3.default = true;
  }) [ libc_0_2_42_features cc_1_0_17_features dunce_0_1_1_features nasm_rs_0_1_3_features ];
  msdos_time_0_1_6 = { features?(msdos_time_0_1_6_features {}) }: msdos_time_0_1_6_ {
    dependencies = mapFeatures features ([ time_0_1_40 ])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  msdos_time_0_1_6_features = f: updateFeatures f (rec {
    msdos_time_0_1_6.default = (f.msdos_time_0_1_6.default or true);
    time_0_1_40.default = true;
    winapi_0_3_5.default = true;
    winapi_0_3_5.timezoneapi = true;
    winapi_0_3_5.winbase = true;
  }) [ time_0_1_40_features winapi_0_3_5_features ];
  nasm_rs_0_1_3 = { features?(nasm_rs_0_1_3_features {}) }: nasm_rs_0_1_3_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.nasm_rs_0_1_3.rayon or false then [ rayon_1_0_1 ] else []));
    features = mkFeatures (features.nasm_rs_0_1_3 or {});
  };
  nasm_rs_0_1_3_features = f: updateFeatures f (rec {
    nasm_rs_0_1_3.default = (f.nasm_rs_0_1_3.default or true);
    nasm_rs_0_1_3.rayon =
      (f.nasm_rs_0_1_3.rayon or false) ||
      (f.nasm_rs_0_1_3.parallel or false) ||
      (nasm_rs_0_1_3.parallel or false);
    rayon_1_0_1.default = true;
  }) [ rayon_1_0_1_features ];
  native_tls_0_1_5 = { features?(native_tls_0_1_5_features {}) }: native_tls_0_1_5_ {
    dependencies = mapFeatures features ([ lazy_static_0_2_11 ])
      ++ (if kernel == "darwin" || kernel == "ios" then mapFeatures features ([ libc_0_2_42 security_framework_0_1_16 security_framework_sys_0_1_16 tempdir_0_3_7 ]) else [])
      ++ (if !(kernel == "windows" || kernel == "darwin" || kernel == "ios") then mapFeatures features ([ openssl_0_9_24 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ schannel_0_1_12 ]) else []);
  };
  native_tls_0_1_5_features = f: updateFeatures f (rec {
    lazy_static_0_2_11.default = true;
    libc_0_2_42.default = true;
    native_tls_0_1_5.default = (f.native_tls_0_1_5.default or true);
    openssl_0_9_24.default = true;
    schannel_0_1_12.default = true;
    security_framework_0_1_16."OSX_10_8" = true;
    security_framework_0_1_16.default = true;
    security_framework_sys_0_1_16.default = true;
    tempdir_0_3_7.default = true;
  }) [ lazy_static_0_2_11_features libc_0_2_42_features security_framework_0_1_16_features security_framework_sys_0_1_16_features tempdir_0_3_7_features openssl_0_9_24_features schannel_0_1_12_features ];
  nodrop_0_1_12 = { features?(nodrop_0_1_12_features {}) }: nodrop_0_1_12_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.nodrop_0_1_12 or {});
  };
  nodrop_0_1_12_features = f: updateFeatures f (rec {
    nodrop_0_1_12."nodrop-union" =
      (f.nodrop_0_1_12."nodrop-union" or false) ||
      (f.nodrop_0_1_12.use_union or false) ||
      (nodrop_0_1_12.use_union or false);
    nodrop_0_1_12.default = (f.nodrop_0_1_12.default or true);
    nodrop_0_1_12.std =
      (f.nodrop_0_1_12.std or false) ||
      (f.nodrop_0_1_12.default or false) ||
      (nodrop_0_1_12.default or false);
  }) [];
  num_0_1_42 = { features?(num_0_1_42_features {}) }: num_0_1_42_ {
    dependencies = mapFeatures features ([ num_integer_0_1_38 num_iter_0_1_37 num_traits_0_2_4 ]
      ++ (if features.num_0_1_42."num-bigint" or false then [ num_bigint_0_1_44 ] else [])
      ++ (if features.num_0_1_42."num-complex" or false then [ num_complex_0_1_43 ] else [])
      ++ (if features.num_0_1_42."num-rational" or false then [ num_rational_0_1_42 ] else []));
    features = mkFeatures (features.num_0_1_42 or {});
  };
  num_0_1_42_features = f: updateFeatures f (rec {
    num_0_1_42."num-bigint" =
      (f.num_0_1_42."num-bigint" or false) ||
      (f.num_0_1_42.bigint or false) ||
      (num_0_1_42.bigint or false);
    num_0_1_42."num-complex" =
      (f.num_0_1_42."num-complex" or false) ||
      (f.num_0_1_42.complex or false) ||
      (num_0_1_42.complex or false);
    num_0_1_42."num-rational" =
      (f.num_0_1_42."num-rational" or false) ||
      (f.num_0_1_42.rational or false) ||
      (num_0_1_42.rational or false);
    num_0_1_42."rustc-serialize" =
      (f.num_0_1_42."rustc-serialize" or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_0_1_42.bigint =
      (f.num_0_1_42.bigint or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_0_1_42.complex =
      (f.num_0_1_42.complex or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_0_1_42.default = (f.num_0_1_42.default or true);
    num_0_1_42.rational =
      (f.num_0_1_42.rational or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_bigint_0_1_44."rustc-serialize" =
      (f.num_bigint_0_1_44."rustc-serialize" or false) ||
      (num_0_1_42."rustc-serialize" or false) ||
      (f.num_0_1_42."rustc-serialize" or false);
    num_bigint_0_1_44.default = true;
    num_bigint_0_1_44.serde =
      (f.num_bigint_0_1_44.serde or false) ||
      (num_0_1_42.serde or false) ||
      (f.num_0_1_42.serde or false);
    num_complex_0_1_43."rustc-serialize" =
      (f.num_complex_0_1_43."rustc-serialize" or false) ||
      (num_0_1_42."rustc-serialize" or false) ||
      (f.num_0_1_42."rustc-serialize" or false);
    num_complex_0_1_43.default = true;
    num_complex_0_1_43.serde =
      (f.num_complex_0_1_43.serde or false) ||
      (num_0_1_42.serde or false) ||
      (f.num_0_1_42.serde or false);
    num_integer_0_1_38.default = true;
    num_iter_0_1_37.default = true;
    num_rational_0_1_42."rustc-serialize" =
      (f.num_rational_0_1_42."rustc-serialize" or false) ||
      (num_0_1_42."rustc-serialize" or false) ||
      (f.num_0_1_42."rustc-serialize" or false);
    num_rational_0_1_42.default = true;
    num_rational_0_1_42.serde =
      (f.num_rational_0_1_42.serde or false) ||
      (num_0_1_42.serde or false) ||
      (f.num_0_1_42.serde or false);
    num_traits_0_2_4.default = true;
  }) [ num_bigint_0_1_44_features num_complex_0_1_43_features num_integer_0_1_38_features num_iter_0_1_37_features num_rational_0_1_42_features num_traits_0_2_4_features ];
  num_bigint_0_1_44 = { features?(num_bigint_0_1_44_features {}) }: num_bigint_0_1_44_ {
    dependencies = mapFeatures features ([ num_integer_0_1_38 num_traits_0_2_4 ]
      ++ (if features.num_bigint_0_1_44.rand or false then [ rand_0_4_2 ] else [])
      ++ (if features.num_bigint_0_1_44."rustc-serialize" or false then [ rustc_serialize_0_3_24 ] else []));
    features = mkFeatures (features.num_bigint_0_1_44 or {});
  };
  num_bigint_0_1_44_features = f: updateFeatures f (rec {
    num_bigint_0_1_44."rustc-serialize" =
      (f.num_bigint_0_1_44."rustc-serialize" or false) ||
      (f.num_bigint_0_1_44.default or false) ||
      (num_bigint_0_1_44.default or false);
    num_bigint_0_1_44.default = (f.num_bigint_0_1_44.default or true);
    num_bigint_0_1_44.rand =
      (f.num_bigint_0_1_44.rand or false) ||
      (f.num_bigint_0_1_44.default or false) ||
      (num_bigint_0_1_44.default or false);
    num_integer_0_1_38.default = (f.num_integer_0_1_38.default or false);
    num_traits_0_2_4.default = (f.num_traits_0_2_4.default or false);
    num_traits_0_2_4.std = true;
    rand_0_4_2.default = true;
    rustc_serialize_0_3_24.default = true;
  }) [ num_integer_0_1_38_features num_traits_0_2_4_features rand_0_4_2_features rustc_serialize_0_3_24_features ];
  num_complex_0_1_43 = { features?(num_complex_0_1_43_features {}) }: num_complex_0_1_43_ {
    dependencies = mapFeatures features ([ num_traits_0_2_4 ]
      ++ (if features.num_complex_0_1_43."rustc-serialize" or false then [ rustc_serialize_0_3_24 ] else []));
    features = mkFeatures (features.num_complex_0_1_43 or {});
  };
  num_complex_0_1_43_features = f: updateFeatures f (rec {
    num_complex_0_1_43."rustc-serialize" =
      (f.num_complex_0_1_43."rustc-serialize" or false) ||
      (f.num_complex_0_1_43.default or false) ||
      (num_complex_0_1_43.default or false);
    num_complex_0_1_43.default = (f.num_complex_0_1_43.default or true);
    num_traits_0_2_4.default = (f.num_traits_0_2_4.default or false);
    num_traits_0_2_4.std = true;
    rustc_serialize_0_3_24.default = true;
  }) [ num_traits_0_2_4_features rustc_serialize_0_3_24_features ];
  num_integer_0_1_38 = { features?(num_integer_0_1_38_features {}) }: num_integer_0_1_38_ {
    dependencies = mapFeatures features ([ num_traits_0_2_4 ]);
    features = mkFeatures (features.num_integer_0_1_38 or {});
  };
  num_integer_0_1_38_features = f: updateFeatures f (rec {
    num_integer_0_1_38.default = (f.num_integer_0_1_38.default or true);
    num_integer_0_1_38.std =
      (f.num_integer_0_1_38.std or false) ||
      (f.num_integer_0_1_38.default or false) ||
      (num_integer_0_1_38.default or false);
    num_traits_0_2_4."i128" =
      (f.num_traits_0_2_4."i128" or false) ||
      (num_integer_0_1_38."i128" or false) ||
      (f.num_integer_0_1_38."i128" or false);
    num_traits_0_2_4.default = (f.num_traits_0_2_4.default or false);
    num_traits_0_2_4.std =
      (f.num_traits_0_2_4.std or false) ||
      (num_integer_0_1_38.std or false) ||
      (f.num_integer_0_1_38.std or false);
  }) [ num_traits_0_2_4_features ];
  num_iter_0_1_37 = { features?(num_iter_0_1_37_features {}) }: num_iter_0_1_37_ {
    dependencies = mapFeatures features ([ num_integer_0_1_38 num_traits_0_2_4 ]);
    features = mkFeatures (features.num_iter_0_1_37 or {});
  };
  num_iter_0_1_37_features = f: updateFeatures f (rec {
    num_integer_0_1_38."i128" =
      (f.num_integer_0_1_38."i128" or false) ||
      (num_iter_0_1_37."i128" or false) ||
      (f.num_iter_0_1_37."i128" or false);
    num_integer_0_1_38.default = (f.num_integer_0_1_38.default or false);
    num_integer_0_1_38.std =
      (f.num_integer_0_1_38.std or false) ||
      (num_iter_0_1_37.std or false) ||
      (f.num_iter_0_1_37.std or false);
    num_iter_0_1_37.default = (f.num_iter_0_1_37.default or true);
    num_iter_0_1_37.std =
      (f.num_iter_0_1_37.std or false) ||
      (f.num_iter_0_1_37.default or false) ||
      (num_iter_0_1_37.default or false);
    num_traits_0_2_4."i128" =
      (f.num_traits_0_2_4."i128" or false) ||
      (num_iter_0_1_37."i128" or false) ||
      (f.num_iter_0_1_37."i128" or false);
    num_traits_0_2_4.default = (f.num_traits_0_2_4.default or false);
    num_traits_0_2_4.std =
      (f.num_traits_0_2_4.std or false) ||
      (num_iter_0_1_37.std or false) ||
      (f.num_iter_0_1_37.std or false);
  }) [ num_integer_0_1_38_features num_traits_0_2_4_features ];
  num_rational_0_1_42 = { features?(num_rational_0_1_42_features {}) }: num_rational_0_1_42_ {
    dependencies = mapFeatures features ([ num_integer_0_1_38 num_traits_0_2_4 ]
      ++ (if features.num_rational_0_1_42."num-bigint" or false then [ num_bigint_0_1_44 ] else [])
      ++ (if features.num_rational_0_1_42."rustc-serialize" or false then [ rustc_serialize_0_3_24 ] else []));
    features = mkFeatures (features.num_rational_0_1_42 or {});
  };
  num_rational_0_1_42_features = f: updateFeatures f (rec {
    num_bigint_0_1_44.default = true;
    num_integer_0_1_38.default = (f.num_integer_0_1_38.default or false);
    num_rational_0_1_42."num-bigint" =
      (f.num_rational_0_1_42."num-bigint" or false) ||
      (f.num_rational_0_1_42.bigint or false) ||
      (num_rational_0_1_42.bigint or false);
    num_rational_0_1_42."rustc-serialize" =
      (f.num_rational_0_1_42."rustc-serialize" or false) ||
      (f.num_rational_0_1_42.default or false) ||
      (num_rational_0_1_42.default or false);
    num_rational_0_1_42.bigint =
      (f.num_rational_0_1_42.bigint or false) ||
      (f.num_rational_0_1_42.default or false) ||
      (num_rational_0_1_42.default or false);
    num_rational_0_1_42.default = (f.num_rational_0_1_42.default or true);
    num_traits_0_2_4.default = (f.num_traits_0_2_4.default or false);
    num_traits_0_2_4.std = true;
    rustc_serialize_0_3_24.default = true;
  }) [ num_bigint_0_1_44_features num_integer_0_1_38_features num_traits_0_2_4_features rustc_serialize_0_3_24_features ];
  num_traits_0_2_4 = { features?(num_traits_0_2_4_features {}) }: num_traits_0_2_4_ {
    features = mkFeatures (features.num_traits_0_2_4 or {});
  };
  num_traits_0_2_4_features = f: updateFeatures f (rec {
    num_traits_0_2_4.default = (f.num_traits_0_2_4.default or true);
    num_traits_0_2_4.std =
      (f.num_traits_0_2_4.std or false) ||
      (f.num_traits_0_2_4.default or false) ||
      (num_traits_0_2_4.default or false);
  }) [];
  num_cpus_1_8_0 = { features?(num_cpus_1_8_0_features {}) }: num_cpus_1_8_0_ {
    dependencies = mapFeatures features ([ libc_0_2_42 ]);
  };
  num_cpus_1_8_0_features = f: updateFeatures f (rec {
    libc_0_2_42.default = true;
    num_cpus_1_8_0.default = (f.num_cpus_1_8_0.default or true);
  }) [ libc_0_2_42_features ];
  ole32_sys_0_2_0 = { features?(ole32_sys_0_2_0_features {}) }: ole32_sys_0_2_0_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  ole32_sys_0_2_0_features = f: updateFeatures f (rec {
    ole32_sys_0_2_0.default = (f.ole32_sys_0_2_0.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  openssl_0_9_24 = { features?(openssl_0_9_24_features {}) }: openssl_0_9_24_ {
    dependencies = mapFeatures features ([ bitflags_0_9_1 foreign_types_0_3_2 lazy_static_1_0_1 libc_0_2_42 openssl_sys_0_9_32 ]);
    features = mkFeatures (features.openssl_0_9_24 or {});
  };
  openssl_0_9_24_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = true;
    foreign_types_0_3_2.default = true;
    lazy_static_1_0_1.default = true;
    libc_0_2_42.default = true;
    openssl_0_9_24.default = (f.openssl_0_9_24.default or true);
    openssl_sys_0_9_32.default = true;
  }) [ bitflags_0_9_1_features foreign_types_0_3_2_features lazy_static_1_0_1_features libc_0_2_42_features openssl_sys_0_9_32_features ];
  openssl_sys_0_9_32 = { features?(openssl_sys_0_9_32_features {}) }: openssl_sys_0_9_32_ {
    dependencies = mapFeatures features ([ libc_0_2_42 ])
      ++ (if abi == "msvc" then mapFeatures features ([]) else []);
    buildDependencies = mapFeatures features ([ cc_1_0_17 pkg_config_0_3_11 ]);
  };
  openssl_sys_0_9_32_features = f: updateFeatures f (rec {
    cc_1_0_17.default = true;
    libc_0_2_42.default = true;
    openssl_sys_0_9_32.default = (f.openssl_sys_0_9_32.default or true);
    pkg_config_0_3_11.default = true;
  }) [ libc_0_2_42_features cc_1_0_17_features pkg_config_0_3_11_features ];
  option_filter_1_0_1 = { features?(option_filter_1_0_1_features {}) }: option_filter_1_0_1_ {};
  option_filter_1_0_1_features = f: updateFeatures f (rec {
    option_filter_1_0_1.default = (f.option_filter_1_0_1.default or true);
  }) [];
  ordermap_0_3_5 = { features?(ordermap_0_3_5_features {}) }: ordermap_0_3_5_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.ordermap_0_3_5 or {});
  };
  ordermap_0_3_5_features = f: updateFeatures f (rec {
    ordermap_0_3_5.default = (f.ordermap_0_3_5.default or true);
    ordermap_0_3_5.serde =
      (f.ordermap_0_3_5.serde or false) ||
      (f.ordermap_0_3_5."serde-1" or false) ||
      (ordermap_0_3_5."serde-1" or false);
  }) [];
  owning_ref_0_2_4 = { features?(owning_ref_0_2_4_features {}) }: owning_ref_0_2_4_ {};
  owning_ref_0_2_4_features = f: updateFeatures f (rec {
    owning_ref_0_2_4.default = (f.owning_ref_0_2_4.default or true);
  }) [];
  owning_ref_0_3_3 = { features?(owning_ref_0_3_3_features {}) }: owning_ref_0_3_3_ {
    dependencies = mapFeatures features ([ stable_deref_trait_1_0_0 ]);
  };
  owning_ref_0_3_3_features = f: updateFeatures f (rec {
    owning_ref_0_3_3.default = (f.owning_ref_0_3_3.default or true);
    stable_deref_trait_1_0_0.default = true;
  }) [ stable_deref_trait_1_0_0_features ];
  parking_lot_0_3_8 = { features?(parking_lot_0_3_8_features {}) }: parking_lot_0_3_8_ {
    dependencies = mapFeatures features ([ parking_lot_core_0_2_14 ]
      ++ (if features.parking_lot_0_3_8.owning_ref or false then [ owning_ref_0_2_4 ] else []))
      ++ (if !(kernel == "emscripten") then mapFeatures features ([ thread_id_3_3_0 ]) else []);
    features = mkFeatures (features.parking_lot_0_3_8 or {});
  };
  parking_lot_0_3_8_features = f: updateFeatures f (rec {
    owning_ref_0_2_4.default = true;
    parking_lot_0_3_8.default = (f.parking_lot_0_3_8.default or true);
    parking_lot_0_3_8.owning_ref =
      (f.parking_lot_0_3_8.owning_ref or false) ||
      (f.parking_lot_0_3_8.default or false) ||
      (parking_lot_0_3_8.default or false);
    parking_lot_core_0_2_14.default = true;
    parking_lot_core_0_2_14.nightly =
      (f.parking_lot_core_0_2_14.nightly or false) ||
      (parking_lot_0_3_8.nightly or false) ||
      (f.parking_lot_0_3_8.nightly or false);
    thread_id_3_3_0.default = true;
  }) [ owning_ref_0_2_4_features parking_lot_core_0_2_14_features thread_id_3_3_0_features ];
  parking_lot_0_5_5 = { features?(parking_lot_0_5_5_features {}) }: parking_lot_0_5_5_ {
    dependencies = mapFeatures features ([ parking_lot_core_0_2_14 ]
      ++ (if features.parking_lot_0_5_5.owning_ref or false then [ owning_ref_0_3_3 ] else []));
    features = mkFeatures (features.parking_lot_0_5_5 or {});
  };
  parking_lot_0_5_5_features = f: updateFeatures f (rec {
    owning_ref_0_3_3.default = true;
    parking_lot_0_5_5.default = (f.parking_lot_0_5_5.default or true);
    parking_lot_0_5_5.owning_ref =
      (f.parking_lot_0_5_5.owning_ref or false) ||
      (f.parking_lot_0_5_5.default or false) ||
      (parking_lot_0_5_5.default or false);
    parking_lot_core_0_2_14.deadlock_detection =
      (f.parking_lot_core_0_2_14.deadlock_detection or false) ||
      (parking_lot_0_5_5.deadlock_detection or false) ||
      (f.parking_lot_0_5_5.deadlock_detection or false);
    parking_lot_core_0_2_14.default = true;
    parking_lot_core_0_2_14.nightly =
      (f.parking_lot_core_0_2_14.nightly or false) ||
      (parking_lot_0_5_5.nightly or false) ||
      (f.parking_lot_0_5_5.nightly or false);
  }) [ owning_ref_0_3_3_features parking_lot_core_0_2_14_features ];
  parking_lot_core_0_2_14 = { features?(parking_lot_core_0_2_14_features {}) }: parking_lot_core_0_2_14_ {
    dependencies = mapFeatures features ([ rand_0_4_2 smallvec_0_6_1 ])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_42 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
    features = mkFeatures (features.parking_lot_core_0_2_14 or {});
  };
  parking_lot_core_0_2_14_features = f: updateFeatures f (rec {
    libc_0_2_42.default = true;
    parking_lot_core_0_2_14."thread-id" =
      (f.parking_lot_core_0_2_14."thread-id" or false) ||
      (f.parking_lot_core_0_2_14.deadlock_detection or false) ||
      (parking_lot_core_0_2_14.deadlock_detection or false);
    parking_lot_core_0_2_14.backtrace =
      (f.parking_lot_core_0_2_14.backtrace or false) ||
      (f.parking_lot_core_0_2_14.deadlock_detection or false) ||
      (parking_lot_core_0_2_14.deadlock_detection or false);
    parking_lot_core_0_2_14.default = (f.parking_lot_core_0_2_14.default or true);
    parking_lot_core_0_2_14.petgraph =
      (f.parking_lot_core_0_2_14.petgraph or false) ||
      (f.parking_lot_core_0_2_14.deadlock_detection or false) ||
      (parking_lot_core_0_2_14.deadlock_detection or false);
    rand_0_4_2.default = true;
    smallvec_0_6_1.default = true;
    winapi_0_3_5.default = true;
    winapi_0_3_5.errhandlingapi = true;
    winapi_0_3_5.handleapi = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.ntstatus = true;
    winapi_0_3_5.winbase = true;
    winapi_0_3_5.winerror = true;
    winapi_0_3_5.winnt = true;
  }) [ rand_0_4_2_features smallvec_0_6_1_features libc_0_2_42_features winapi_0_3_5_features ];
  percent_encoding_1_0_1 = { features?(percent_encoding_1_0_1_features {}) }: percent_encoding_1_0_1_ {};
  percent_encoding_1_0_1_features = f: updateFeatures f (rec {
    percent_encoding_1_0_1.default = (f.percent_encoding_1_0_1.default or true);
  }) [];
  persistent_0_3_0 = { features?(persistent_0_3_0_features {}) }: persistent_0_3_0_ {
    dependencies = mapFeatures features ([ iron_0_5_1 plugin_0_2_6 ]);
  };
  persistent_0_3_0_features = f: updateFeatures f (rec {
    iron_0_5_1.default = true;
    persistent_0_3_0.default = (f.persistent_0_3_0.default or true);
    plugin_0_2_6.default = true;
  }) [ iron_0_5_1_features plugin_0_2_6_features ];
  petgraph_0_4_12 = { features?(petgraph_0_4_12_features {}) }: petgraph_0_4_12_ {
    dependencies = mapFeatures features ([ fixedbitset_0_1_9 ]
      ++ (if features.petgraph_0_4_12.ordermap or false then [ ordermap_0_3_5 ] else []));
    features = mkFeatures (features.petgraph_0_4_12 or {});
  };
  petgraph_0_4_12_features = f: updateFeatures f (rec {
    fixedbitset_0_1_9.default = true;
    ordermap_0_3_5.default = true;
    petgraph_0_4_12.default = (f.petgraph_0_4_12.default or true);
    petgraph_0_4_12.generate =
      (f.petgraph_0_4_12.generate or false) ||
      (f.petgraph_0_4_12.unstable or false) ||
      (petgraph_0_4_12.unstable or false);
    petgraph_0_4_12.graphmap =
      (f.petgraph_0_4_12.graphmap or false) ||
      (f.petgraph_0_4_12.all or false) ||
      (petgraph_0_4_12.all or false) ||
      (f.petgraph_0_4_12.default or false) ||
      (petgraph_0_4_12.default or false);
    petgraph_0_4_12.ordermap =
      (f.petgraph_0_4_12.ordermap or false) ||
      (f.petgraph_0_4_12.graphmap or false) ||
      (petgraph_0_4_12.graphmap or false);
    petgraph_0_4_12.quickcheck =
      (f.petgraph_0_4_12.quickcheck or false) ||
      (f.petgraph_0_4_12.all or false) ||
      (petgraph_0_4_12.all or false);
    petgraph_0_4_12.serde =
      (f.petgraph_0_4_12.serde or false) ||
      (f.petgraph_0_4_12."serde-1" or false) ||
      (petgraph_0_4_12."serde-1" or false);
    petgraph_0_4_12.serde_derive =
      (f.petgraph_0_4_12.serde_derive or false) ||
      (f.petgraph_0_4_12."serde-1" or false) ||
      (petgraph_0_4_12."serde-1" or false);
    petgraph_0_4_12.stable_graph =
      (f.petgraph_0_4_12.stable_graph or false) ||
      (f.petgraph_0_4_12.all or false) ||
      (petgraph_0_4_12.all or false) ||
      (f.petgraph_0_4_12.default or false) ||
      (petgraph_0_4_12.default or false);
    petgraph_0_4_12.unstable =
      (f.petgraph_0_4_12.unstable or false) ||
      (f.petgraph_0_4_12.all or false) ||
      (petgraph_0_4_12.all or false);
  }) [ fixedbitset_0_1_9_features ordermap_0_3_5_features ];
  pkg_config_0_3_11 = { features?(pkg_config_0_3_11_features {}) }: pkg_config_0_3_11_ {};
  pkg_config_0_3_11_features = f: updateFeatures f (rec {
    pkg_config_0_3_11.default = (f.pkg_config_0_3_11.default or true);
  }) [];
  plugin_0_2_6 = { features?(plugin_0_2_6_features {}) }: plugin_0_2_6_ {
    dependencies = mapFeatures features ([ typemap_0_3_3 ]);
  };
  plugin_0_2_6_features = f: updateFeatures f (rec {
    plugin_0_2_6.default = (f.plugin_0_2_6.default or true);
    typemap_0_3_3.default = true;
  }) [ typemap_0_3_3_features ];
  podio_0_1_6 = { features?(podio_0_1_6_features {}) }: podio_0_1_6_ {};
  podio_0_1_6_features = f: updateFeatures f (rec {
    podio_0_1_6.default = (f.podio_0_1_6.default or true);
  }) [];
  proc_macro2_0_4_6 = { features?(proc_macro2_0_4_6_features {}) }: proc_macro2_0_4_6_ {
    dependencies = mapFeatures features ([ unicode_xid_0_1_0 ]);
    features = mkFeatures (features.proc_macro2_0_4_6 or {});
  };
  proc_macro2_0_4_6_features = f: updateFeatures f (rec {
    proc_macro2_0_4_6."proc-macro" =
      (f.proc_macro2_0_4_6."proc-macro" or false) ||
      (f.proc_macro2_0_4_6.default or false) ||
      (proc_macro2_0_4_6.default or false) ||
      (f.proc_macro2_0_4_6.nightly or false) ||
      (proc_macro2_0_4_6.nightly or false);
    proc_macro2_0_4_6.default = (f.proc_macro2_0_4_6.default or true);
    unicode_xid_0_1_0.default = true;
  }) [ unicode_xid_0_1_0_features ];
  quick_error_1_2_2 = { features?(quick_error_1_2_2_features {}) }: quick_error_1_2_2_ {};
  quick_error_1_2_2_features = f: updateFeatures f (rec {
    quick_error_1_2_2.default = (f.quick_error_1_2_2.default or true);
  }) [];
  quote_0_6_3 = { features?(quote_0_6_3_features {}) }: quote_0_6_3_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_6 ]);
    features = mkFeatures (features.quote_0_6_3 or {});
  };
  quote_0_6_3_features = f: updateFeatures f (rec {
    proc_macro2_0_4_6."proc-macro" =
      (f.proc_macro2_0_4_6."proc-macro" or false) ||
      (quote_0_6_3."proc-macro" or false) ||
      (f.quote_0_6_3."proc-macro" or false);
    proc_macro2_0_4_6.default = (f.proc_macro2_0_4_6.default or false);
    quote_0_6_3."proc-macro" =
      (f.quote_0_6_3."proc-macro" or false) ||
      (f.quote_0_6_3.default or false) ||
      (quote_0_6_3.default or false);
    quote_0_6_3.default = (f.quote_0_6_3.default or true);
  }) [ proc_macro2_0_4_6_features ];
  rand_0_3_22 = { features?(rand_0_3_22_features {}) }: rand_0_3_22_ {
    dependencies = mapFeatures features ([ libc_0_2_42 rand_0_4_2 ])
      ++ (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 ]) else []);
    features = mkFeatures (features.rand_0_3_22 or {});
  };
  rand_0_3_22_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_42.default = true;
    rand_0_3_22."i128_support" =
      (f.rand_0_3_22."i128_support" or false) ||
      (f.rand_0_3_22.nightly or false) ||
      (rand_0_3_22.nightly or false);
    rand_0_3_22.default = (f.rand_0_3_22.default or true);
    rand_0_4_2.default = true;
  }) [ libc_0_2_42_features rand_0_4_2_features fuchsia_zircon_0_3_3_features ];
  rand_0_4_2 = { features?(rand_0_4_2_features {}) }: rand_0_4_2_ {
    dependencies = (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ ]
      ++ (if features.rand_0_4_2.libc or false then [ libc_0_2_42 ] else [])) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
    features = mkFeatures (features.rand_0_4_2 or {});
  };
  rand_0_4_2_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_42.default = true;
    rand_0_4_2."i128_support" =
      (f.rand_0_4_2."i128_support" or false) ||
      (f.rand_0_4_2.nightly or false) ||
      (rand_0_4_2.nightly or false);
    rand_0_4_2.default = (f.rand_0_4_2.default or true);
    rand_0_4_2.libc =
      (f.rand_0_4_2.libc or false) ||
      (f.rand_0_4_2.std or false) ||
      (rand_0_4_2.std or false);
    rand_0_4_2.std =
      (f.rand_0_4_2.std or false) ||
      (f.rand_0_4_2.default or false) ||
      (rand_0_4_2.default or false);
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.ntsecapi = true;
    winapi_0_3_5.profileapi = true;
    winapi_0_3_5.winnt = true;
  }) [ fuchsia_zircon_0_3_3_features libc_0_2_42_features winapi_0_3_5_features ];
  rand_0_5_0 = { features?(rand_0_5_0_features {}) }: rand_0_5_0_ {
    dependencies = mapFeatures features ([ rand_core_0_2_0 ])
      ++ (if kernel == "cloudabi" then mapFeatures features ([ ]
      ++ (if features.rand_0_5_0.cloudabi or false then [ cloudabi_0_0_3 ] else [])) else [])
      ++ (if kernel == "fuchsia" then mapFeatures features ([ ]
      ++ (if features.rand_0_5_0."fuchsia-zircon" or false then [ fuchsia_zircon_0_3_3 ] else [])) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ ]
      ++ (if features.rand_0_5_0.libc or false then [ libc_0_2_42 ] else [])) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ ]
      ++ (if features.rand_0_5_0.winapi or false then [ winapi_0_3_5 ] else [])) else [])
      ++ (if kernel == "wasm32-unknown-unknown" then mapFeatures features ([]) else []);
    features = mkFeatures (features.rand_0_5_0 or {});
  };
  rand_0_5_0_features = f: updateFeatures f (rec {
    cloudabi_0_0_3.default = true;
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_42.default = true;
    rand_0_5_0."fuchsia-zircon" =
      (f.rand_0_5_0."fuchsia-zircon" or false) ||
      (f.rand_0_5_0.std or false) ||
      (rand_0_5_0.std or false);
    rand_0_5_0."i128_support" =
      (f.rand_0_5_0."i128_support" or false) ||
      (f.rand_0_5_0.nightly or false) ||
      (rand_0_5_0.nightly or false);
    rand_0_5_0.alloc =
      (f.rand_0_5_0.alloc or false) ||
      (f.rand_0_5_0.std or false) ||
      (rand_0_5_0.std or false);
    rand_0_5_0.cloudabi =
      (f.rand_0_5_0.cloudabi or false) ||
      (f.rand_0_5_0.std or false) ||
      (rand_0_5_0.std or false);
    rand_0_5_0.default = (f.rand_0_5_0.default or true);
    rand_0_5_0.libc =
      (f.rand_0_5_0.libc or false) ||
      (f.rand_0_5_0.std or false) ||
      (rand_0_5_0.std or false);
    rand_0_5_0.serde =
      (f.rand_0_5_0.serde or false) ||
      (f.rand_0_5_0."serde1" or false) ||
      (rand_0_5_0."serde1" or false);
    rand_0_5_0.serde_derive =
      (f.rand_0_5_0.serde_derive or false) ||
      (f.rand_0_5_0."serde1" or false) ||
      (rand_0_5_0."serde1" or false);
    rand_0_5_0.std =
      (f.rand_0_5_0.std or false) ||
      (f.rand_0_5_0.default or false) ||
      (rand_0_5_0.default or false);
    rand_0_5_0.winapi =
      (f.rand_0_5_0.winapi or false) ||
      (f.rand_0_5_0.std or false) ||
      (rand_0_5_0.std or false);
    rand_core_0_2_0."serde1" =
      (f.rand_core_0_2_0."serde1" or false) ||
      (rand_0_5_0."serde1" or false) ||
      (f.rand_0_5_0."serde1" or false);
    rand_core_0_2_0.alloc =
      (f.rand_core_0_2_0.alloc or false) ||
      (rand_0_5_0.alloc or false) ||
      (f.rand_0_5_0.alloc or false);
    rand_core_0_2_0.default = (f.rand_core_0_2_0.default or false);
    rand_core_0_2_0.std =
      (f.rand_core_0_2_0.std or false) ||
      (rand_0_5_0.std or false) ||
      (f.rand_0_5_0.std or false);
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.ntsecapi = true;
    winapi_0_3_5.profileapi = true;
    winapi_0_3_5.winnt = true;
  }) [ rand_core_0_2_0_features cloudabi_0_0_3_features fuchsia_zircon_0_3_3_features libc_0_2_42_features winapi_0_3_5_features ];
  rand_core_0_2_0 = { features?(rand_core_0_2_0_features {}) }: rand_core_0_2_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.rand_core_0_2_0 or {});
  };
  rand_core_0_2_0_features = f: updateFeatures f (rec {
    rand_core_0_2_0.alloc =
      (f.rand_core_0_2_0.alloc or false) ||
      (f.rand_core_0_2_0.std or false) ||
      (rand_core_0_2_0.std or false);
    rand_core_0_2_0.default = (f.rand_core_0_2_0.default or true);
    rand_core_0_2_0.serde =
      (f.rand_core_0_2_0.serde or false) ||
      (f.rand_core_0_2_0."serde1" or false) ||
      (rand_core_0_2_0."serde1" or false);
    rand_core_0_2_0.serde_derive =
      (f.rand_core_0_2_0.serde_derive or false) ||
      (f.rand_core_0_2_0."serde1" or false) ||
      (rand_core_0_2_0."serde1" or false);
    rand_core_0_2_0.std =
      (f.rand_core_0_2_0.std or false) ||
      (f.rand_core_0_2_0.default or false) ||
      (rand_core_0_2_0.default or false);
  }) [];
  rayon_1_0_1 = { features?(rayon_1_0_1_features {}) }: rayon_1_0_1_ {
    dependencies = mapFeatures features ([ either_1_5_0 rayon_core_1_4_0 ])
      ++ (if !(kernel == "windows" && abi == "gnu") then mapFeatures features ([]) else []);
  };
  rayon_1_0_1_features = f: updateFeatures f (rec {
    either_1_5_0.default = (f.either_1_5_0.default or false);
    rayon_1_0_1.default = (f.rayon_1_0_1.default or true);
    rayon_core_1_4_0.default = true;
  }) [ either_1_5_0_features rayon_core_1_4_0_features ];
  rayon_core_1_4_0 = { features?(rayon_core_1_4_0_features {}) }: rayon_core_1_4_0_ {
    dependencies = mapFeatures features ([ crossbeam_deque_0_2_0 lazy_static_1_0_1 libc_0_2_42 num_cpus_1_8_0 rand_0_4_2 ]);
  };
  rayon_core_1_4_0_features = f: updateFeatures f (rec {
    crossbeam_deque_0_2_0.default = true;
    lazy_static_1_0_1.default = true;
    libc_0_2_42.default = true;
    num_cpus_1_8_0.default = true;
    rand_0_4_2.default = true;
    rayon_core_1_4_0.default = (f.rayon_core_1_4_0.default or true);
  }) [ crossbeam_deque_0_2_0_features lazy_static_1_0_1_features libc_0_2_42_features num_cpus_1_8_0_features rand_0_4_2_features ];
  redox_syscall_0_1_40 = { features?(redox_syscall_0_1_40_features {}) }: redox_syscall_0_1_40_ {};
  redox_syscall_0_1_40_features = f: updateFeatures f (rec {
    redox_syscall_0_1_40.default = (f.redox_syscall_0_1_40.default or true);
  }) [];
  redox_termios_0_1_1 = { features?(redox_termios_0_1_1_features {}) }: redox_termios_0_1_1_ {
    dependencies = mapFeatures features ([ redox_syscall_0_1_40 ]);
  };
  redox_termios_0_1_1_features = f: updateFeatures f (rec {
    redox_syscall_0_1_40.default = true;
    redox_termios_0_1_1.default = (f.redox_termios_0_1_1.default or true);
  }) [ redox_syscall_0_1_40_features ];
  regex_0_2_11 = { features?(regex_0_2_11_features {}) }: regex_0_2_11_ {
    dependencies = mapFeatures features ([ aho_corasick_0_6_4 memchr_2_0_1 regex_syntax_0_5_6 thread_local_0_3_5 utf8_ranges_1_0_0 ]);
    features = mkFeatures (features.regex_0_2_11 or {});
  };
  regex_0_2_11_features = f: updateFeatures f (rec {
    aho_corasick_0_6_4.default = true;
    memchr_2_0_1.default = true;
    regex_0_2_11.default = (f.regex_0_2_11.default or true);
    regex_0_2_11.pattern =
      (f.regex_0_2_11.pattern or false) ||
      (f.regex_0_2_11.unstable or false) ||
      (regex_0_2_11.unstable or false);
    regex_syntax_0_5_6.default = true;
    thread_local_0_3_5.default = true;
    utf8_ranges_1_0_0.default = true;
  }) [ aho_corasick_0_6_4_features memchr_2_0_1_features regex_syntax_0_5_6_features thread_local_0_3_5_features utf8_ranges_1_0_0_features ];
  regex_syntax_0_5_6 = { features?(regex_syntax_0_5_6_features {}) }: regex_syntax_0_5_6_ {
    dependencies = mapFeatures features ([ ucd_util_0_1_1 ]);
  };
  regex_syntax_0_5_6_features = f: updateFeatures f (rec {
    regex_syntax_0_5_6.default = (f.regex_syntax_0_5_6.default or true);
    ucd_util_0_1_1.default = true;
  }) [ ucd_util_0_1_1_features ];
  remove_dir_all_0_5_1 = { features?(remove_dir_all_0_5_1_features {}) }: remove_dir_all_0_5_1_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  remove_dir_all_0_5_1_features = f: updateFeatures f (rec {
    remove_dir_all_0_5_1.default = (f.remove_dir_all_0_5_1.default or true);
    winapi_0_3_5.default = true;
    winapi_0_3_5.errhandlingapi = true;
    winapi_0_3_5.fileapi = true;
    winapi_0_3_5.std = true;
    winapi_0_3_5.winbase = true;
    winapi_0_3_5.winerror = true;
  }) [ winapi_0_3_5_features ];
  reqwest_0_6_2 = { features?(reqwest_0_6_2_features {}) }: reqwest_0_6_2_ {
    dependencies = mapFeatures features ([ hyper_0_10_12 hyper_native_tls_0_2_4 libflate_0_1_14 log_0_3_9 serde_1_0_66 serde_json_1_0_19 serde_urlencoded_0_5_2 url_1_7_0 ]);
  };
  reqwest_0_6_2_features = f: updateFeatures f (rec {
    hyper_0_10_12.default = true;
    hyper_native_tls_0_2_4.default = true;
    libflate_0_1_14.default = true;
    log_0_3_9.default = true;
    reqwest_0_6_2.default = (f.reqwest_0_6_2.default or true);
    serde_1_0_66.default = true;
    serde_json_1_0_19.default = true;
    serde_urlencoded_0_5_2.default = true;
    url_1_7_0.default = true;
  }) [ hyper_0_10_12_features hyper_native_tls_0_2_4_features libflate_0_1_14_features log_0_3_9_features serde_1_0_66_features serde_json_1_0_19_features serde_urlencoded_0_5_2_features url_1_7_0_features ];
  rgb_0_8_9 = { features?(rgb_0_8_9_features {}) }: rgb_0_8_9_ {
    dependencies = mapFeatures features ([]);
  };
  rgb_0_8_9_features = f: updateFeatures f (rec {
    rgb_0_8_9.default = (f.rgb_0_8_9.default or true);
  }) [];
  route_recognizer_0_1_12 = { features?(route_recognizer_0_1_12_features {}) }: route_recognizer_0_1_12_ {};
  route_recognizer_0_1_12_features = f: updateFeatures f (rec {
    route_recognizer_0_1_12.default = (f.route_recognizer_0_1_12.default or true);
  }) [];
  router_0_5_1 = { features?(router_0_5_1_features {}) }: router_0_5_1_ {
    dependencies = mapFeatures features ([ iron_0_5_1 route_recognizer_0_1_12 url_1_7_0 ]);
  };
  router_0_5_1_features = f: updateFeatures f (rec {
    iron_0_5_1.default = true;
    route_recognizer_0_1_12.default = true;
    router_0_5_1.default = (f.router_0_5_1.default or true);
    url_1_7_0.default = true;
  }) [ iron_0_5_1_features route_recognizer_0_1_12_features url_1_7_0_features ];
  rustc_demangle_0_1_8 = { features?(rustc_demangle_0_1_8_features {}) }: rustc_demangle_0_1_8_ {};
  rustc_demangle_0_1_8_features = f: updateFeatures f (rec {
    rustc_demangle_0_1_8.default = (f.rustc_demangle_0_1_8.default or true);
  }) [];
  rustc_serialize_0_3_24 = { features?(rustc_serialize_0_3_24_features {}) }: rustc_serialize_0_3_24_ {};
  rustc_serialize_0_3_24_features = f: updateFeatures f (rec {
    rustc_serialize_0_3_24.default = (f.rustc_serialize_0_3_24.default or true);
  }) [];
  safemem_0_2_0 = { features?(safemem_0_2_0_features {}) }: safemem_0_2_0_ {};
  safemem_0_2_0_features = f: updateFeatures f (rec {
    safemem_0_2_0.default = (f.safemem_0_2_0.default or true);
  }) [];
  schannel_0_1_12 = { features?(schannel_0_1_12_features {}) }: schannel_0_1_12_ {
    dependencies = mapFeatures features ([ lazy_static_1_0_1 winapi_0_3_5 ]);
  };
  schannel_0_1_12_features = f: updateFeatures f (rec {
    lazy_static_1_0_1.default = true;
    schannel_0_1_12.default = (f.schannel_0_1_12.default or true);
    winapi_0_3_5.default = true;
    winapi_0_3_5.lmcons = true;
    winapi_0_3_5.minschannel = true;
    winapi_0_3_5.schannel = true;
    winapi_0_3_5.securitybaseapi = true;
    winapi_0_3_5.sysinfoapi = true;
    winapi_0_3_5.timezoneapi = true;
    winapi_0_3_5.winbase = true;
    winapi_0_3_5.wincrypt = true;
    winapi_0_3_5.winerror = true;
  }) [ lazy_static_1_0_1_features winapi_0_3_5_features ];
  scopeguard_0_3_3 = { features?(scopeguard_0_3_3_features {}) }: scopeguard_0_3_3_ {
    features = mkFeatures (features.scopeguard_0_3_3 or {});
  };
  scopeguard_0_3_3_features = f: updateFeatures f (rec {
    scopeguard_0_3_3.default = (f.scopeguard_0_3_3.default or true);
    scopeguard_0_3_3.use_std =
      (f.scopeguard_0_3_3.use_std or false) ||
      (f.scopeguard_0_3_3.default or false) ||
      (scopeguard_0_3_3.default or false);
  }) [];
  security_framework_0_1_16 = { features?(security_framework_0_1_16_features {}) }: security_framework_0_1_16_ {
    dependencies = mapFeatures features ([ core_foundation_0_2_3 core_foundation_sys_0_2_3 libc_0_2_42 security_framework_sys_0_1_16 ]);
    features = mkFeatures (features.security_framework_0_1_16 or {});
  };
  security_framework_0_1_16_features = f: updateFeatures f (rec {
    core_foundation_0_2_3.default = true;
    core_foundation_sys_0_2_3.default = true;
    libc_0_2_42.default = true;
    security_framework_0_1_16."OSX_10_10" =
      (f.security_framework_0_1_16."OSX_10_10" or false) ||
      (f.security_framework_0_1_16."OSX_10_11" or false) ||
      (security_framework_0_1_16."OSX_10_11" or false);
    security_framework_0_1_16."OSX_10_11" =
      (f.security_framework_0_1_16."OSX_10_11" or false) ||
      (f.security_framework_0_1_16."OSX_10_12" or false) ||
      (security_framework_0_1_16."OSX_10_12" or false);
    security_framework_0_1_16."OSX_10_8" =
      (f.security_framework_0_1_16."OSX_10_8" or false) ||
      (f.security_framework_0_1_16."OSX_10_9" or false) ||
      (security_framework_0_1_16."OSX_10_9" or false);
    security_framework_0_1_16."OSX_10_9" =
      (f.security_framework_0_1_16."OSX_10_9" or false) ||
      (f.security_framework_0_1_16."OSX_10_10" or false) ||
      (security_framework_0_1_16."OSX_10_10" or false);
    security_framework_0_1_16.default = (f.security_framework_0_1_16.default or true);
    security_framework_sys_0_1_16."OSX_10_10" =
      (f.security_framework_sys_0_1_16."OSX_10_10" or false) ||
      (security_framework_0_1_16."OSX_10_10" or false) ||
      (f.security_framework_0_1_16."OSX_10_10" or false);
    security_framework_sys_0_1_16."OSX_10_11" =
      (f.security_framework_sys_0_1_16."OSX_10_11" or false) ||
      (security_framework_0_1_16."OSX_10_11" or false) ||
      (f.security_framework_0_1_16."OSX_10_11" or false) ||
      (security_framework_0_1_16."OSX_10_12" or false) ||
      (f.security_framework_0_1_16."OSX_10_12" or false);
    security_framework_sys_0_1_16."OSX_10_8" =
      (f.security_framework_sys_0_1_16."OSX_10_8" or false) ||
      (security_framework_0_1_16."OSX_10_8" or false) ||
      (f.security_framework_0_1_16."OSX_10_8" or false);
    security_framework_sys_0_1_16."OSX_10_9" =
      (f.security_framework_sys_0_1_16."OSX_10_9" or false) ||
      (security_framework_0_1_16."OSX_10_9" or false) ||
      (f.security_framework_0_1_16."OSX_10_9" or false);
    security_framework_sys_0_1_16.default = true;
  }) [ core_foundation_0_2_3_features core_foundation_sys_0_2_3_features libc_0_2_42_features security_framework_sys_0_1_16_features ];
  security_framework_sys_0_1_16 = { features?(security_framework_sys_0_1_16_features {}) }: security_framework_sys_0_1_16_ {
    dependencies = mapFeatures features ([ core_foundation_sys_0_2_3 libc_0_2_42 ]);
    features = mkFeatures (features.security_framework_sys_0_1_16 or {});
  };
  security_framework_sys_0_1_16_features = f: updateFeatures f (rec {
    core_foundation_sys_0_2_3.default = true;
    libc_0_2_42.default = true;
    security_framework_sys_0_1_16."OSX_10_10" =
      (f.security_framework_sys_0_1_16."OSX_10_10" or false) ||
      (f.security_framework_sys_0_1_16."OSX_10_11" or false) ||
      (security_framework_sys_0_1_16."OSX_10_11" or false);
    security_framework_sys_0_1_16."OSX_10_11" =
      (f.security_framework_sys_0_1_16."OSX_10_11" or false) ||
      (f.security_framework_sys_0_1_16."OSX_10_12" or false) ||
      (security_framework_sys_0_1_16."OSX_10_12" or false);
    security_framework_sys_0_1_16."OSX_10_8" =
      (f.security_framework_sys_0_1_16."OSX_10_8" or false) ||
      (f.security_framework_sys_0_1_16."OSX_10_9" or false) ||
      (security_framework_sys_0_1_16."OSX_10_9" or false);
    security_framework_sys_0_1_16."OSX_10_9" =
      (f.security_framework_sys_0_1_16."OSX_10_9" or false) ||
      (f.security_framework_sys_0_1_16."OSX_10_10" or false) ||
      (security_framework_sys_0_1_16."OSX_10_10" or false);
    security_framework_sys_0_1_16.default = (f.security_framework_sys_0_1_16.default or true);
  }) [ core_foundation_sys_0_2_3_features libc_0_2_42_features ];
  sequence_trie_0_2_1 = { features?(sequence_trie_0_2_1_features {}) }: sequence_trie_0_2_1_ {};
  sequence_trie_0_2_1_features = f: updateFeatures f (rec {
    sequence_trie_0_2_1.default = (f.sequence_trie_0_2_1.default or true);
  }) [];
  serde_1_0_66 = { features?(serde_1_0_66_features {}) }: serde_1_0_66_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.serde_1_0_66 or {});
  };
  serde_1_0_66_features = f: updateFeatures f (rec {
    serde_1_0_66.default = (f.serde_1_0_66.default or true);
    serde_1_0_66.serde_derive =
      (f.serde_1_0_66.serde_derive or false) ||
      (f.serde_1_0_66.derive or false) ||
      (serde_1_0_66.derive or false);
    serde_1_0_66.std =
      (f.serde_1_0_66.std or false) ||
      (f.serde_1_0_66.default or false) ||
      (serde_1_0_66.default or false);
    serde_1_0_66.unstable =
      (f.serde_1_0_66.unstable or false) ||
      (f.serde_1_0_66.alloc or false) ||
      (serde_1_0_66.alloc or false);
  }) [];
  serde_derive_1_0_66 = { features?(serde_derive_1_0_66_features {}) }: serde_derive_1_0_66_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_6 quote_0_6_3 syn_0_14_2 ]);
    features = mkFeatures (features.serde_derive_1_0_66 or {});
  };
  serde_derive_1_0_66_features = f: updateFeatures f (rec {
    proc_macro2_0_4_6.default = true;
    quote_0_6_3.default = true;
    serde_derive_1_0_66.default = (f.serde_derive_1_0_66.default or true);
    syn_0_14_2.default = true;
    syn_0_14_2.visit = true;
  }) [ proc_macro2_0_4_6_features quote_0_6_3_features syn_0_14_2_features ];
  serde_json_1_0_19 = { features?(serde_json_1_0_19_features {}) }: serde_json_1_0_19_ {
    dependencies = mapFeatures features ([ dtoa_0_4_2 itoa_0_4_1 serde_1_0_66 ]);
    features = mkFeatures (features.serde_json_1_0_19 or {});
  };
  serde_json_1_0_19_features = f: updateFeatures f (rec {
    dtoa_0_4_2.default = true;
    itoa_0_4_1.default = true;
    serde_1_0_66.default = true;
    serde_json_1_0_19."linked-hash-map" =
      (f.serde_json_1_0_19."linked-hash-map" or false) ||
      (f.serde_json_1_0_19.preserve_order or false) ||
      (serde_json_1_0_19.preserve_order or false);
    serde_json_1_0_19.default = (f.serde_json_1_0_19.default or true);
  }) [ dtoa_0_4_2_features itoa_0_4_1_features serde_1_0_66_features ];
  serde_urlencoded_0_5_2 = { features?(serde_urlencoded_0_5_2_features {}) }: serde_urlencoded_0_5_2_ {
    dependencies = mapFeatures features ([ dtoa_0_4_2 itoa_0_4_1 serde_1_0_66 url_1_7_0 ]);
  };
  serde_urlencoded_0_5_2_features = f: updateFeatures f (rec {
    dtoa_0_4_2.default = true;
    itoa_0_4_1.default = true;
    serde_1_0_66.default = true;
    serde_urlencoded_0_5_2.default = (f.serde_urlencoded_0_5_2.default or true);
    url_1_7_0.default = true;
  }) [ dtoa_0_4_2_features itoa_0_4_1_features serde_1_0_66_features url_1_7_0_features ];
  sha1_0_6_0 = { features?(sha1_0_6_0_features {}) }: sha1_0_6_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.sha1_0_6_0 or {});
  };
  sha1_0_6_0_features = f: updateFeatures f (rec {
    sha1_0_6_0.default = (f.sha1_0_6_0.default or true);
  }) [];
  sha2_0_7_1 = { features?(sha2_0_7_1_features {}) }: sha2_0_7_1_ {
    dependencies = mapFeatures features ([ block_buffer_0_3_3 byte_tools_0_2_0 digest_0_7_2 fake_simd_0_1_2 ]);
    features = mkFeatures (features.sha2_0_7_1 or {});
  };
  sha2_0_7_1_features = f: updateFeatures f (rec {
    block_buffer_0_3_3.default = true;
    byte_tools_0_2_0.default = true;
    digest_0_7_2.default = true;
    fake_simd_0_1_2.default = true;
    sha2_0_7_1."sha2-asm" =
      (f.sha2_0_7_1."sha2-asm" or false) ||
      (f.sha2_0_7_1.asm or false) ||
      (sha2_0_7_1.asm or false);
    sha2_0_7_1.default = (f.sha2_0_7_1.default or true);
  }) [ block_buffer_0_3_3_features byte_tools_0_2_0_features digest_0_7_2_features fake_simd_0_1_2_features ];
  shell32_sys_0_1_2 = { features?(shell32_sys_0_1_2_features {}) }: shell32_sys_0_1_2_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  shell32_sys_0_1_2_features = f: updateFeatures f (rec {
    shell32_sys_0_1_2.default = (f.shell32_sys_0_1_2.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  smallvec_0_6_1 = { features?(smallvec_0_6_1_features {}) }: smallvec_0_6_1_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.smallvec_0_6_1 or {});
  };
  smallvec_0_6_1_features = f: updateFeatures f (rec {
    smallvec_0_6_1.default = (f.smallvec_0_6_1.default or true);
    smallvec_0_6_1.std =
      (f.smallvec_0_6_1.std or false) ||
      (f.smallvec_0_6_1.default or false) ||
      (smallvec_0_6_1.default or false);
  }) [];
  stable_deref_trait_1_0_0 = { features?(stable_deref_trait_1_0_0_features {}) }: stable_deref_trait_1_0_0_ {
    features = mkFeatures (features.stable_deref_trait_1_0_0 or {});
  };
  stable_deref_trait_1_0_0_features = f: updateFeatures f (rec {
    stable_deref_trait_1_0_0.default = (f.stable_deref_trait_1_0_0.default or true);
    stable_deref_trait_1_0_0.std =
      (f.stable_deref_trait_1_0_0.std or false) ||
      (f.stable_deref_trait_1_0_0.default or false) ||
      (stable_deref_trait_1_0_0.default or false);
  }) [];
  staticfile_0_3_1 = { features?(staticfile_0_3_1_features {}) }: staticfile_0_3_1_ {
    dependencies = mapFeatures features ([ iron_0_5_1 log_0_3_9 mount_0_3_0 time_0_1_40 url_1_7_0 ]);
    features = mkFeatures (features.staticfile_0_3_1 or {});
  };
  staticfile_0_3_1_features = f: updateFeatures f (rec {
    iron_0_5_1.default = true;
    log_0_3_9.default = true;
    mount_0_3_0.default = true;
    staticfile_0_3_1.default = (f.staticfile_0_3_1.default or true);
    staticfile_0_3_1.filetime =
      (f.staticfile_0_3_1.filetime or false) ||
      (f.staticfile_0_3_1.cache or false) ||
      (staticfile_0_3_1.cache or false);
    time_0_1_40.default = true;
    url_1_7_0.default = true;
  }) [ iron_0_5_1_features log_0_3_9_features mount_0_3_0_features time_0_1_40_features url_1_7_0_features ];
  strsim_0_7_0 = { features?(strsim_0_7_0_features {}) }: strsim_0_7_0_ {};
  strsim_0_7_0_features = f: updateFeatures f (rec {
    strsim_0_7_0.default = (f.strsim_0_7_0.default or true);
  }) [];
  syn_0_14_2 = { features?(syn_0_14_2_features {}) }: syn_0_14_2_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_6 unicode_xid_0_1_0 ]
      ++ (if features.syn_0_14_2.quote or false then [ quote_0_6_3 ] else []));
    features = mkFeatures (features.syn_0_14_2 or {});
  };
  syn_0_14_2_features = f: updateFeatures f (rec {
    proc_macro2_0_4_6."proc-macro" =
      (f.proc_macro2_0_4_6."proc-macro" or false) ||
      (syn_0_14_2."proc-macro" or false) ||
      (f.syn_0_14_2."proc-macro" or false);
    proc_macro2_0_4_6.default = (f.proc_macro2_0_4_6.default or false);
    quote_0_6_3."proc-macro" =
      (f.quote_0_6_3."proc-macro" or false) ||
      (syn_0_14_2."proc-macro" or false) ||
      (f.syn_0_14_2."proc-macro" or false);
    quote_0_6_3.default = (f.quote_0_6_3.default or false);
    syn_0_14_2."clone-impls" =
      (f.syn_0_14_2."clone-impls" or false) ||
      (f.syn_0_14_2.default or false) ||
      (syn_0_14_2.default or false);
    syn_0_14_2."proc-macro" =
      (f.syn_0_14_2."proc-macro" or false) ||
      (f.syn_0_14_2.default or false) ||
      (syn_0_14_2.default or false);
    syn_0_14_2.default = (f.syn_0_14_2.default or true);
    syn_0_14_2.derive =
      (f.syn_0_14_2.derive or false) ||
      (f.syn_0_14_2.default or false) ||
      (syn_0_14_2.default or false);
    syn_0_14_2.parsing =
      (f.syn_0_14_2.parsing or false) ||
      (f.syn_0_14_2.default or false) ||
      (syn_0_14_2.default or false);
    syn_0_14_2.printing =
      (f.syn_0_14_2.printing or false) ||
      (f.syn_0_14_2.default or false) ||
      (syn_0_14_2.default or false);
    syn_0_14_2.quote =
      (f.syn_0_14_2.quote or false) ||
      (f.syn_0_14_2.printing or false) ||
      (syn_0_14_2.printing or false);
    unicode_xid_0_1_0.default = true;
  }) [ proc_macro2_0_4_6_features quote_0_6_3_features unicode_xid_0_1_0_features ];
  syntex_errors_0_58_1 = { features?(syntex_errors_0_58_1_features {}) }: syntex_errors_0_58_1_ {
    dependencies = mapFeatures features ([ libc_0_2_42 rustc_serialize_0_3_24 syntex_pos_0_58_1 term_0_4_6 unicode_xid_0_0_4 ]);
  };
  syntex_errors_0_58_1_features = f: updateFeatures f (rec {
    libc_0_2_42.default = true;
    rustc_serialize_0_3_24.default = true;
    syntex_errors_0_58_1.default = (f.syntex_errors_0_58_1.default or true);
    syntex_pos_0_58_1.default = true;
    term_0_4_6.default = true;
    unicode_xid_0_0_4.default = true;
  }) [ libc_0_2_42_features rustc_serialize_0_3_24_features syntex_pos_0_58_1_features term_0_4_6_features unicode_xid_0_0_4_features ];
  syntex_pos_0_58_1 = { features?(syntex_pos_0_58_1_features {}) }: syntex_pos_0_58_1_ {
    dependencies = mapFeatures features ([ rustc_serialize_0_3_24 ]);
  };
  syntex_pos_0_58_1_features = f: updateFeatures f (rec {
    rustc_serialize_0_3_24.default = true;
    syntex_pos_0_58_1.default = (f.syntex_pos_0_58_1.default or true);
  }) [ rustc_serialize_0_3_24_features ];
  syntex_syntax_0_58_1 = { features?(syntex_syntax_0_58_1_features {}) }: syntex_syntax_0_58_1_ {
    dependencies = mapFeatures features ([ bitflags_0_8_2 log_0_3_9 rustc_serialize_0_3_24 syntex_errors_0_58_1 syntex_pos_0_58_1 unicode_xid_0_0_4 ]);
  };
  syntex_syntax_0_58_1_features = f: updateFeatures f (rec {
    bitflags_0_8_2.default = true;
    log_0_3_9.default = true;
    rustc_serialize_0_3_24.default = true;
    syntex_errors_0_58_1.default = true;
    syntex_pos_0_58_1.default = true;
    syntex_syntax_0_58_1.default = (f.syntex_syntax_0_58_1.default or true);
    unicode_xid_0_0_4.default = true;
  }) [ bitflags_0_8_2_features log_0_3_9_features rustc_serialize_0_3_24_features syntex_errors_0_58_1_features syntex_pos_0_58_1_features unicode_xid_0_0_4_features ];
  tempdir_0_3_7 = { features?(tempdir_0_3_7_features {}) }: tempdir_0_3_7_ {
    dependencies = mapFeatures features ([ rand_0_4_2 remove_dir_all_0_5_1 ]);
  };
  tempdir_0_3_7_features = f: updateFeatures f (rec {
    rand_0_4_2.default = true;
    remove_dir_all_0_5_1.default = true;
    tempdir_0_3_7.default = (f.tempdir_0_3_7.default or true);
  }) [ rand_0_4_2_features remove_dir_all_0_5_1_features ];
  term_0_4_6 = { features?(term_0_4_6_features {}) }: term_0_4_6_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  term_0_4_6_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    term_0_4_6.default = (f.term_0_4_6.default or true);
    winapi_0_2_8.default = true;
  }) [ kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  termion_1_5_1 = { features?(termion_1_5_1_features {}) }: termion_1_5_1_ {
    dependencies = (if !(kernel == "redox") then mapFeatures features ([ libc_0_2_42 ]) else [])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_40 redox_termios_0_1_1 ]) else []);
  };
  termion_1_5_1_features = f: updateFeatures f (rec {
    libc_0_2_42.default = true;
    redox_syscall_0_1_40.default = true;
    redox_termios_0_1_1.default = true;
    termion_1_5_1.default = (f.termion_1_5_1.default or true);
  }) [ libc_0_2_42_features redox_syscall_0_1_40_features redox_termios_0_1_1_features ];
  textwrap_0_9_0 = { features?(textwrap_0_9_0_features {}) }: textwrap_0_9_0_ {
    dependencies = mapFeatures features ([ unicode_width_0_1_5 ]);
  };
  textwrap_0_9_0_features = f: updateFeatures f (rec {
    textwrap_0_9_0.default = (f.textwrap_0_9_0.default or true);
    unicode_width_0_1_5.default = true;
  }) [ unicode_width_0_1_5_features ];
  thread_id_3_3_0 = { features?(thread_id_3_3_0_features {}) }: thread_id_3_3_0_ {
    dependencies = (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_40 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_42 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  thread_id_3_3_0_features = f: updateFeatures f (rec {
    libc_0_2_42.default = true;
    redox_syscall_0_1_40.default = true;
    thread_id_3_3_0.default = (f.thread_id_3_3_0.default or true);
    winapi_0_3_5.default = true;
    winapi_0_3_5.processthreadsapi = true;
  }) [ redox_syscall_0_1_40_features libc_0_2_42_features winapi_0_3_5_features ];
  thread_local_0_3_5 = { features?(thread_local_0_3_5_features {}) }: thread_local_0_3_5_ {
    dependencies = mapFeatures features ([ lazy_static_1_0_1 unreachable_1_0_0 ]);
  };
  thread_local_0_3_5_features = f: updateFeatures f (rec {
    lazy_static_1_0_1.default = true;
    thread_local_0_3_5.default = (f.thread_local_0_3_5.default or true);
    unreachable_1_0_0.default = true;
  }) [ lazy_static_1_0_1_features unreachable_1_0_0_features ];
  threadpool_1_7_1 = { features?(threadpool_1_7_1_features {}) }: threadpool_1_7_1_ {
    dependencies = mapFeatures features ([ num_cpus_1_8_0 ]);
  };
  threadpool_1_7_1_features = f: updateFeatures f (rec {
    num_cpus_1_8_0.default = true;
    threadpool_1_7_1.default = (f.threadpool_1_7_1.default or true);
  }) [ num_cpus_1_8_0_features ];
  time_0_1_40 = { features?(time_0_1_40_features {}) }: time_0_1_40_ {
    dependencies = mapFeatures features ([ libc_0_2_42 ])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_40 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  time_0_1_40_features = f: updateFeatures f (rec {
    libc_0_2_42.default = true;
    redox_syscall_0_1_40.default = true;
    time_0_1_40.default = (f.time_0_1_40.default or true);
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwinbase = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.ntdef = true;
    winapi_0_3_5.profileapi = true;
    winapi_0_3_5.std = true;
    winapi_0_3_5.sysinfoapi = true;
    winapi_0_3_5.timezoneapi = true;
  }) [ libc_0_2_42_features redox_syscall_0_1_40_features winapi_0_3_5_features ];
  toml_0_4_6 = { features?(toml_0_4_6_features {}) }: toml_0_4_6_ {
    dependencies = mapFeatures features ([ serde_1_0_66 ]);
  };
  toml_0_4_6_features = f: updateFeatures f (rec {
    serde_1_0_66.default = true;
    toml_0_4_6.default = (f.toml_0_4_6.default or true);
  }) [ serde_1_0_66_features ];
  traitobject_0_1_0 = { features?(traitobject_0_1_0_features {}) }: traitobject_0_1_0_ {};
  traitobject_0_1_0_features = f: updateFeatures f (rec {
    traitobject_0_1_0.default = (f.traitobject_0_1_0.default or true);
  }) [];
  twox_hash_1_1_0 = { features?(twox_hash_1_1_0_features {}) }: twox_hash_1_1_0_ {
    dependencies = mapFeatures features ([ rand_0_3_22 ]);
  };
  twox_hash_1_1_0_features = f: updateFeatures f (rec {
    rand_0_3_22.default = true;
    twox_hash_1_1_0.default = (f.twox_hash_1_1_0.default or true);
  }) [ rand_0_3_22_features ];
  typeable_0_1_2 = { features?(typeable_0_1_2_features {}) }: typeable_0_1_2_ {};
  typeable_0_1_2_features = f: updateFeatures f (rec {
    typeable_0_1_2.default = (f.typeable_0_1_2.default or true);
  }) [];
  typemap_0_3_3 = { features?(typemap_0_3_3_features {}) }: typemap_0_3_3_ {
    dependencies = mapFeatures features ([ unsafe_any_0_4_2 ]);
  };
  typemap_0_3_3_features = f: updateFeatures f (rec {
    typemap_0_3_3.default = (f.typemap_0_3_3.default or true);
    unsafe_any_0_4_2.default = true;
  }) [ unsafe_any_0_4_2_features ];
  typenum_1_10_0 = { features?(typenum_1_10_0_features {}) }: typenum_1_10_0_ {
    features = mkFeatures (features.typenum_1_10_0 or {});
  };
  typenum_1_10_0_features = f: updateFeatures f (rec {
    typenum_1_10_0.default = (f.typenum_1_10_0.default or true);
  }) [];
  ucd_util_0_1_1 = { features?(ucd_util_0_1_1_features {}) }: ucd_util_0_1_1_ {};
  ucd_util_0_1_1_features = f: updateFeatures f (rec {
    ucd_util_0_1_1.default = (f.ucd_util_0_1_1.default or true);
  }) [];
  unicase_1_4_2 = { features?(unicase_1_4_2_features {}) }: unicase_1_4_2_ {
    dependencies = mapFeatures features ([]);
    buildDependencies = mapFeatures features ([ version_check_0_1_3 ]);
    features = mkFeatures (features.unicase_1_4_2 or {});
  };
  unicase_1_4_2_features = f: updateFeatures f (rec {
    unicase_1_4_2.default = (f.unicase_1_4_2.default or true);
    unicase_1_4_2.heapsize =
      (f.unicase_1_4_2.heapsize or false) ||
      (f.unicase_1_4_2.heap_size or false) ||
      (unicase_1_4_2.heap_size or false);
    unicase_1_4_2.heapsize_plugin =
      (f.unicase_1_4_2.heapsize_plugin or false) ||
      (f.unicase_1_4_2.heap_size or false) ||
      (unicase_1_4_2.heap_size or false);
    version_check_0_1_3.default = true;
  }) [ version_check_0_1_3_features ];
  unicase_2_1_0 = { features?(unicase_2_1_0_features {}) }: unicase_2_1_0_ {
    buildDependencies = mapFeatures features ([ version_check_0_1_3 ]);
    features = mkFeatures (features.unicase_2_1_0 or {});
  };
  unicase_2_1_0_features = f: updateFeatures f (rec {
    unicase_2_1_0.default = (f.unicase_2_1_0.default or true);
    version_check_0_1_3.default = true;
  }) [ version_check_0_1_3_features ];
  unicode_bidi_0_3_4 = { features?(unicode_bidi_0_3_4_features {}) }: unicode_bidi_0_3_4_ {
    dependencies = mapFeatures features ([ matches_0_1_6 ]);
    features = mkFeatures (features.unicode_bidi_0_3_4 or {});
  };
  unicode_bidi_0_3_4_features = f: updateFeatures f (rec {
    matches_0_1_6.default = true;
    unicode_bidi_0_3_4.default = (f.unicode_bidi_0_3_4.default or true);
    unicode_bidi_0_3_4.flame =
      (f.unicode_bidi_0_3_4.flame or false) ||
      (f.unicode_bidi_0_3_4.flame_it or false) ||
      (unicode_bidi_0_3_4.flame_it or false);
    unicode_bidi_0_3_4.flamer =
      (f.unicode_bidi_0_3_4.flamer or false) ||
      (f.unicode_bidi_0_3_4.flame_it or false) ||
      (unicode_bidi_0_3_4.flame_it or false);
    unicode_bidi_0_3_4.serde =
      (f.unicode_bidi_0_3_4.serde or false) ||
      (f.unicode_bidi_0_3_4.with_serde or false) ||
      (unicode_bidi_0_3_4.with_serde or false);
  }) [ matches_0_1_6_features ];
  unicode_normalization_0_1_7 = { features?(unicode_normalization_0_1_7_features {}) }: unicode_normalization_0_1_7_ {};
  unicode_normalization_0_1_7_features = f: updateFeatures f (rec {
    unicode_normalization_0_1_7.default = (f.unicode_normalization_0_1_7.default or true);
  }) [];
  unicode_width_0_1_5 = { features?(unicode_width_0_1_5_features {}) }: unicode_width_0_1_5_ {
    features = mkFeatures (features.unicode_width_0_1_5 or {});
  };
  unicode_width_0_1_5_features = f: updateFeatures f (rec {
    unicode_width_0_1_5.default = (f.unicode_width_0_1_5.default or true);
  }) [];
  unicode_xid_0_0_4 = { features?(unicode_xid_0_0_4_features {}) }: unicode_xid_0_0_4_ {
    features = mkFeatures (features.unicode_xid_0_0_4 or {});
  };
  unicode_xid_0_0_4_features = f: updateFeatures f (rec {
    unicode_xid_0_0_4.default = (f.unicode_xid_0_0_4.default or true);
  }) [];
  unicode_xid_0_1_0 = { features?(unicode_xid_0_1_0_features {}) }: unicode_xid_0_1_0_ {
    features = mkFeatures (features.unicode_xid_0_1_0 or {});
  };
  unicode_xid_0_1_0_features = f: updateFeatures f (rec {
    unicode_xid_0_1_0.default = (f.unicode_xid_0_1_0.default or true);
  }) [];
  unreachable_1_0_0 = { features?(unreachable_1_0_0_features {}) }: unreachable_1_0_0_ {
    dependencies = mapFeatures features ([ void_1_0_2 ]);
  };
  unreachable_1_0_0_features = f: updateFeatures f (rec {
    unreachable_1_0_0.default = (f.unreachable_1_0_0.default or true);
    void_1_0_2.default = (f.void_1_0_2.default or false);
  }) [ void_1_0_2_features ];
  unsafe_any_0_4_2 = { features?(unsafe_any_0_4_2_features {}) }: unsafe_any_0_4_2_ {
    dependencies = mapFeatures features ([ traitobject_0_1_0 ]);
  };
  unsafe_any_0_4_2_features = f: updateFeatures f (rec {
    traitobject_0_1_0.default = true;
    unsafe_any_0_4_2.default = (f.unsafe_any_0_4_2.default or true);
  }) [ traitobject_0_1_0_features ];
  url_1_7_0 = { features?(url_1_7_0_features {}) }: url_1_7_0_ {
    dependencies = mapFeatures features ([ idna_0_1_4 matches_0_1_6 percent_encoding_1_0_1 ]);
    features = mkFeatures (features.url_1_7_0 or {});
  };
  url_1_7_0_features = f: updateFeatures f (rec {
    idna_0_1_4.default = true;
    matches_0_1_6.default = true;
    percent_encoding_1_0_1.default = true;
    url_1_7_0.default = (f.url_1_7_0.default or true);
    url_1_7_0.encoding =
      (f.url_1_7_0.encoding or false) ||
      (f.url_1_7_0.query_encoding or false) ||
      (url_1_7_0.query_encoding or false);
    url_1_7_0.heapsize =
      (f.url_1_7_0.heapsize or false) ||
      (f.url_1_7_0.heap_size or false) ||
      (url_1_7_0.heap_size or false);
  }) [ idna_0_1_4_features matches_0_1_6_features percent_encoding_1_0_1_features ];
  utf8_ranges_1_0_0 = { features?(utf8_ranges_1_0_0_features {}) }: utf8_ranges_1_0_0_ {};
  utf8_ranges_1_0_0_features = f: updateFeatures f (rec {
    utf8_ranges_1_0_0.default = (f.utf8_ranges_1_0_0.default or true);
  }) [];
  uuid_0_6_5 = { features?(uuid_0_6_5_features {}) }: uuid_0_6_5_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_3 ]
      ++ (if features.uuid_0_6_5.rand or false then [ rand_0_4_2 ] else [])
      ++ (if features.uuid_0_6_5."sha1" or false then [ sha1_0_6_0 ] else []));
    features = mkFeatures (features.uuid_0_6_5 or {});
  };
  uuid_0_6_5_features = f: updateFeatures f (rec {
    cfg_if_0_1_3.default = true;
    rand_0_4_2.default = true;
    sha1_0_6_0.default = true;
    uuid_0_6_5."md5" =
      (f.uuid_0_6_5."md5" or false) ||
      (f.uuid_0_6_5."v3" or false) ||
      (uuid_0_6_5."v3" or false);
    uuid_0_6_5."sha1" =
      (f.uuid_0_6_5."sha1" or false) ||
      (f.uuid_0_6_5."v5" or false) ||
      (uuid_0_6_5."v5" or false);
    uuid_0_6_5.byteorder =
      (f.uuid_0_6_5.byteorder or false) ||
      (f.uuid_0_6_5."u128" or false) ||
      (uuid_0_6_5."u128" or false);
    uuid_0_6_5.default = (f.uuid_0_6_5.default or true);
    uuid_0_6_5.nightly =
      (f.uuid_0_6_5.nightly or false) ||
      (f.uuid_0_6_5.const_fn or false) ||
      (uuid_0_6_5.const_fn or false);
    uuid_0_6_5.rand =
      (f.uuid_0_6_5.rand or false) ||
      (f.uuid_0_6_5."v3" or false) ||
      (uuid_0_6_5."v3" or false) ||
      (f.uuid_0_6_5."v4" or false) ||
      (uuid_0_6_5."v4" or false) ||
      (f.uuid_0_6_5."v5" or false) ||
      (uuid_0_6_5."v5" or false);
    uuid_0_6_5.std =
      (f.uuid_0_6_5.std or false) ||
      (f.uuid_0_6_5.default or false) ||
      (uuid_0_6_5.default or false) ||
      (f.uuid_0_6_5.use_std or false) ||
      (uuid_0_6_5.use_std or false);
  }) [ cfg_if_0_1_3_features rand_0_4_2_features sha1_0_6_0_features ];
  vcpkg_0_2_3 = { features?(vcpkg_0_2_3_features {}) }: vcpkg_0_2_3_ {};
  vcpkg_0_2_3_features = f: updateFeatures f (rec {
    vcpkg_0_2_3.default = (f.vcpkg_0_2_3.default or true);
  }) [];
  vec_map_0_8_1 = { features?(vec_map_0_8_1_features {}) }: vec_map_0_8_1_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.vec_map_0_8_1 or {});
  };
  vec_map_0_8_1_features = f: updateFeatures f (rec {
    vec_map_0_8_1.default = (f.vec_map_0_8_1.default or true);
    vec_map_0_8_1.serde =
      (f.vec_map_0_8_1.serde or false) ||
      (f.vec_map_0_8_1.eders or false) ||
      (vec_map_0_8_1.eders or false);
  }) [];
  version_check_0_1_3 = { features?(version_check_0_1_3_features {}) }: version_check_0_1_3_ {};
  version_check_0_1_3_features = f: updateFeatures f (rec {
    version_check_0_1_3.default = (f.version_check_0_1_3.default or true);
  }) [];
  void_1_0_2 = { features?(void_1_0_2_features {}) }: void_1_0_2_ {
    features = mkFeatures (features.void_1_0_2 or {});
  };
  void_1_0_2_features = f: updateFeatures f (rec {
    void_1_0_2.default = (f.void_1_0_2.default or true);
    void_1_0_2.std =
      (f.void_1_0_2.std or false) ||
      (f.void_1_0_2.default or false) ||
      (void_1_0_2.default or false);
  }) [];
  wait_timeout_0_1_5 = { features?(wait_timeout_0_1_5_features {}) }: wait_timeout_0_1_5_ {
    dependencies = mapFeatures features ([ libc_0_2_42 ]);
  };
  wait_timeout_0_1_5_features = f: updateFeatures f (rec {
    libc_0_2_42.default = true;
    wait_timeout_0_1_5.default = (f.wait_timeout_0_1_5.default or true);
  }) [ libc_0_2_42_features ];
  winapi_0_2_8 = { features?(winapi_0_2_8_features {}) }: winapi_0_2_8_ {};
  winapi_0_2_8_features = f: updateFeatures f (rec {
    winapi_0_2_8.default = (f.winapi_0_2_8.default or true);
  }) [];
  winapi_0_3_5 = { features?(winapi_0_3_5_features {}) }: winapi_0_3_5_ {
    dependencies = (if kernel == "i686-pc-windows-gnu" then mapFeatures features ([ winapi_i686_pc_windows_gnu_0_4_0 ]) else [])
      ++ (if kernel == "x86_64-pc-windows-gnu" then mapFeatures features ([ winapi_x86_64_pc_windows_gnu_0_4_0 ]) else []);
    features = mkFeatures (features.winapi_0_3_5 or {});
  };
  winapi_0_3_5_features = f: updateFeatures f (rec {
    winapi_0_3_5.default = (f.winapi_0_3_5.default or true);
    winapi_i686_pc_windows_gnu_0_4_0.default = true;
    winapi_x86_64_pc_windows_gnu_0_4_0.default = true;
  }) [ winapi_i686_pc_windows_gnu_0_4_0_features winapi_x86_64_pc_windows_gnu_0_4_0_features ];
  winapi_build_0_1_1 = { features?(winapi_build_0_1_1_features {}) }: winapi_build_0_1_1_ {};
  winapi_build_0_1_1_features = f: updateFeatures f (rec {
    winapi_build_0_1_1.default = (f.winapi_build_0_1_1.default or true);
  }) [];
  winapi_i686_pc_windows_gnu_0_4_0 = { features?(winapi_i686_pc_windows_gnu_0_4_0_features {}) }: winapi_i686_pc_windows_gnu_0_4_0_ {};
  winapi_i686_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_i686_pc_windows_gnu_0_4_0.default = (f.winapi_i686_pc_windows_gnu_0_4_0.default or true);
  }) [];
  winapi_x86_64_pc_windows_gnu_0_4_0 = { features?(winapi_x86_64_pc_windows_gnu_0_4_0_features {}) }: winapi_x86_64_pc_windows_gnu_0_4_0_ {};
  winapi_x86_64_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_x86_64_pc_windows_gnu_0_4_0.default = (f.winapi_x86_64_pc_windows_gnu_0_4_0.default or true);
  }) [];
  xdg_2_1_0 = { features?(xdg_2_1_0_features {}) }: xdg_2_1_0_ {};
  xdg_2_1_0_features = f: updateFeatures f (rec {
    xdg_2_1_0.default = (f.xdg_2_1_0.default or true);
  }) [];
  zip_0_2_8 = { features?(zip_0_2_8_features {}) }: zip_0_2_8_ {
    dependencies = mapFeatures features ([ flate2_1_0_1 msdos_time_0_1_6 podio_0_1_6 time_0_1_40 ]);
  };
  zip_0_2_8_features = f: updateFeatures f (rec {
    flate2_1_0_1.default = (f.flate2_1_0_1.default or false);
    flate2_1_0_1.rust_backend = true;
    msdos_time_0_1_6.default = true;
    podio_0_1_6.default = true;
    time_0_1_40.default = true;
    zip_0_2_8."bzip2" =
      (f.zip_0_2_8."bzip2" or false) ||
      (f.zip_0_2_8.default or false) ||
      (zip_0_2_8.default or false);
    zip_0_2_8.default = (f.zip_0_2_8.default or true);
  }) [ flate2_1_0_1_features msdos_time_0_1_6_features podio_0_1_6_features time_0_1_40_features ];
}
